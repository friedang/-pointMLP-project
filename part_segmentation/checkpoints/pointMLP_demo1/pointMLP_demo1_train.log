Namespace(batch_size=32, epochs=350, eval=False, exp_name='pointMLP_demo1', lr=0.003, manual_seed=None, model='pointMLP', model_type='insiou', momentum=0.9, no_cuda=False, num_points=2048, resume=False, scheduler='step', step=40, test_batch_size=32, use_sgd=False, workers=12)
Using CPU
PointMLP(
  (embedding): ConvBNReLU1D(
    (act): ReLU(inplace=True)
    (net): Sequential(
      (0): Conv1d(6, 64, kernel_size=(1,), stride=(1,))
      (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): ReLU(inplace=True)
    )
  )
  (local_grouper_list): ModuleList(
    (0): LocalGrouper()
    (1): LocalGrouper()
    (2): LocalGrouper()
    (3): LocalGrouper()
  )
  (pre_blocks_list): ModuleList(
    (0): PreExtraction(
      (transfer): ConvBNReLU1D(
        (act): ReLU(inplace=True)
        (net): Sequential(
          (0): Conv1d(131, 128, kernel_size=(1,), stride=(1,))
          (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
        )
      )
      (operation): Sequential(
        (0): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
      )
    )
    (1): PreExtraction(
      (transfer): ConvBNReLU1D(
        (act): ReLU(inplace=True)
        (net): Sequential(
          (0): Conv1d(259, 256, kernel_size=(1,), stride=(1,))
          (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
        )
      )
      (operation): Sequential(
        (0): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
      )
    )
    (2): PreExtraction(
      (transfer): ConvBNReLU1D(
        (act): ReLU(inplace=True)
        (net): Sequential(
          (0): Conv1d(515, 512, kernel_size=(1,), stride=(1,))
          (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
        )
      )
      (operation): Sequential(
        (0): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
      )
    )
    (3): PreExtraction(
      (transfer): ConvBNReLU1D(
        (act): ReLU(inplace=True)
        (net): Sequential(
          (0): Conv1d(1027, 1024, kernel_size=(1,), stride=(1,))
          (1): BatchNorm1d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
        )
      )
      (operation): Sequential(
        (0): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(1024, 1024, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(1024, 1024, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(1024, 1024, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(1024, 1024, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
      )
    )
  )
  (pos_blocks_list): ModuleList(
    (0): PosExtraction(
      (operation): Sequential(
        (0): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
      )
    )
    (1): PosExtraction(
      (operation): Sequential(
        (0): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
      )
    )
    (2): PosExtraction(
      (operation): Sequential(
        (0): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
      )
    )
    (3): PosExtraction(
      (operation): Sequential(
        (0): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(1024, 1024, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(1024, 1024, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(1024, 1024, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(1024, 1024, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
      )
    )
  )
  (decode_list): ModuleList(
    (0): PointNetFeaturePropagation(
      (fuse): ConvBNReLU1D(
        (act): ReLU(inplace=True)
        (net): Sequential(
          (0): Conv1d(1536, 512, kernel_size=(1,), stride=(1,))
          (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
        )
      )
      (extraction): PosExtraction(
        (operation): Sequential(
          (0): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (2): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (3): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
        )
      )
    )
    (1): PointNetFeaturePropagation(
      (fuse): ConvBNReLU1D(
        (act): ReLU(inplace=True)
        (net): Sequential(
          (0): Conv1d(768, 256, kernel_size=(1,), stride=(1,))
          (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
        )
      )
      (extraction): PosExtraction(
        (operation): Sequential(
          (0): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (2): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (3): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
        )
      )
    )
    (2): PointNetFeaturePropagation(
      (fuse): ConvBNReLU1D(
        (act): ReLU(inplace=True)
        (net): Sequential(
          (0): Conv1d(384, 128, kernel_size=(1,), stride=(1,))
          (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
        )
      )
      (extraction): PosExtraction(
        (operation): Sequential(
          (0): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (2): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (3): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
        )
      )
    )
    (3): PointNetFeaturePropagation(
      (fuse): ConvBNReLU1D(
        (act): ReLU(inplace=True)
        (net): Sequential(
          (0): Conv1d(192, 128, kernel_size=(1,), stride=(1,))
          (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
        )
      )
      (extraction): PosExtraction(
        (operation): Sequential(
          (0): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (2): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (3): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
        )
      )
    )
  )
  (act): ReLU(inplace=True)
  (cls_map): Sequential(
    (0): ConvBNReLU1D(
      (act): ReLU(inplace=True)
      (net): Sequential(
        (0): Conv1d(16, 64, kernel_size=(1,), stride=(1,))
        (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
      )
    )
    (1): ConvBNReLU1D(
      (act): ReLU(inplace=True)
      (net): Sequential(
        (0): Conv1d(64, 64, kernel_size=(1,), stride=(1,))
        (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
      )
    )
  )
  (gmp_map_list): ModuleList(
    (0): ConvBNReLU1D(
      (act): ReLU(inplace=True)
      (net): Sequential(
        (0): Conv1d(1024, 64, kernel_size=(1,), stride=(1,))
        (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
      )
    )
    (1): ConvBNReLU1D(
      (act): ReLU(inplace=True)
      (net): Sequential(
        (0): Conv1d(512, 64, kernel_size=(1,), stride=(1,))
        (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
      )
    )
    (2): ConvBNReLU1D(
      (act): ReLU(inplace=True)
      (net): Sequential(
        (0): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
      )
    )
    (3): ConvBNReLU1D(
      (act): ReLU(inplace=True)
      (net): Sequential(
        (0): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
      )
    )
    (4): ConvBNReLU1D(
      (act): ReLU(inplace=True)
      (net): Sequential(
        (0): Conv1d(64, 64, kernel_size=(1,), stride=(1,))
        (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
      )
    )
  )
  (gmp_map_end): ConvBNReLU1D(
    (act): ReLU(inplace=True)
    (net): Sequential(
      (0): Conv1d(320, 64, kernel_size=(1,), stride=(1,))
      (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): ReLU(inplace=True)
    )
  )
  (classifier): Sequential(
    (0): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
    (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): Dropout(p=0.5, inplace=False)
    (3): Conv1d(128, 50, kernel_size=(1,), stride=(1,))
  )
)
Namespace(batch_size=32, epochs=350, eval=False, exp_name='pointMLP_demo1', lr=0.003, manual_seed=None, model='pointMLP', model_type='insiou', momentum=0.9, no_cuda=False, num_points=2048, resume=False, scheduler='step', step=40, test_batch_size=32, use_sgd=False, workers=12)
Using CPU
PointMLP(
  (embedding): ConvBNReLU1D(
    (act): ReLU(inplace=True)
    (net): Sequential(
      (0): Conv1d(6, 64, kernel_size=(1,), stride=(1,))
      (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): ReLU(inplace=True)
    )
  )
  (local_grouper_list): ModuleList(
    (0): LocalGrouper()
    (1): LocalGrouper()
    (2): LocalGrouper()
    (3): LocalGrouper()
  )
  (pre_blocks_list): ModuleList(
    (0): PreExtraction(
      (transfer): ConvBNReLU1D(
        (act): ReLU(inplace=True)
        (net): Sequential(
          (0): Conv1d(131, 128, kernel_size=(1,), stride=(1,))
          (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
        )
      )
      (operation): Sequential(
        (0): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
      )
    )
    (1): PreExtraction(
      (transfer): ConvBNReLU1D(
        (act): ReLU(inplace=True)
        (net): Sequential(
          (0): Conv1d(259, 256, kernel_size=(1,), stride=(1,))
          (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
        )
      )
      (operation): Sequential(
        (0): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
      )
    )
    (2): PreExtraction(
      (transfer): ConvBNReLU1D(
        (act): ReLU(inplace=True)
        (net): Sequential(
          (0): Conv1d(515, 512, kernel_size=(1,), stride=(1,))
          (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
        )
      )
      (operation): Sequential(
        (0): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
      )
    )
    (3): PreExtraction(
      (transfer): ConvBNReLU1D(
        (act): ReLU(inplace=True)
        (net): Sequential(
          (0): Conv1d(1027, 1024, kernel_size=(1,), stride=(1,))
          (1): BatchNorm1d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
        )
      )
      (operation): Sequential(
        (0): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(1024, 1024, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(1024, 1024, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(1024, 1024, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(1024, 1024, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
      )
    )
  )
  (pos_blocks_list): ModuleList(
    (0): PosExtraction(
      (operation): Sequential(
        (0): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
      )
    )
    (1): PosExtraction(
      (operation): Sequential(
        (0): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
      )
    )
    (2): PosExtraction(
      (operation): Sequential(
        (0): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
      )
    )
    (3): PosExtraction(
      (operation): Sequential(
        (0): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(1024, 1024, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(1024, 1024, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(1024, 1024, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(1024, 1024, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
      )
    )
  )
  (decode_list): ModuleList(
    (0): PointNetFeaturePropagation(
      (fuse): ConvBNReLU1D(
        (act): ReLU(inplace=True)
        (net): Sequential(
          (0): Conv1d(1536, 512, kernel_size=(1,), stride=(1,))
          (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
        )
      )
      (extraction): PosExtraction(
        (operation): Sequential(
          (0): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (2): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (3): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
        )
      )
    )
    (1): PointNetFeaturePropagation(
      (fuse): ConvBNReLU1D(
        (act): ReLU(inplace=True)
        (net): Sequential(
          (0): Conv1d(768, 256, kernel_size=(1,), stride=(1,))
          (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
        )
      )
      (extraction): PosExtraction(
        (operation): Sequential(
          (0): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (2): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (3): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
        )
      )
    )
    (2): PointNetFeaturePropagation(
      (fuse): ConvBNReLU1D(
        (act): ReLU(inplace=True)
        (net): Sequential(
          (0): Conv1d(384, 128, kernel_size=(1,), stride=(1,))
          (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
        )
      )
      (extraction): PosExtraction(
        (operation): Sequential(
          (0): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (2): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (3): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
        )
      )
    )
    (3): PointNetFeaturePropagation(
      (fuse): ConvBNReLU1D(
        (act): ReLU(inplace=True)
        (net): Sequential(
          (0): Conv1d(192, 128, kernel_size=(1,), stride=(1,))
          (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
        )
      )
      (extraction): PosExtraction(
        (operation): Sequential(
          (0): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (2): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (3): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
        )
      )
    )
  )
  (act): ReLU(inplace=True)
  (cls_map): Sequential(
    (0): ConvBNReLU1D(
      (act): ReLU(inplace=True)
      (net): Sequential(
        (0): Conv1d(16, 64, kernel_size=(1,), stride=(1,))
        (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
      )
    )
    (1): ConvBNReLU1D(
      (act): ReLU(inplace=True)
      (net): Sequential(
        (0): Conv1d(64, 64, kernel_size=(1,), stride=(1,))
        (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
      )
    )
  )
  (gmp_map_list): ModuleList(
    (0): ConvBNReLU1D(
      (act): ReLU(inplace=True)
      (net): Sequential(
        (0): Conv1d(1024, 64, kernel_size=(1,), stride=(1,))
        (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
      )
    )
    (1): ConvBNReLU1D(
      (act): ReLU(inplace=True)
      (net): Sequential(
        (0): Conv1d(512, 64, kernel_size=(1,), stride=(1,))
        (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
      )
    )
    (2): ConvBNReLU1D(
      (act): ReLU(inplace=True)
      (net): Sequential(
        (0): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
      )
    )
    (3): ConvBNReLU1D(
      (act): ReLU(inplace=True)
      (net): Sequential(
        (0): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
      )
    )
    (4): ConvBNReLU1D(
      (act): ReLU(inplace=True)
      (net): Sequential(
        (0): Conv1d(64, 64, kernel_size=(1,), stride=(1,))
        (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
      )
    )
  )
  (gmp_map_end): ConvBNReLU1D(
    (act): ReLU(inplace=True)
    (net): Sequential(
      (0): Conv1d(320, 64, kernel_size=(1,), stride=(1,))
      (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): ReLU(inplace=True)
    )
  )
  (classifier): Sequential(
    (0): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
    (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): Dropout(p=0.5, inplace=False)
    (3): Conv1d(128, 50, kernel_size=(1,), stride=(1,))
  )
)
Namespace(batch_size=32, epochs=350, eval=False, exp_name='pointMLP_demo1', lr=0.003, manual_seed=None, model='pointMLP', model_type='insiou', momentum=0.9, no_cuda=False, num_points=2048, resume=False, scheduler='step', step=40, test_batch_size=32, use_sgd=False, workers=12)
Using GPU
PointMLP(
  (embedding): ConvBNReLU1D(
    (act): ReLU(inplace=True)
    (net): Sequential(
      (0): Conv1d(6, 64, kernel_size=(1,), stride=(1,))
      (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): ReLU(inplace=True)
    )
  )
  (local_grouper_list): ModuleList(
    (0): LocalGrouper()
    (1): LocalGrouper()
    (2): LocalGrouper()
    (3): LocalGrouper()
  )
  (pre_blocks_list): ModuleList(
    (0): PreExtraction(
      (transfer): ConvBNReLU1D(
        (act): ReLU(inplace=True)
        (net): Sequential(
          (0): Conv1d(131, 128, kernel_size=(1,), stride=(1,))
          (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
        )
      )
      (operation): Sequential(
        (0): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
      )
    )
    (1): PreExtraction(
      (transfer): ConvBNReLU1D(
        (act): ReLU(inplace=True)
        (net): Sequential(
          (0): Conv1d(259, 256, kernel_size=(1,), stride=(1,))
          (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
        )
      )
      (operation): Sequential(
        (0): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
      )
    )
    (2): PreExtraction(
      (transfer): ConvBNReLU1D(
        (act): ReLU(inplace=True)
        (net): Sequential(
          (0): Conv1d(515, 512, kernel_size=(1,), stride=(1,))
          (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
        )
      )
      (operation): Sequential(
        (0): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
      )
    )
    (3): PreExtraction(
      (transfer): ConvBNReLU1D(
        (act): ReLU(inplace=True)
        (net): Sequential(
          (0): Conv1d(1027, 1024, kernel_size=(1,), stride=(1,))
          (1): BatchNorm1d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
        )
      )
      (operation): Sequential(
        (0): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(1024, 1024, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(1024, 1024, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(1024, 1024, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(1024, 1024, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
      )
    )
  )
  (pos_blocks_list): ModuleList(
    (0): PosExtraction(
      (operation): Sequential(
        (0): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
      )
    )
    (1): PosExtraction(
      (operation): Sequential(
        (0): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
      )
    )
    (2): PosExtraction(
      (operation): Sequential(
        (0): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
      )
    )
    (3): PosExtraction(
      (operation): Sequential(
        (0): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(1024, 1024, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(1024, 1024, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(1024, 1024, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(1024, 1024, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
      )
    )
  )
  (decode_list): ModuleList(
    (0): PointNetFeaturePropagation(
      (fuse): ConvBNReLU1D(
        (act): ReLU(inplace=True)
        (net): Sequential(
          (0): Conv1d(1536, 512, kernel_size=(1,), stride=(1,))
          (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
        )
      )
      (extraction): PosExtraction(
        (operation): Sequential(
          (0): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (2): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (3): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
        )
      )
    )
    (1): PointNetFeaturePropagation(
      (fuse): ConvBNReLU1D(
        (act): ReLU(inplace=True)
        (net): Sequential(
          (0): Conv1d(768, 256, kernel_size=(1,), stride=(1,))
          (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
        )
      )
      (extraction): PosExtraction(
        (operation): Sequential(
          (0): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (2): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (3): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
        )
      )
    )
    (2): PointNetFeaturePropagation(
      (fuse): ConvBNReLU1D(
        (act): ReLU(inplace=True)
        (net): Sequential(
          (0): Conv1d(384, 128, kernel_size=(1,), stride=(1,))
          (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
        )
      )
      (extraction): PosExtraction(
        (operation): Sequential(
          (0): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (2): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (3): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
        )
      )
    )
    (3): PointNetFeaturePropagation(
      (fuse): ConvBNReLU1D(
        (act): ReLU(inplace=True)
        (net): Sequential(
          (0): Conv1d(192, 128, kernel_size=(1,), stride=(1,))
          (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
        )
      )
      (extraction): PosExtraction(
        (operation): Sequential(
          (0): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (2): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (3): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
        )
      )
    )
  )
  (act): ReLU(inplace=True)
  (cls_map): Sequential(
    (0): ConvBNReLU1D(
      (act): ReLU(inplace=True)
      (net): Sequential(
        (0): Conv1d(16, 64, kernel_size=(1,), stride=(1,))
        (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
      )
    )
    (1): ConvBNReLU1D(
      (act): ReLU(inplace=True)
      (net): Sequential(
        (0): Conv1d(64, 64, kernel_size=(1,), stride=(1,))
        (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
      )
    )
  )
  (gmp_map_list): ModuleList(
    (0): ConvBNReLU1D(
      (act): ReLU(inplace=True)
      (net): Sequential(
        (0): Conv1d(1024, 64, kernel_size=(1,), stride=(1,))
        (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
      )
    )
    (1): ConvBNReLU1D(
      (act): ReLU(inplace=True)
      (net): Sequential(
        (0): Conv1d(512, 64, kernel_size=(1,), stride=(1,))
        (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
      )
    )
    (2): ConvBNReLU1D(
      (act): ReLU(inplace=True)
      (net): Sequential(
        (0): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
      )
    )
    (3): ConvBNReLU1D(
      (act): ReLU(inplace=True)
      (net): Sequential(
        (0): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
      )
    )
    (4): ConvBNReLU1D(
      (act): ReLU(inplace=True)
      (net): Sequential(
        (0): Conv1d(64, 64, kernel_size=(1,), stride=(1,))
        (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
      )
    )
  )
  (gmp_map_end): ConvBNReLU1D(
    (act): ReLU(inplace=True)
    (net): Sequential(
      (0): Conv1d(320, 64, kernel_size=(1,), stride=(1,))
      (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): ReLU(inplace=True)
    )
  )
  (classifier): Sequential(
    (0): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
    (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): Dropout(p=0.5, inplace=False)
    (3): Conv1d(128, 50, kernel_size=(1,), stride=(1,))
  )
)
Learning rate: 0.003000
Train 1, loss: 0.414418, train acc: 0.870819, train ins_iou: 0.718799
Test 1, loss: 0.303994, test acc: 0.884569  test ins_iou: 0.746647
Max Acc:0.88457
Max instance iou:0.74665
aero iou: 0.7089352
bag iou: 0.6561329
cap iou: 0.46895066
car iou: 0.5982595
chair iou: 0.8294302
ear iou: 0.52162874
guitar iou: 0.81614673
knife iou: 0.80222434
lamp iou: 0.65910465
lapt iou: 0.9442337
moto iou: 0.23435365
mug iou: 0.7412442
Pistol iou: 0.61648107
rock iou: 0.40670094
stake iou: 0.6240271
table iou: 0.76855457
Max class iou:0.64978
Learning rate: 0.003000
Train 2, loss: 0.254415, train acc: 0.910172, train ins_iou: 0.781677
Test 2, loss: 0.247684, test acc: 0.911154  test ins_iou: 0.779306
Max Acc:0.91115
Max instance iou:0.77931
aero iou: 0.7537601
bag iou: 0.65678304
cap iou: 0.64476097
car iou: 0.6526976
chair iou: 0.8637167
ear iou: 0.59468114
guitar iou: 0.8531178
knife iou: 0.8275197
lamp iou: 0.72128314
lapt iou: 0.94820136
moto iou: 0.3475301
mug iou: 0.7323299
Pistol iou: 0.6786514
rock iou: 0.294564
stake iou: 0.6460208
table iou: 0.7795862
Max class iou:0.68720
Learning rate: 0.003000
Train 3, loss: 0.233360, train acc: 0.917239, train ins_iou: 0.794955
Test 3, loss: 0.228795, test acc: 0.915995  test ins_iou: 0.792596
Max Acc:0.91600
Max instance iou:0.79260
aero iou: 0.7553743
bag iou: 0.57629234
cap iou: 0.75177664
car iou: 0.6404363
chair iou: 0.87085384
ear iou: 0.6187916
guitar iou: 0.85462385
knife iou: 0.81643856
lamp iou: 0.73789066
lapt iou: 0.94878155
moto iou: 0.3393343
mug iou: 0.87027884
Pistol iou: 0.69945997
rock iou: 0.55568993
stake iou: 0.6311406
table iou: 0.8050668
Max class iou:0.71701
Learning rate: 0.003000
Train 4, loss: 0.227127, train acc: 0.919506, train ins_iou: 0.799829
Test 4, loss: 0.241269, test acc: 0.910661  test ins_iou: 0.787878
Learning rate: 0.003000
Train 5, loss: 0.217177, train acc: 0.922899, train ins_iou: 0.806612
Test 5, loss: 0.225101, test acc: 0.918462  test ins_iou: 0.794678
Max Acc:0.91846
Max instance iou:0.79468
Learning rate: 0.003000
Train 6, loss: 0.201816, train acc: 0.928521, train ins_iou: 0.817852
Test 6, loss: 0.212329, test acc: 0.922495  test ins_iou: 0.809776
Max Acc:0.92249
Max instance iou:0.80978
aero iou: 0.7828469
bag iou: 0.63347524
cap iou: 0.8223766
car iou: 0.6905053
chair iou: 0.878923
ear iou: 0.54154855
guitar iou: 0.86507124
knife iou: 0.8361251
lamp iou: 0.7548575
lapt iou: 0.94668496
moto iou: 0.5108113
mug iou: 0.90589345
Pistol iou: 0.7500225
rock iou: 0.51896507
stake iou: 0.6896878
table iou: 0.8101428
Max class iou:0.74612
Learning rate: 0.003000
Train 7, loss: 0.193901, train acc: 0.931639, train ins_iou: 0.823679
Test 7, loss: 0.199085, test acc: 0.927352  test ins_iou: 0.814837
Max Acc:0.92735
Max instance iou:0.81484
aero iou: 0.7965711
bag iou: 0.6087941
cap iou: 0.81343
car iou: 0.6887139
chair iou: 0.8835954
ear iou: 0.6458815
guitar iou: 0.89145184
knife iou: 0.8554527
lamp iou: 0.73856026
lapt iou: 0.95303905
moto iou: 0.37354884
mug iou: 0.91635746
Pistol iou: 0.7750375
rock iou: 0.4866785
stake iou: 0.7624246
table iou: 0.8194267
Max class iou:0.75056
Learning rate: 0.003000
Train 8, loss: 0.190623, train acc: 0.932509, train ins_iou: 0.825395
Test 8, loss: 0.202825, test acc: 0.925385  test ins_iou: 0.811203
Learning rate: 0.003000
Train 9, loss: 0.185015, train acc: 0.934393, train ins_iou: 0.828923
Test 9, loss: 0.191736, test acc: 0.930777  test ins_iou: 0.821737
Max Acc:0.93078
Max instance iou:0.82174
aero iou: 0.7831517
bag iou: 0.7824529
cap iou: 0.8066873
car iou: 0.7407797
chair iou: 0.88537544
ear iou: 0.65402156
guitar iou: 0.88448626
knife iou: 0.86230457
lamp iou: 0.78387934
lapt iou: 0.9321311
moto iou: 0.35337877
mug iou: 0.8878995
Pistol iou: 0.7856577
rock iou: 0.5240172
stake iou: 0.7789787
table iou: 0.82233936
Max class iou:0.76672
Learning rate: 0.003000
Train 10, loss: 0.180497, train acc: 0.936411, train ins_iou: 0.833200
Test 10, loss: 0.201447, test acc: 0.928136  test ins_iou: 0.814699
Learning rate: 0.003000
Train 11, loss: 0.176576, train acc: 0.937446, train ins_iou: 0.835376
Test 11, loss: 0.192430, test acc: 0.929099  test ins_iou: 0.822849
Max instance iou:0.82285
Learning rate: 0.003000
Train 12, loss: 0.175278, train acc: 0.937872, train ins_iou: 0.835700
Test 12, loss: 0.191074, test acc: 0.928477  test ins_iou: 0.822098
Learning rate: 0.003000
Train 13, loss: 0.170391, train acc: 0.939687, train ins_iou: 0.838960
Test 13, loss: 0.183068, test acc: 0.932371  test ins_iou: 0.824860
Max Acc:0.93237
Max instance iou:0.82486
Learning rate: 0.003000
Train 14, loss: 0.169383, train acc: 0.939850, train ins_iou: 0.839513
Test 14, loss: 0.187634, test acc: 0.932008  test ins_iou: 0.827527
Max instance iou:0.82753
aero iou: 0.8074719
bag iou: 0.7573306
cap iou: 0.72867966
car iou: 0.74292487
chair iou: 0.88355756
ear iou: 0.65978426
guitar iou: 0.8985868
knife iou: 0.86888045
lamp iou: 0.7807304
lapt iou: 0.95435923
moto iou: 0.59750617
mug iou: 0.9219726
Pistol iou: 0.77513176
rock iou: 0.5358905
stake iou: 0.7721606
table iou: 0.8146658
Max class iou:0.78123
Learning rate: 0.003000
Train 15, loss: 0.166470, train acc: 0.940942, train ins_iou: 0.841330
Test 15, loss: 0.185907, test acc: 0.931721  test ins_iou: 0.825502
Learning rate: 0.003000
Train 16, loss: 0.163752, train acc: 0.941843, train ins_iou: 0.843414
Test 16, loss: 0.170170, test acc: 0.938321  test ins_iou: 0.836305
Max Acc:0.93832
Max instance iou:0.83631
aero iou: 0.80678254
bag iou: 0.74025935
cap iou: 0.8360854
car iou: 0.7379215
chair iou: 0.8923245
ear iou: 0.78386086
guitar iou: 0.90701187
knife iou: 0.8648483
lamp iou: 0.80877984
lapt iou: 0.9543057
moto iou: 0.57186943
mug iou: 0.93882
Pistol iou: 0.78974456
rock iou: 0.5492901
stake iou: 0.6868227
table iou: 0.82749027
Max class iou:0.79351
Learning rate: 0.003000
Train 17, loss: 0.161464, train acc: 0.942367, train ins_iou: 0.844858
Test 17, loss: 0.185128, test acc: 0.932293  test ins_iou: 0.830126
Learning rate: 0.003000
Train 18, loss: 0.159765, train acc: 0.943312, train ins_iou: 0.845363
Test 18, loss: 0.173363, test acc: 0.936415  test ins_iou: 0.837980
Max instance iou:0.83798
aero iou: 0.81420684
bag iou: 0.7687728
cap iou: 0.82227445
car iou: 0.75826687
chair iou: 0.8909517
ear iou: 0.76524353
guitar iou: 0.8982899
knife iou: 0.87026864
lamp iou: 0.8051023
lapt iou: 0.9548531
moto iou: 0.6360097
mug iou: 0.940896
Pistol iou: 0.7703521
rock iou: 0.60378784
stake iou: 0.81605387
table iou: 0.82141536
Max class iou:0.80855
Learning rate: 0.003000
Train 19, loss: 0.156677, train acc: 0.944040, train ins_iou: 0.847231
Test 19, loss: 0.171190, test acc: 0.937275  test ins_iou: 0.835050
Learning rate: 0.003000
Train 20, loss: 0.156049, train acc: 0.944395, train ins_iou: 0.847892
Test 20, loss: 0.174692, test acc: 0.936332  test ins_iou: 0.836102
aero iou: 0.81760985
bag iou: 0.7271593
cap iou: 0.8520248
car iou: 0.74631405
chair iou: 0.89676213
ear iou: 0.7361191
guitar iou: 0.903995
knife iou: 0.8766745
lamp iou: 0.78715193
lapt iou: 0.9537638
moto iou: 0.6662632
mug iou: 0.9449586
Pistol iou: 0.7722388
rock iou: 0.6558664
stake iou: 0.80327815
table iou: 0.8139875
Max class iou:0.80964
Learning rate: 0.003000
Train 21, loss: 0.154078, train acc: 0.945011, train ins_iou: 0.848821
Test 21, loss: 0.291401, test acc: 0.932056  test ins_iou: 0.832538
Learning rate: 0.003000
Train 22, loss: 0.152394, train acc: 0.945662, train ins_iou: 0.850581
Test 22, loss: 0.179383, test acc: 0.934340  test ins_iou: 0.836381
Learning rate: 0.003000
Train 23, loss: 0.151568, train acc: 0.946115, train ins_iou: 0.851283
Test 23, loss: 0.176358, test acc: 0.935901  test ins_iou: 0.840205
Max instance iou:0.84020
aero iou: 0.806861
bag iou: 0.7795928
cap iou: 0.8290567
car iou: 0.7757387
chair iou: 0.89519066
ear iou: 0.75266266
guitar iou: 0.9103721
knife iou: 0.8828004
lamp iou: 0.79469985
lapt iou: 0.95691407
moto iou: 0.6758455
mug iou: 0.9403076
Pistol iou: 0.8049912
rock iou: 0.64932865
stake iou: 0.82379603
table iou: 0.81984216
Max class iou:0.81863
Learning rate: 0.003000
Train 24, loss: 0.148121, train acc: 0.946876, train ins_iou: 0.852464
Test 24, loss: 0.167545, test acc: 0.939773  test ins_iou: 0.844144
Max Acc:0.93977
Max instance iou:0.84414
Learning rate: 0.003000
Train 25, loss: 0.146288, train acc: 0.947680, train ins_iou: 0.854116
Test 25, loss: 0.171867, test acc: 0.937501  test ins_iou: 0.838938
Learning rate: 0.003000
Train 26, loss: 0.145377, train acc: 0.947814, train ins_iou: 0.854520
Test 26, loss: 0.166507, test acc: 0.939838  test ins_iou: 0.844212
Max Acc:0.93984
Max instance iou:0.84421
Learning rate: 0.003000
Train 27, loss: 0.144695, train acc: 0.947987, train ins_iou: 0.854569
Test 27, loss: 0.177930, test acc: 0.935264  test ins_iou: 0.838361
Learning rate: 0.003000
Train 28, loss: 0.142125, train acc: 0.948818, train ins_iou: 0.856051
Test 28, loss: 0.184453, test acc: 0.934614  test ins_iou: 0.837537
Learning rate: 0.003000
Train 29, loss: 0.140854, train acc: 0.949291, train ins_iou: 0.856410
Test 29, loss: 0.169229, test acc: 0.938945  test ins_iou: 0.841198
Learning rate: 0.003000
Train 30, loss: 0.139895, train acc: 0.949571, train ins_iou: 0.856951
Test 30, loss: 0.164500, test acc: 0.939657  test ins_iou: 0.842817
Learning rate: 0.003000
Train 31, loss: 0.138304, train acc: 0.950209, train ins_iou: 0.858493
Test 31, loss: 0.168989, test acc: 0.939021  test ins_iou: 0.845343
Max instance iou:0.84534
aero iou: 0.8253988
bag iou: 0.7910767
cap iou: 0.7919592
car iou: 0.78046036
chair iou: 0.89773405
ear iou: 0.7714553
guitar iou: 0.9035641
knife iou: 0.8777956
lamp iou: 0.81621045
lapt iou: 0.95376354
moto iou: 0.709812
mug iou: 0.94125736
Pistol iou: 0.8242646
rock iou: 0.5996221
stake iou: 0.8111443
table iou: 0.81967515
Max class iou:0.81970
Learning rate: 0.003000
Train 32, loss: 0.136762, train acc: 0.950651, train ins_iou: 0.859078
Test 32, loss: 0.170268, test acc: 0.938835  test ins_iou: 0.843694
Learning rate: 0.003000
Train 33, loss: 0.134974, train acc: 0.951171, train ins_iou: 0.859636
Test 33, loss: 0.165342, test acc: 0.941287  test ins_iou: 0.846245
Max Acc:0.94129
Max instance iou:0.84625
aero iou: 0.8235053
bag iou: 0.77533513
cap iou: 0.8814628
car iou: 0.77745956
chair iou: 0.8963121
ear iou: 0.7890152
guitar iou: 0.9110519
knife iou: 0.8637765
lamp iou: 0.7995766
lapt iou: 0.9539339
moto iou: 0.7153039
mug iou: 0.9341856
Pistol iou: 0.8127458
rock iou: 0.6506693
stake iou: 0.8188634
table iou: 0.82913494
Max class iou:0.82702
Learning rate: 0.003000
Train 34, loss: 0.133783, train acc: 0.951534, train ins_iou: 0.860129
Test 34, loss: 0.168259, test acc: 0.938974  test ins_iou: 0.842343
Learning rate: 0.003000
Train 35, loss: 0.131234, train acc: 0.952649, train ins_iou: 0.862592
Test 35, loss: 0.166010, test acc: 0.940644  test ins_iou: 0.845416
Learning rate: 0.003000
Train 36, loss: 0.131002, train acc: 0.952437, train ins_iou: 0.862258
Test 36, loss: 0.168389, test acc: 0.939317  test ins_iou: 0.843871
Learning rate: 0.003000
Train 37, loss: 0.128732, train acc: 0.953277, train ins_iou: 0.863437
Test 37, loss: 0.171541, test acc: 0.939067  test ins_iou: 0.843231
Namespace(batch_size=32, epochs=350, eval=False, exp_name='pointMLP_demo1', lr=0.003, manual_seed=None, model='pointMLP', model_type='insiou', momentum=0.9, no_cuda=False, num_points=2048, resume=False, scheduler='step', step=40, test_batch_size=32, use_sgd=False, workers=12)
Using CPU
PointMLP(
  (embedding): ConvBNReLU1D(
    (act): ReLU(inplace=True)
    (net): Sequential(
      (0): Conv1d(6, 64, kernel_size=(1,), stride=(1,))
      (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): ReLU(inplace=True)
    )
  )
  (local_grouper_list): ModuleList(
    (0): LocalGrouper()
    (1): LocalGrouper()
    (2): LocalGrouper()
    (3): LocalGrouper()
  )
  (pre_blocks_list): ModuleList(
    (0): PreExtraction(
      (transfer): ConvBNReLU1D(
        (act): ReLU(inplace=True)
        (net): Sequential(
          (0): Conv1d(131, 128, kernel_size=(1,), stride=(1,))
          (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
        )
      )
      (operation): Sequential(
        (0): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
      )
    )
    (1): PreExtraction(
      (transfer): ConvBNReLU1D(
        (act): ReLU(inplace=True)
        (net): Sequential(
          (0): Conv1d(259, 256, kernel_size=(1,), stride=(1,))
          (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
        )
      )
      (operation): Sequential(
        (0): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
      )
    )
    (2): PreExtraction(
      (transfer): ConvBNReLU1D(
        (act): ReLU(inplace=True)
        (net): Sequential(
          (0): Conv1d(515, 512, kernel_size=(1,), stride=(1,))
          (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
        )
      )
      (operation): Sequential(
        (0): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
      )
    )
    (3): PreExtraction(
      (transfer): ConvBNReLU1D(
        (act): ReLU(inplace=True)
        (net): Sequential(
          (0): Conv1d(1027, 1024, kernel_size=(1,), stride=(1,))
          (1): BatchNorm1d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
        )
      )
      (operation): Sequential(
        (0): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(1024, 1024, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(1024, 1024, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(1024, 1024, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(1024, 1024, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
      )
    )
  )
  (pos_blocks_list): ModuleList(
    (0): PosExtraction(
      (operation): Sequential(
        (0): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
      )
    )
    (1): PosExtraction(
      (operation): Sequential(
        (0): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
      )
    )
    (2): PosExtraction(
      (operation): Sequential(
        (0): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
      )
    )
    (3): PosExtraction(
      (operation): Sequential(
        (0): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(1024, 1024, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(1024, 1024, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(1024, 1024, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(1024, 1024, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
      )
    )
  )
  (decode_list): ModuleList(
    (0): PointNetFeaturePropagation(
      (fuse): ConvBNReLU1D(
        (act): ReLU(inplace=True)
        (net): Sequential(
          (0): Conv1d(1536, 512, kernel_size=(1,), stride=(1,))
          (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
        )
      )
      (extraction): PosExtraction(
        (operation): Sequential(
          (0): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (2): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (3): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
        )
      )
    )
    (1): PointNetFeaturePropagation(
      (fuse): ConvBNReLU1D(
        (act): ReLU(inplace=True)
        (net): Sequential(
          (0): Conv1d(768, 256, kernel_size=(1,), stride=(1,))
          (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
        )
      )
      (extraction): PosExtraction(
        (operation): Sequential(
          (0): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (2): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (3): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
        )
      )
    )
    (2): PointNetFeaturePropagation(
      (fuse): ConvBNReLU1D(
        (act): ReLU(inplace=True)
        (net): Sequential(
          (0): Conv1d(384, 128, kernel_size=(1,), stride=(1,))
          (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
        )
      )
      (extraction): PosExtraction(
        (operation): Sequential(
          (0): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (2): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (3): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
        )
      )
    )
    (3): PointNetFeaturePropagation(
      (fuse): ConvBNReLU1D(
        (act): ReLU(inplace=True)
        (net): Sequential(
          (0): Conv1d(192, 128, kernel_size=(1,), stride=(1,))
          (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
        )
      )
      (extraction): PosExtraction(
        (operation): Sequential(
          (0): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (2): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (3): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
        )
      )
    )
  )
  (act): ReLU(inplace=True)
  (cls_map): Sequential(
    (0): ConvBNReLU1D(
      (act): ReLU(inplace=True)
      (net): Sequential(
        (0): Conv1d(16, 64, kernel_size=(1,), stride=(1,))
        (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
      )
    )
    (1): ConvBNReLU1D(
      (act): ReLU(inplace=True)
      (net): Sequential(
        (0): Conv1d(64, 64, kernel_size=(1,), stride=(1,))
        (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
      )
    )
  )
  (gmp_map_list): ModuleList(
    (0): ConvBNReLU1D(
      (act): ReLU(inplace=True)
      (net): Sequential(
        (0): Conv1d(1024, 64, kernel_size=(1,), stride=(1,))
        (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
      )
    )
    (1): ConvBNReLU1D(
      (act): ReLU(inplace=True)
      (net): Sequential(
        (0): Conv1d(512, 64, kernel_size=(1,), stride=(1,))
        (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
      )
    )
    (2): ConvBNReLU1D(
      (act): ReLU(inplace=True)
      (net): Sequential(
        (0): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
      )
    )
    (3): ConvBNReLU1D(
      (act): ReLU(inplace=True)
      (net): Sequential(
        (0): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
      )
    )
    (4): ConvBNReLU1D(
      (act): ReLU(inplace=True)
      (net): Sequential(
        (0): Conv1d(64, 64, kernel_size=(1,), stride=(1,))
        (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
      )
    )
  )
  (gmp_map_end): ConvBNReLU1D(
    (act): ReLU(inplace=True)
    (net): Sequential(
      (0): Conv1d(320, 64, kernel_size=(1,), stride=(1,))
      (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): ReLU(inplace=True)
    )
  )
  (classifier): Sequential(
    (0): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
    (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): Dropout(p=0.5, inplace=False)
    (3): Conv1d(128, 50, kernel_size=(1,), stride=(1,))
  )
)
Namespace(batch_size=32, epochs=350, eval=False, exp_name='pointMLP_demo1', lr=0.003, manual_seed=None, model='pointMLP', model_type='insiou', momentum=0.9, no_cuda=False, num_points=2048, resume=False, scheduler='step', step=40, test_batch_size=32, use_sgd=False, workers=12)
Using GPU
PointMLP(
  (embedding): ConvBNReLU1D(
    (act): ReLU(inplace=True)
    (net): Sequential(
      (0): Conv1d(6, 64, kernel_size=(1,), stride=(1,))
      (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): ReLU(inplace=True)
    )
  )
  (local_grouper_list): ModuleList(
    (0): LocalGrouper()
    (1): LocalGrouper()
    (2): LocalGrouper()
    (3): LocalGrouper()
  )
  (pre_blocks_list): ModuleList(
    (0): PreExtraction(
      (transfer): ConvBNReLU1D(
        (act): ReLU(inplace=True)
        (net): Sequential(
          (0): Conv1d(131, 128, kernel_size=(1,), stride=(1,))
          (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
        )
      )
      (operation): Sequential(
        (0): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
      )
    )
    (1): PreExtraction(
      (transfer): ConvBNReLU1D(
        (act): ReLU(inplace=True)
        (net): Sequential(
          (0): Conv1d(259, 256, kernel_size=(1,), stride=(1,))
          (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
        )
      )
      (operation): Sequential(
        (0): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
      )
    )
    (2): PreExtraction(
      (transfer): ConvBNReLU1D(
        (act): ReLU(inplace=True)
        (net): Sequential(
          (0): Conv1d(515, 512, kernel_size=(1,), stride=(1,))
          (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
        )
      )
      (operation): Sequential(
        (0): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
      )
    )
    (3): PreExtraction(
      (transfer): ConvBNReLU1D(
        (act): ReLU(inplace=True)
        (net): Sequential(
          (0): Conv1d(1027, 1024, kernel_size=(1,), stride=(1,))
          (1): BatchNorm1d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
        )
      )
      (operation): Sequential(
        (0): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(1024, 1024, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(1024, 1024, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(1024, 1024, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(1024, 1024, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
      )
    )
  )
  (pos_blocks_list): ModuleList(
    (0): PosExtraction(
      (operation): Sequential(
        (0): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
      )
    )
    (1): PosExtraction(
      (operation): Sequential(
        (0): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
      )
    )
    (2): PosExtraction(
      (operation): Sequential(
        (0): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
      )
    )
    (3): PosExtraction(
      (operation): Sequential(
        (0): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(1024, 1024, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(1024, 1024, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(1024, 1024, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(1024, 1024, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
      )
    )
  )
  (decode_list): ModuleList(
    (0): PointNetFeaturePropagation(
      (fuse): ConvBNReLU1D(
        (act): ReLU(inplace=True)
        (net): Sequential(
          (0): Conv1d(1536, 512, kernel_size=(1,), stride=(1,))
          (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
        )
      )
      (extraction): PosExtraction(
        (operation): Sequential(
          (0): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (2): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (3): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
        )
      )
    )
    (1): PointNetFeaturePropagation(
      (fuse): ConvBNReLU1D(
        (act): ReLU(inplace=True)
        (net): Sequential(
          (0): Conv1d(768, 256, kernel_size=(1,), stride=(1,))
          (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
        )
      )
      (extraction): PosExtraction(
        (operation): Sequential(
          (0): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (2): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (3): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
        )
      )
    )
    (2): PointNetFeaturePropagation(
      (fuse): ConvBNReLU1D(
        (act): ReLU(inplace=True)
        (net): Sequential(
          (0): Conv1d(384, 128, kernel_size=(1,), stride=(1,))
          (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
        )
      )
      (extraction): PosExtraction(
        (operation): Sequential(
          (0): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (2): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (3): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
        )
      )
    )
    (3): PointNetFeaturePropagation(
      (fuse): ConvBNReLU1D(
        (act): ReLU(inplace=True)
        (net): Sequential(
          (0): Conv1d(192, 128, kernel_size=(1,), stride=(1,))
          (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
        )
      )
      (extraction): PosExtraction(
        (operation): Sequential(
          (0): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (2): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (3): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
        )
      )
    )
  )
  (act): ReLU(inplace=True)
  (cls_map): Sequential(
    (0): ConvBNReLU1D(
      (act): ReLU(inplace=True)
      (net): Sequential(
        (0): Conv1d(16, 64, kernel_size=(1,), stride=(1,))
        (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
      )
    )
    (1): ConvBNReLU1D(
      (act): ReLU(inplace=True)
      (net): Sequential(
        (0): Conv1d(64, 64, kernel_size=(1,), stride=(1,))
        (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
      )
    )
  )
  (gmp_map_list): ModuleList(
    (0): ConvBNReLU1D(
      (act): ReLU(inplace=True)
      (net): Sequential(
        (0): Conv1d(1024, 64, kernel_size=(1,), stride=(1,))
        (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
      )
    )
    (1): ConvBNReLU1D(
      (act): ReLU(inplace=True)
      (net): Sequential(
        (0): Conv1d(512, 64, kernel_size=(1,), stride=(1,))
        (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
      )
    )
    (2): ConvBNReLU1D(
      (act): ReLU(inplace=True)
      (net): Sequential(
        (0): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
      )
    )
    (3): ConvBNReLU1D(
      (act): ReLU(inplace=True)
      (net): Sequential(
        (0): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
      )
    )
    (4): ConvBNReLU1D(
      (act): ReLU(inplace=True)
      (net): Sequential(
        (0): Conv1d(64, 64, kernel_size=(1,), stride=(1,))
        (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
      )
    )
  )
  (gmp_map_end): ConvBNReLU1D(
    (act): ReLU(inplace=True)
    (net): Sequential(
      (0): Conv1d(320, 64, kernel_size=(1,), stride=(1,))
      (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): ReLU(inplace=True)
    )
  )
  (classifier): Sequential(
    (0): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
    (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): Dropout(p=0.5, inplace=False)
    (3): Conv1d(128, 50, kernel_size=(1,), stride=(1,))
  )
)
Namespace(batch_size=32, epochs=350, eval=False, exp_name='pointMLP_demo1', lr=0.003, manual_seed=None, model='pointMLP', model_type='insiou', momentum=0.9, no_cuda=False, num_points=2048, resume=False, scheduler='step', step=40, test_batch_size=32, use_sgd=False, workers=12)
Using GPU
PointMLP(
  (embedding): ConvBNReLU1D(
    (act): ReLU(inplace=True)
    (net): Sequential(
      (0): Conv1d(6, 64, kernel_size=(1,), stride=(1,))
      (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): ReLU(inplace=True)
    )
  )
  (local_grouper_list): ModuleList(
    (0): LocalGrouper()
    (1): LocalGrouper()
    (2): LocalGrouper()
    (3): LocalGrouper()
  )
  (pre_blocks_list): ModuleList(
    (0): PreExtraction(
      (transfer): ConvBNReLU1D(
        (act): ReLU(inplace=True)
        (net): Sequential(
          (0): Conv1d(131, 128, kernel_size=(1,), stride=(1,))
          (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
        )
      )
      (operation): Sequential(
        (0): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
      )
    )
    (1): PreExtraction(
      (transfer): ConvBNReLU1D(
        (act): ReLU(inplace=True)
        (net): Sequential(
          (0): Conv1d(259, 256, kernel_size=(1,), stride=(1,))
          (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
        )
      )
      (operation): Sequential(
        (0): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
      )
    )
    (2): PreExtraction(
      (transfer): ConvBNReLU1D(
        (act): ReLU(inplace=True)
        (net): Sequential(
          (0): Conv1d(515, 512, kernel_size=(1,), stride=(1,))
          (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
        )
      )
      (operation): Sequential(
        (0): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
      )
    )
    (3): PreExtraction(
      (transfer): ConvBNReLU1D(
        (act): ReLU(inplace=True)
        (net): Sequential(
          (0): Conv1d(1027, 1024, kernel_size=(1,), stride=(1,))
          (1): BatchNorm1d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
        )
      )
      (operation): Sequential(
        (0): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(1024, 1024, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(1024, 1024, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(1024, 1024, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(1024, 1024, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
      )
    )
  )
  (pos_blocks_list): ModuleList(
    (0): PosExtraction(
      (operation): Sequential(
        (0): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
      )
    )
    (1): PosExtraction(
      (operation): Sequential(
        (0): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
      )
    )
    (2): PosExtraction(
      (operation): Sequential(
        (0): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
      )
    )
    (3): PosExtraction(
      (operation): Sequential(
        (0): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(1024, 1024, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(1024, 1024, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(1024, 1024, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(1024, 1024, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
      )
    )
  )
  (decode_list): ModuleList(
    (0): PointNetFeaturePropagation(
      (fuse): ConvBNReLU1D(
        (act): ReLU(inplace=True)
        (net): Sequential(
          (0): Conv1d(1536, 512, kernel_size=(1,), stride=(1,))
          (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
        )
      )
      (extraction): PosExtraction(
        (operation): Sequential(
          (0): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (2): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (3): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
        )
      )
    )
    (1): PointNetFeaturePropagation(
      (fuse): ConvBNReLU1D(
        (act): ReLU(inplace=True)
        (net): Sequential(
          (0): Conv1d(768, 256, kernel_size=(1,), stride=(1,))
          (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
        )
      )
      (extraction): PosExtraction(
        (operation): Sequential(
          (0): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (2): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (3): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
        )
      )
    )
    (2): PointNetFeaturePropagation(
      (fuse): ConvBNReLU1D(
        (act): ReLU(inplace=True)
        (net): Sequential(
          (0): Conv1d(384, 128, kernel_size=(1,), stride=(1,))
          (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
        )
      )
      (extraction): PosExtraction(
        (operation): Sequential(
          (0): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (2): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (3): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
        )
      )
    )
    (3): PointNetFeaturePropagation(
      (fuse): ConvBNReLU1D(
        (act): ReLU(inplace=True)
        (net): Sequential(
          (0): Conv1d(192, 128, kernel_size=(1,), stride=(1,))
          (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
        )
      )
      (extraction): PosExtraction(
        (operation): Sequential(
          (0): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (2): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (3): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
        )
      )
    )
  )
  (act): ReLU(inplace=True)
  (cls_map): Sequential(
    (0): ConvBNReLU1D(
      (act): ReLU(inplace=True)
      (net): Sequential(
        (0): Conv1d(16, 64, kernel_size=(1,), stride=(1,))
        (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
      )
    )
    (1): ConvBNReLU1D(
      (act): ReLU(inplace=True)
      (net): Sequential(
        (0): Conv1d(64, 64, kernel_size=(1,), stride=(1,))
        (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
      )
    )
  )
  (gmp_map_list): ModuleList(
    (0): ConvBNReLU1D(
      (act): ReLU(inplace=True)
      (net): Sequential(
        (0): Conv1d(1024, 64, kernel_size=(1,), stride=(1,))
        (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
      )
    )
    (1): ConvBNReLU1D(
      (act): ReLU(inplace=True)
      (net): Sequential(
        (0): Conv1d(512, 64, kernel_size=(1,), stride=(1,))
        (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
      )
    )
    (2): ConvBNReLU1D(
      (act): ReLU(inplace=True)
      (net): Sequential(
        (0): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
      )
    )
    (3): ConvBNReLU1D(
      (act): ReLU(inplace=True)
      (net): Sequential(
        (0): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
      )
    )
    (4): ConvBNReLU1D(
      (act): ReLU(inplace=True)
      (net): Sequential(
        (0): Conv1d(64, 64, kernel_size=(1,), stride=(1,))
        (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
      )
    )
  )
  (gmp_map_end): ConvBNReLU1D(
    (act): ReLU(inplace=True)
    (net): Sequential(
      (0): Conv1d(320, 64, kernel_size=(1,), stride=(1,))
      (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): ReLU(inplace=True)
    )
  )
  (classifier): Sequential(
    (0): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
    (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): Dropout(p=0.5, inplace=False)
    (3): Conv1d(128, 50, kernel_size=(1,), stride=(1,))
  )
)
Namespace(batch_size=32, epochs=350, eval=False, exp_name='pointMLP_demo1', lr=0.003, manual_seed=None, model='pointMLP', model_type='insiou', momentum=0.9, no_cuda=False, num_points=2048, resume=False, scheduler='step', step=40, test_batch_size=32, use_sgd=False, workers=12)
Using GPU
PointMLP(
  (embedding): ConvBNReLU1D(
    (act): ReLU(inplace=True)
    (net): Sequential(
      (0): Conv1d(6, 64, kernel_size=(1,), stride=(1,))
      (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): ReLU(inplace=True)
    )
  )
  (local_grouper_list): ModuleList(
    (0): LocalGrouper()
    (1): LocalGrouper()
    (2): LocalGrouper()
    (3): LocalGrouper()
  )
  (pre_blocks_list): ModuleList(
    (0): PreExtraction(
      (transfer): ConvBNReLU1D(
        (act): ReLU(inplace=True)
        (net): Sequential(
          (0): Conv1d(131, 128, kernel_size=(1,), stride=(1,))
          (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
        )
      )
      (operation): Sequential(
        (0): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
      )
    )
    (1): PreExtraction(
      (transfer): ConvBNReLU1D(
        (act): ReLU(inplace=True)
        (net): Sequential(
          (0): Conv1d(259, 256, kernel_size=(1,), stride=(1,))
          (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
        )
      )
      (operation): Sequential(
        (0): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
      )
    )
    (2): PreExtraction(
      (transfer): ConvBNReLU1D(
        (act): ReLU(inplace=True)
        (net): Sequential(
          (0): Conv1d(515, 512, kernel_size=(1,), stride=(1,))
          (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
        )
      )
      (operation): Sequential(
        (0): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
      )
    )
    (3): PreExtraction(
      (transfer): ConvBNReLU1D(
        (act): ReLU(inplace=True)
        (net): Sequential(
          (0): Conv1d(1027, 1024, kernel_size=(1,), stride=(1,))
          (1): BatchNorm1d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
        )
      )
      (operation): Sequential(
        (0): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(1024, 1024, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(1024, 1024, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(1024, 1024, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(1024, 1024, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
      )
    )
  )
  (pos_blocks_list): ModuleList(
    (0): PosExtraction(
      (operation): Sequential(
        (0): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
      )
    )
    (1): PosExtraction(
      (operation): Sequential(
        (0): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
      )
    )
    (2): PosExtraction(
      (operation): Sequential(
        (0): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
      )
    )
    (3): PosExtraction(
      (operation): Sequential(
        (0): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(1024, 1024, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(1024, 1024, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(1024, 1024, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(1024, 1024, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
      )
    )
  )
  (decode_list): ModuleList(
    (0): PointNetFeaturePropagation(
      (fuse): ConvBNReLU1D(
        (act): ReLU(inplace=True)
        (net): Sequential(
          (0): Conv1d(1536, 512, kernel_size=(1,), stride=(1,))
          (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
        )
      )
      (extraction): PosExtraction(
        (operation): Sequential(
          (0): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (2): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (3): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
        )
      )
    )
    (1): PointNetFeaturePropagation(
      (fuse): ConvBNReLU1D(
        (act): ReLU(inplace=True)
        (net): Sequential(
          (0): Conv1d(768, 256, kernel_size=(1,), stride=(1,))
          (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
        )
      )
      (extraction): PosExtraction(
        (operation): Sequential(
          (0): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (2): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (3): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
        )
      )
    )
    (2): PointNetFeaturePropagation(
      (fuse): ConvBNReLU1D(
        (act): ReLU(inplace=True)
        (net): Sequential(
          (0): Conv1d(384, 128, kernel_size=(1,), stride=(1,))
          (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
        )
      )
      (extraction): PosExtraction(
        (operation): Sequential(
          (0): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (2): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (3): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
        )
      )
    )
    (3): PointNetFeaturePropagation(
      (fuse): ConvBNReLU1D(
        (act): ReLU(inplace=True)
        (net): Sequential(
          (0): Conv1d(192, 128, kernel_size=(1,), stride=(1,))
          (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
        )
      )
      (extraction): PosExtraction(
        (operation): Sequential(
          (0): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (2): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (3): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
        )
      )
    )
  )
  (act): ReLU(inplace=True)
  (cls_map): Sequential(
    (0): ConvBNReLU1D(
      (act): ReLU(inplace=True)
      (net): Sequential(
        (0): Conv1d(16, 64, kernel_size=(1,), stride=(1,))
        (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
      )
    )
    (1): ConvBNReLU1D(
      (act): ReLU(inplace=True)
      (net): Sequential(
        (0): Conv1d(64, 64, kernel_size=(1,), stride=(1,))
        (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
      )
    )
  )
  (gmp_map_list): ModuleList(
    (0): ConvBNReLU1D(
      (act): ReLU(inplace=True)
      (net): Sequential(
        (0): Conv1d(1024, 64, kernel_size=(1,), stride=(1,))
        (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
      )
    )
    (1): ConvBNReLU1D(
      (act): ReLU(inplace=True)
      (net): Sequential(
        (0): Conv1d(512, 64, kernel_size=(1,), stride=(1,))
        (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
      )
    )
    (2): ConvBNReLU1D(
      (act): ReLU(inplace=True)
      (net): Sequential(
        (0): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
      )
    )
    (3): ConvBNReLU1D(
      (act): ReLU(inplace=True)
      (net): Sequential(
        (0): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
      )
    )
    (4): ConvBNReLU1D(
      (act): ReLU(inplace=True)
      (net): Sequential(
        (0): Conv1d(64, 64, kernel_size=(1,), stride=(1,))
        (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
      )
    )
  )
  (gmp_map_end): ConvBNReLU1D(
    (act): ReLU(inplace=True)
    (net): Sequential(
      (0): Conv1d(320, 64, kernel_size=(1,), stride=(1,))
      (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): ReLU(inplace=True)
    )
  )
  (classifier): Sequential(
    (0): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
    (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): Dropout(p=0.5, inplace=False)
    (3): Conv1d(128, 50, kernel_size=(1,), stride=(1,))
  )
)
Namespace(batch_size=32, epochs=350, eval=False, exp_name='pointMLP_demo1', lr=0.003, manual_seed=None, model='pointMLP', model_type='insiou', momentum=0.9, no_cuda=False, num_points=2048, resume=False, scheduler='step', step=40, test_batch_size=32, use_sgd=False, workers=12)
Using GPU
PointMLP(
  (embedding): ConvBNReLU1D(
    (act): ReLU(inplace=True)
    (net): Sequential(
      (0): Conv1d(6, 64, kernel_size=(1,), stride=(1,))
      (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): ReLU(inplace=True)
    )
  )
  (local_grouper_list): ModuleList(
    (0): LocalGrouper()
    (1): LocalGrouper()
    (2): LocalGrouper()
    (3): LocalGrouper()
  )
  (pre_blocks_list): ModuleList(
    (0): PreExtraction(
      (transfer): ConvBNReLU1D(
        (act): ReLU(inplace=True)
        (net): Sequential(
          (0): Conv1d(131, 128, kernel_size=(1,), stride=(1,))
          (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
        )
      )
      (operation): Sequential(
        (0): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
      )
    )
    (1): PreExtraction(
      (transfer): ConvBNReLU1D(
        (act): ReLU(inplace=True)
        (net): Sequential(
          (0): Conv1d(259, 256, kernel_size=(1,), stride=(1,))
          (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
        )
      )
      (operation): Sequential(
        (0): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
      )
    )
    (2): PreExtraction(
      (transfer): ConvBNReLU1D(
        (act): ReLU(inplace=True)
        (net): Sequential(
          (0): Conv1d(515, 512, kernel_size=(1,), stride=(1,))
          (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
        )
      )
      (operation): Sequential(
        (0): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
      )
    )
    (3): PreExtraction(
      (transfer): ConvBNReLU1D(
        (act): ReLU(inplace=True)
        (net): Sequential(
          (0): Conv1d(1027, 1024, kernel_size=(1,), stride=(1,))
          (1): BatchNorm1d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
        )
      )
      (operation): Sequential(
        (0): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(1024, 1024, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(1024, 1024, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(1024, 1024, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(1024, 1024, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
      )
    )
  )
  (pos_blocks_list): ModuleList(
    (0): PosExtraction(
      (operation): Sequential(
        (0): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
      )
    )
    (1): PosExtraction(
      (operation): Sequential(
        (0): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
      )
    )
    (2): PosExtraction(
      (operation): Sequential(
        (0): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
      )
    )
    (3): PosExtraction(
      (operation): Sequential(
        (0): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(1024, 1024, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(1024, 1024, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(1024, 1024, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(1024, 1024, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
      )
    )
  )
  (decode_list): ModuleList(
    (0): PointNetFeaturePropagation(
      (fuse): ConvBNReLU1D(
        (act): ReLU(inplace=True)
        (net): Sequential(
          (0): Conv1d(1536, 512, kernel_size=(1,), stride=(1,))
          (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
        )
      )
      (extraction): PosExtraction(
        (operation): Sequential(
          (0): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (2): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (3): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
        )
      )
    )
    (1): PointNetFeaturePropagation(
      (fuse): ConvBNReLU1D(
        (act): ReLU(inplace=True)
        (net): Sequential(
          (0): Conv1d(768, 256, kernel_size=(1,), stride=(1,))
          (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
        )
      )
      (extraction): PosExtraction(
        (operation): Sequential(
          (0): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (2): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (3): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
        )
      )
    )
    (2): PointNetFeaturePropagation(
      (fuse): ConvBNReLU1D(
        (act): ReLU(inplace=True)
        (net): Sequential(
          (0): Conv1d(384, 128, kernel_size=(1,), stride=(1,))
          (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
        )
      )
      (extraction): PosExtraction(
        (operation): Sequential(
          (0): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (2): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (3): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
        )
      )
    )
    (3): PointNetFeaturePropagation(
      (fuse): ConvBNReLU1D(
        (act): ReLU(inplace=True)
        (net): Sequential(
          (0): Conv1d(192, 128, kernel_size=(1,), stride=(1,))
          (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
        )
      )
      (extraction): PosExtraction(
        (operation): Sequential(
          (0): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (2): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (3): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
        )
      )
    )
  )
  (act): ReLU(inplace=True)
  (cls_map): Sequential(
    (0): ConvBNReLU1D(
      (act): ReLU(inplace=True)
      (net): Sequential(
        (0): Conv1d(16, 64, kernel_size=(1,), stride=(1,))
        (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
      )
    )
    (1): ConvBNReLU1D(
      (act): ReLU(inplace=True)
      (net): Sequential(
        (0): Conv1d(64, 64, kernel_size=(1,), stride=(1,))
        (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
      )
    )
  )
  (gmp_map_list): ModuleList(
    (0): ConvBNReLU1D(
      (act): ReLU(inplace=True)
      (net): Sequential(
        (0): Conv1d(1024, 64, kernel_size=(1,), stride=(1,))
        (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
      )
    )
    (1): ConvBNReLU1D(
      (act): ReLU(inplace=True)
      (net): Sequential(
        (0): Conv1d(512, 64, kernel_size=(1,), stride=(1,))
        (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
      )
    )
    (2): ConvBNReLU1D(
      (act): ReLU(inplace=True)
      (net): Sequential(
        (0): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
      )
    )
    (3): ConvBNReLU1D(
      (act): ReLU(inplace=True)
      (net): Sequential(
        (0): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
      )
    )
    (4): ConvBNReLU1D(
      (act): ReLU(inplace=True)
      (net): Sequential(
        (0): Conv1d(64, 64, kernel_size=(1,), stride=(1,))
        (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
      )
    )
  )
  (gmp_map_end): ConvBNReLU1D(
    (act): ReLU(inplace=True)
    (net): Sequential(
      (0): Conv1d(320, 64, kernel_size=(1,), stride=(1,))
      (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): ReLU(inplace=True)
    )
  )
  (classifier): Sequential(
    (0): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
    (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): Dropout(p=0.5, inplace=False)
    (3): Conv1d(128, 50, kernel_size=(1,), stride=(1,))
  )
)
Namespace(batch_size=32, epochs=350, eval=False, exp_name='pointMLP_demo1', lr=0.003, manual_seed=None, model='pointMLP', model_type='insiou', momentum=0.9, no_cuda=False, num_points=2048, resume=False, scheduler='step', step=40, test_batch_size=32, use_sgd=False, workers=12)
Using GPU
PointMLP(
  (embedding): ConvBNReLU1D(
    (act): ReLU(inplace=True)
    (net): Sequential(
      (0): Conv1d(6, 64, kernel_size=(1,), stride=(1,))
      (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): ReLU(inplace=True)
    )
  )
  (local_grouper_list): ModuleList(
    (0): LocalGrouper()
    (1): LocalGrouper()
    (2): LocalGrouper()
    (3): LocalGrouper()
  )
  (pre_blocks_list): ModuleList(
    (0): PreExtraction(
      (transfer): ConvBNReLU1D(
        (act): ReLU(inplace=True)
        (net): Sequential(
          (0): Conv1d(131, 128, kernel_size=(1,), stride=(1,))
          (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
        )
      )
      (operation): Sequential(
        (0): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
      )
    )
    (1): PreExtraction(
      (transfer): ConvBNReLU1D(
        (act): ReLU(inplace=True)
        (net): Sequential(
          (0): Conv1d(259, 256, kernel_size=(1,), stride=(1,))
          (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
        )
      )
      (operation): Sequential(
        (0): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
      )
    )
    (2): PreExtraction(
      (transfer): ConvBNReLU1D(
        (act): ReLU(inplace=True)
        (net): Sequential(
          (0): Conv1d(515, 512, kernel_size=(1,), stride=(1,))
          (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
        )
      )
      (operation): Sequential(
        (0): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
      )
    )
    (3): PreExtraction(
      (transfer): ConvBNReLU1D(
        (act): ReLU(inplace=True)
        (net): Sequential(
          (0): Conv1d(1027, 1024, kernel_size=(1,), stride=(1,))
          (1): BatchNorm1d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
        )
      )
      (operation): Sequential(
        (0): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(1024, 1024, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(1024, 1024, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(1024, 1024, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(1024, 1024, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
      )
    )
  )
  (pos_blocks_list): ModuleList(
    (0): PosExtraction(
      (operation): Sequential(
        (0): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
      )
    )
    (1): PosExtraction(
      (operation): Sequential(
        (0): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
      )
    )
    (2): PosExtraction(
      (operation): Sequential(
        (0): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
      )
    )
    (3): PosExtraction(
      (operation): Sequential(
        (0): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(1024, 1024, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(1024, 1024, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(1024, 1024, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(1024, 1024, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
      )
    )
  )
  (decode_list): ModuleList(
    (0): PointNetFeaturePropagation(
      (fuse): ConvBNReLU1D(
        (act): ReLU(inplace=True)
        (net): Sequential(
          (0): Conv1d(1536, 512, kernel_size=(1,), stride=(1,))
          (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
        )
      )
      (extraction): PosExtraction(
        (operation): Sequential(
          (0): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (2): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (3): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
        )
      )
    )
    (1): PointNetFeaturePropagation(
      (fuse): ConvBNReLU1D(
        (act): ReLU(inplace=True)
        (net): Sequential(
          (0): Conv1d(768, 256, kernel_size=(1,), stride=(1,))
          (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
        )
      )
      (extraction): PosExtraction(
        (operation): Sequential(
          (0): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (2): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (3): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
        )
      )
    )
    (2): PointNetFeaturePropagation(
      (fuse): ConvBNReLU1D(
        (act): ReLU(inplace=True)
        (net): Sequential(
          (0): Conv1d(384, 128, kernel_size=(1,), stride=(1,))
          (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
        )
      )
      (extraction): PosExtraction(
        (operation): Sequential(
          (0): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (2): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (3): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
        )
      )
    )
    (3): PointNetFeaturePropagation(
      (fuse): ConvBNReLU1D(
        (act): ReLU(inplace=True)
        (net): Sequential(
          (0): Conv1d(192, 128, kernel_size=(1,), stride=(1,))
          (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
        )
      )
      (extraction): PosExtraction(
        (operation): Sequential(
          (0): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (2): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (3): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
        )
      )
    )
  )
  (act): ReLU(inplace=True)
  (cls_map): Sequential(
    (0): ConvBNReLU1D(
      (act): ReLU(inplace=True)
      (net): Sequential(
        (0): Conv1d(16, 64, kernel_size=(1,), stride=(1,))
        (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
      )
    )
    (1): ConvBNReLU1D(
      (act): ReLU(inplace=True)
      (net): Sequential(
        (0): Conv1d(64, 64, kernel_size=(1,), stride=(1,))
        (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
      )
    )
  )
  (gmp_map_list): ModuleList(
    (0): ConvBNReLU1D(
      (act): ReLU(inplace=True)
      (net): Sequential(
        (0): Conv1d(1024, 64, kernel_size=(1,), stride=(1,))
        (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
      )
    )
    (1): ConvBNReLU1D(
      (act): ReLU(inplace=True)
      (net): Sequential(
        (0): Conv1d(512, 64, kernel_size=(1,), stride=(1,))
        (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
      )
    )
    (2): ConvBNReLU1D(
      (act): ReLU(inplace=True)
      (net): Sequential(
        (0): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
      )
    )
    (3): ConvBNReLU1D(
      (act): ReLU(inplace=True)
      (net): Sequential(
        (0): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
      )
    )
    (4): ConvBNReLU1D(
      (act): ReLU(inplace=True)
      (net): Sequential(
        (0): Conv1d(64, 64, kernel_size=(1,), stride=(1,))
        (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
      )
    )
  )
  (gmp_map_end): ConvBNReLU1D(
    (act): ReLU(inplace=True)
    (net): Sequential(
      (0): Conv1d(320, 64, kernel_size=(1,), stride=(1,))
      (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): ReLU(inplace=True)
    )
  )
  (classifier): Sequential(
    (0): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
    (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): Dropout(p=0.5, inplace=False)
    (3): Conv1d(128, 50, kernel_size=(1,), stride=(1,))
  )
)
Namespace(batch_size=32, epochs=350, eval=False, exp_name='pointMLP_demo1', lr=0.003, manual_seed=None, model='pointMLP', model_type='insiou', momentum=0.9, no_cuda=False, num_points=2048, resume=False, scheduler='step', step=40, test_batch_size=32, use_sgd=False, workers=12)
Using GPU
PointMLP(
  (embedding): ConvBNReLU1D(
    (act): ReLU(inplace=True)
    (net): Sequential(
      (0): Conv1d(6, 64, kernel_size=(1,), stride=(1,))
      (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): ReLU(inplace=True)
    )
  )
  (local_grouper_list): ModuleList(
    (0): LocalGrouper()
    (1): LocalGrouper()
    (2): LocalGrouper()
    (3): LocalGrouper()
  )
  (pre_blocks_list): ModuleList(
    (0): PreExtraction(
      (transfer): ConvBNReLU1D(
        (act): ReLU(inplace=True)
        (net): Sequential(
          (0): Conv1d(131, 128, kernel_size=(1,), stride=(1,))
          (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
        )
      )
      (operation): Sequential(
        (0): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
      )
    )
    (1): PreExtraction(
      (transfer): ConvBNReLU1D(
        (act): ReLU(inplace=True)
        (net): Sequential(
          (0): Conv1d(259, 256, kernel_size=(1,), stride=(1,))
          (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
        )
      )
      (operation): Sequential(
        (0): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
      )
    )
    (2): PreExtraction(
      (transfer): ConvBNReLU1D(
        (act): ReLU(inplace=True)
        (net): Sequential(
          (0): Conv1d(515, 512, kernel_size=(1,), stride=(1,))
          (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
        )
      )
      (operation): Sequential(
        (0): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
      )
    )
    (3): PreExtraction(
      (transfer): ConvBNReLU1D(
        (act): ReLU(inplace=True)
        (net): Sequential(
          (0): Conv1d(1027, 1024, kernel_size=(1,), stride=(1,))
          (1): BatchNorm1d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
        )
      )
      (operation): Sequential(
        (0): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(1024, 1024, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(1024, 1024, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(1024, 1024, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(1024, 1024, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
      )
    )
  )
  (pos_blocks_list): ModuleList(
    (0): PosExtraction(
      (operation): Sequential(
        (0): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
      )
    )
    (1): PosExtraction(
      (operation): Sequential(
        (0): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
      )
    )
    (2): PosExtraction(
      (operation): Sequential(
        (0): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
      )
    )
    (3): PosExtraction(
      (operation): Sequential(
        (0): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(1024, 1024, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(1024, 1024, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(1024, 1024, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(1024, 1024, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
      )
    )
  )
  (decode_list): ModuleList(
    (0): PointNetFeaturePropagation(
      (fuse): ConvBNReLU1D(
        (act): ReLU(inplace=True)
        (net): Sequential(
          (0): Conv1d(1536, 512, kernel_size=(1,), stride=(1,))
          (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
        )
      )
      (extraction): PosExtraction(
        (operation): Sequential(
          (0): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (2): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (3): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
        )
      )
    )
    (1): PointNetFeaturePropagation(
      (fuse): ConvBNReLU1D(
        (act): ReLU(inplace=True)
        (net): Sequential(
          (0): Conv1d(768, 256, kernel_size=(1,), stride=(1,))
          (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
        )
      )
      (extraction): PosExtraction(
        (operation): Sequential(
          (0): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (2): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (3): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
        )
      )
    )
    (2): PointNetFeaturePropagation(
      (fuse): ConvBNReLU1D(
        (act): ReLU(inplace=True)
        (net): Sequential(
          (0): Conv1d(384, 128, kernel_size=(1,), stride=(1,))
          (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
        )
      )
      (extraction): PosExtraction(
        (operation): Sequential(
          (0): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (2): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (3): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
        )
      )
    )
    (3): PointNetFeaturePropagation(
      (fuse): ConvBNReLU1D(
        (act): ReLU(inplace=True)
        (net): Sequential(
          (0): Conv1d(192, 128, kernel_size=(1,), stride=(1,))
          (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
        )
      )
      (extraction): PosExtraction(
        (operation): Sequential(
          (0): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (2): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (3): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
        )
      )
    )
  )
  (act): ReLU(inplace=True)
  (cls_map): Sequential(
    (0): ConvBNReLU1D(
      (act): ReLU(inplace=True)
      (net): Sequential(
        (0): Conv1d(16, 64, kernel_size=(1,), stride=(1,))
        (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
      )
    )
    (1): ConvBNReLU1D(
      (act): ReLU(inplace=True)
      (net): Sequential(
        (0): Conv1d(64, 64, kernel_size=(1,), stride=(1,))
        (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
      )
    )
  )
  (gmp_map_list): ModuleList(
    (0): ConvBNReLU1D(
      (act): ReLU(inplace=True)
      (net): Sequential(
        (0): Conv1d(1024, 64, kernel_size=(1,), stride=(1,))
        (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
      )
    )
    (1): ConvBNReLU1D(
      (act): ReLU(inplace=True)
      (net): Sequential(
        (0): Conv1d(512, 64, kernel_size=(1,), stride=(1,))
        (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
      )
    )
    (2): ConvBNReLU1D(
      (act): ReLU(inplace=True)
      (net): Sequential(
        (0): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
      )
    )
    (3): ConvBNReLU1D(
      (act): ReLU(inplace=True)
      (net): Sequential(
        (0): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
      )
    )
    (4): ConvBNReLU1D(
      (act): ReLU(inplace=True)
      (net): Sequential(
        (0): Conv1d(64, 64, kernel_size=(1,), stride=(1,))
        (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
      )
    )
  )
  (gmp_map_end): ConvBNReLU1D(
    (act): ReLU(inplace=True)
    (net): Sequential(
      (0): Conv1d(320, 64, kernel_size=(1,), stride=(1,))
      (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): ReLU(inplace=True)
    )
  )
  (classifier): Sequential(
    (0): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
    (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): Dropout(p=0.5, inplace=False)
    (3): Conv1d(128, 50, kernel_size=(1,), stride=(1,))
  )
)
Namespace(batch_size=32, epochs=350, eval=False, exp_name='pointMLP_demo1', lr=0.003, manual_seed=None, model='pointMLP', model_type='insiou', momentum=0.9, no_cuda=False, num_points=2048, resume=False, scheduler='step', step=40, test_batch_size=32, use_sgd=False, workers=12)
Using GPU
PointMLP(
  (embedding): ConvBNReLU1D(
    (act): ReLU(inplace=True)
    (net): Sequential(
      (0): Conv1d(6, 64, kernel_size=(1,), stride=(1,))
      (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): ReLU(inplace=True)
    )
  )
  (local_grouper_list): ModuleList(
    (0): LocalGrouper()
    (1): LocalGrouper()
    (2): LocalGrouper()
    (3): LocalGrouper()
  )
  (pre_blocks_list): ModuleList(
    (0): PreExtraction(
      (transfer): ConvBNReLU1D(
        (act): ReLU(inplace=True)
        (net): Sequential(
          (0): Conv1d(131, 128, kernel_size=(1,), stride=(1,))
          (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
        )
      )
      (operation): Sequential(
        (0): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
      )
    )
    (1): PreExtraction(
      (transfer): ConvBNReLU1D(
        (act): ReLU(inplace=True)
        (net): Sequential(
          (0): Conv1d(259, 256, kernel_size=(1,), stride=(1,))
          (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
        )
      )
      (operation): Sequential(
        (0): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
      )
    )
    (2): PreExtraction(
      (transfer): ConvBNReLU1D(
        (act): ReLU(inplace=True)
        (net): Sequential(
          (0): Conv1d(515, 512, kernel_size=(1,), stride=(1,))
          (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
        )
      )
      (operation): Sequential(
        (0): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
      )
    )
    (3): PreExtraction(
      (transfer): ConvBNReLU1D(
        (act): ReLU(inplace=True)
        (net): Sequential(
          (0): Conv1d(1027, 1024, kernel_size=(1,), stride=(1,))
          (1): BatchNorm1d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
        )
      )
      (operation): Sequential(
        (0): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(1024, 1024, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(1024, 1024, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(1024, 1024, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(1024, 1024, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
      )
    )
  )
  (pos_blocks_list): ModuleList(
    (0): PosExtraction(
      (operation): Sequential(
        (0): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
      )
    )
    (1): PosExtraction(
      (operation): Sequential(
        (0): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
      )
    )
    (2): PosExtraction(
      (operation): Sequential(
        (0): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
      )
    )
    (3): PosExtraction(
      (operation): Sequential(
        (0): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(1024, 1024, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(1024, 1024, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(1024, 1024, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(1024, 1024, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
      )
    )
  )
  (decode_list): ModuleList(
    (0): PointNetFeaturePropagation(
      (fuse): ConvBNReLU1D(
        (act): ReLU(inplace=True)
        (net): Sequential(
          (0): Conv1d(1536, 512, kernel_size=(1,), stride=(1,))
          (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
        )
      )
      (extraction): PosExtraction(
        (operation): Sequential(
          (0): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (2): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (3): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
        )
      )
    )
    (1): PointNetFeaturePropagation(
      (fuse): ConvBNReLU1D(
        (act): ReLU(inplace=True)
        (net): Sequential(
          (0): Conv1d(768, 256, kernel_size=(1,), stride=(1,))
          (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
        )
      )
      (extraction): PosExtraction(
        (operation): Sequential(
          (0): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (2): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (3): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
        )
      )
    )
    (2): PointNetFeaturePropagation(
      (fuse): ConvBNReLU1D(
        (act): ReLU(inplace=True)
        (net): Sequential(
          (0): Conv1d(384, 128, kernel_size=(1,), stride=(1,))
          (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
        )
      )
      (extraction): PosExtraction(
        (operation): Sequential(
          (0): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (2): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (3): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
        )
      )
    )
    (3): PointNetFeaturePropagation(
      (fuse): ConvBNReLU1D(
        (act): ReLU(inplace=True)
        (net): Sequential(
          (0): Conv1d(192, 128, kernel_size=(1,), stride=(1,))
          (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
        )
      )
      (extraction): PosExtraction(
        (operation): Sequential(
          (0): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (2): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (3): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
        )
      )
    )
  )
  (act): ReLU(inplace=True)
  (cls_map): Sequential(
    (0): ConvBNReLU1D(
      (act): ReLU(inplace=True)
      (net): Sequential(
        (0): Conv1d(16, 64, kernel_size=(1,), stride=(1,))
        (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
      )
    )
    (1): ConvBNReLU1D(
      (act): ReLU(inplace=True)
      (net): Sequential(
        (0): Conv1d(64, 64, kernel_size=(1,), stride=(1,))
        (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
      )
    )
  )
  (gmp_map_list): ModuleList(
    (0): ConvBNReLU1D(
      (act): ReLU(inplace=True)
      (net): Sequential(
        (0): Conv1d(1024, 64, kernel_size=(1,), stride=(1,))
        (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
      )
    )
    (1): ConvBNReLU1D(
      (act): ReLU(inplace=True)
      (net): Sequential(
        (0): Conv1d(512, 64, kernel_size=(1,), stride=(1,))
        (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
      )
    )
    (2): ConvBNReLU1D(
      (act): ReLU(inplace=True)
      (net): Sequential(
        (0): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
      )
    )
    (3): ConvBNReLU1D(
      (act): ReLU(inplace=True)
      (net): Sequential(
        (0): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
      )
    )
    (4): ConvBNReLU1D(
      (act): ReLU(inplace=True)
      (net): Sequential(
        (0): Conv1d(64, 64, kernel_size=(1,), stride=(1,))
        (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
      )
    )
  )
  (gmp_map_end): ConvBNReLU1D(
    (act): ReLU(inplace=True)
    (net): Sequential(
      (0): Conv1d(320, 64, kernel_size=(1,), stride=(1,))
      (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): ReLU(inplace=True)
    )
  )
  (classifier): Sequential(
    (0): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
    (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): Dropout(p=0.5, inplace=False)
    (3): Conv1d(128, 50, kernel_size=(1,), stride=(1,))
  )
)
Namespace(batch_size=32, epochs=350, eval=False, exp_name='pointMLP_demo1', lr=0.003, manual_seed=None, model='pointMLP', model_type='insiou', momentum=0.9, no_cuda=False, num_points=2048, resume=False, scheduler='step', step=40, test_batch_size=32, use_sgd=False, workers=12)
Using GPU
PointMLP(
  (embedding): ConvBNReLU1D(
    (act): ReLU(inplace=True)
    (net): Sequential(
      (0): Conv1d(6, 64, kernel_size=(1,), stride=(1,))
      (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): ReLU(inplace=True)
    )
  )
  (local_grouper_list): ModuleList(
    (0): LocalGrouper()
    (1): LocalGrouper()
    (2): LocalGrouper()
    (3): LocalGrouper()
  )
  (pre_blocks_list): ModuleList(
    (0): PreExtraction(
      (transfer): ConvBNReLU1D(
        (act): ReLU(inplace=True)
        (net): Sequential(
          (0): Conv1d(131, 128, kernel_size=(1,), stride=(1,))
          (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
        )
      )
      (operation): Sequential(
        (0): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): SelfAttention(
          (key_conv): Conv2d(128, 128, kernel_size=(3, 3), stride=(2, 2))
          (values_conv): Conv2d(128, 128, kernel_size=(3, 3), stride=(2, 2))
          (query_conv): Conv2d(128, 128, kernel_size=(3, 3), stride=(2, 2))
        )
        (2): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (3): SelfAttention(
          (key_conv): Conv2d(128, 128, kernel_size=(3, 3), stride=(2, 2))
          (values_conv): Conv2d(128, 128, kernel_size=(3, 3), stride=(2, 2))
          (query_conv): Conv2d(128, 128, kernel_size=(3, 3), stride=(2, 2))
        )
      )
    )
    (1): PreExtraction(
      (transfer): ConvBNReLU1D(
        (act): ReLU(inplace=True)
        (net): Sequential(
          (0): Conv1d(259, 256, kernel_size=(1,), stride=(1,))
          (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
        )
      )
      (operation): Sequential(
        (0): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): SelfAttention(
          (key_conv): Conv2d(256, 256, kernel_size=(3, 3), stride=(2, 2))
          (values_conv): Conv2d(256, 256, kernel_size=(3, 3), stride=(2, 2))
          (query_conv): Conv2d(256, 256, kernel_size=(3, 3), stride=(2, 2))
        )
        (2): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (3): SelfAttention(
          (key_conv): Conv2d(256, 256, kernel_size=(3, 3), stride=(2, 2))
          (values_conv): Conv2d(256, 256, kernel_size=(3, 3), stride=(2, 2))
          (query_conv): Conv2d(256, 256, kernel_size=(3, 3), stride=(2, 2))
        )
      )
    )
    (2): PreExtraction(
      (transfer): ConvBNReLU1D(
        (act): ReLU(inplace=True)
        (net): Sequential(
          (0): Conv1d(515, 512, kernel_size=(1,), stride=(1,))
          (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
        )
      )
      (operation): Sequential(
        (0): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): SelfAttention(
          (key_conv): Conv2d(512, 512, kernel_size=(3, 3), stride=(2, 2))
          (values_conv): Conv2d(512, 512, kernel_size=(3, 3), stride=(2, 2))
          (query_conv): Conv2d(512, 512, kernel_size=(3, 3), stride=(2, 2))
        )
        (2): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (3): SelfAttention(
          (key_conv): Conv2d(512, 512, kernel_size=(3, 3), stride=(2, 2))
          (values_conv): Conv2d(512, 512, kernel_size=(3, 3), stride=(2, 2))
          (query_conv): Conv2d(512, 512, kernel_size=(3, 3), stride=(2, 2))
        )
      )
    )
    (3): PreExtraction(
      (transfer): ConvBNReLU1D(
        (act): ReLU(inplace=True)
        (net): Sequential(
          (0): Conv1d(1027, 1024, kernel_size=(1,), stride=(1,))
          (1): BatchNorm1d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
        )
      )
      (operation): Sequential(
        (0): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(1024, 1024, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(1024, 1024, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): SelfAttention(
          (key_conv): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(2, 2))
          (values_conv): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(2, 2))
          (query_conv): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(2, 2))
        )
        (2): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(1024, 1024, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(1024, 1024, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (3): SelfAttention(
          (key_conv): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(2, 2))
          (values_conv): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(2, 2))
          (query_conv): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(2, 2))
        )
      )
    )
  )
  (pos_blocks_list): ModuleList(
    (0): PosExtraction(
      (operation): Sequential(
        (0): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
      )
    )
    (1): PosExtraction(
      (operation): Sequential(
        (0): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
      )
    )
    (2): PosExtraction(
      (operation): Sequential(
        (0): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
      )
    )
    (3): PosExtraction(
      (operation): Sequential(
        (0): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(1024, 1024, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(1024, 1024, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(1024, 1024, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(1024, 1024, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
      )
    )
  )
  (decode_list): ModuleList(
    (0): PointNetFeaturePropagation(
      (fuse): ConvBNReLU1D(
        (act): ReLU(inplace=True)
        (net): Sequential(
          (0): Conv1d(1536, 512, kernel_size=(1,), stride=(1,))
          (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
        )
      )
      (extraction): PosExtraction(
        (operation): Sequential(
          (0): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (2): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (3): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
        )
      )
    )
    (1): PointNetFeaturePropagation(
      (fuse): ConvBNReLU1D(
        (act): ReLU(inplace=True)
        (net): Sequential(
          (0): Conv1d(768, 256, kernel_size=(1,), stride=(1,))
          (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
        )
      )
      (extraction): PosExtraction(
        (operation): Sequential(
          (0): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (2): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (3): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
        )
      )
    )
    (2): PointNetFeaturePropagation(
      (fuse): ConvBNReLU1D(
        (act): ReLU(inplace=True)
        (net): Sequential(
          (0): Conv1d(384, 128, kernel_size=(1,), stride=(1,))
          (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
        )
      )
      (extraction): PosExtraction(
        (operation): Sequential(
          (0): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (2): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (3): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
        )
      )
    )
    (3): PointNetFeaturePropagation(
      (fuse): ConvBNReLU1D(
        (act): ReLU(inplace=True)
        (net): Sequential(
          (0): Conv1d(192, 128, kernel_size=(1,), stride=(1,))
          (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
        )
      )
      (extraction): PosExtraction(
        (operation): Sequential(
          (0): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (2): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (3): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
        )
      )
    )
  )
  (act): ReLU(inplace=True)
  (cls_map): Sequential(
    (0): ConvBNReLU1D(
      (act): ReLU(inplace=True)
      (net): Sequential(
        (0): Conv1d(16, 64, kernel_size=(1,), stride=(1,))
        (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
      )
    )
    (1): ConvBNReLU1D(
      (act): ReLU(inplace=True)
      (net): Sequential(
        (0): Conv1d(64, 64, kernel_size=(1,), stride=(1,))
        (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
      )
    )
  )
  (gmp_map_list): ModuleList(
    (0): ConvBNReLU1D(
      (act): ReLU(inplace=True)
      (net): Sequential(
        (0): Conv1d(1024, 64, kernel_size=(1,), stride=(1,))
        (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
      )
    )
    (1): SelfAttention(
      (key_conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(2, 2))
      (values_conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(2, 2))
      (query_conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(2, 2))
    )
    (2): ConvBNReLU1D(
      (act): ReLU(inplace=True)
      (net): Sequential(
        (0): Conv1d(512, 64, kernel_size=(1,), stride=(1,))
        (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
      )
    )
    (3): SelfAttention(
      (key_conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(2, 2))
      (values_conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(2, 2))
      (query_conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(2, 2))
    )
    (4): ConvBNReLU1D(
      (act): ReLU(inplace=True)
      (net): Sequential(
        (0): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
      )
    )
    (5): SelfAttention(
      (key_conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(2, 2))
      (values_conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(2, 2))
      (query_conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(2, 2))
    )
    (6): ConvBNReLU1D(
      (act): ReLU(inplace=True)
      (net): Sequential(
        (0): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
      )
    )
    (7): SelfAttention(
      (key_conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(2, 2))
      (values_conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(2, 2))
      (query_conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(2, 2))
    )
    (8): ConvBNReLU1D(
      (act): ReLU(inplace=True)
      (net): Sequential(
        (0): Conv1d(64, 64, kernel_size=(1,), stride=(1,))
        (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
      )
    )
    (9): SelfAttention(
      (key_conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(2, 2))
      (values_conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(2, 2))
      (query_conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(2, 2))
    )
  )
  (gmp_map_end): ConvBNReLU1D(
    (act): ReLU(inplace=True)
    (net): Sequential(
      (0): Conv1d(320, 64, kernel_size=(1,), stride=(1,))
      (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): ReLU(inplace=True)
    )
  )
  (classifier): Sequential(
    (0): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
    (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): Dropout(p=0.5, inplace=False)
    (3): Conv1d(128, 50, kernel_size=(1,), stride=(1,))
  )
)
Namespace(batch_size=32, epochs=350, eval=False, exp_name='pointMLP_demo1', lr=0.003, manual_seed=None, model='pointMLP', model_type='insiou', momentum=0.9, no_cuda=False, num_points=2048, resume=False, scheduler='step', step=40, test_batch_size=32, use_sgd=False, workers=12)
Using GPU
PointMLP(
  (embedding): ConvBNReLU1D(
    (act): ReLU(inplace=True)
    (net): Sequential(
      (0): Conv1d(6, 64, kernel_size=(1,), stride=(1,))
      (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): ReLU(inplace=True)
    )
  )
  (local_grouper_list): ModuleList(
    (0): LocalGrouper()
    (1): LocalGrouper()
    (2): LocalGrouper()
    (3): LocalGrouper()
  )
  (pre_blocks_list): ModuleList(
    (0): PreExtraction(
      (transfer): ConvBNReLU1D(
        (act): ReLU(inplace=True)
        (net): Sequential(
          (0): Conv1d(131, 128, kernel_size=(1,), stride=(1,))
          (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
        )
      )
      (operation): Sequential(
        (0): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): SelfAttention(
          (key_conv): Conv2d(128, 128, kernel_size=(3, 3), stride=(2, 2))
          (values_conv): Conv2d(128, 128, kernel_size=(3, 3), stride=(2, 2))
          (query_conv): Conv2d(128, 128, kernel_size=(3, 3), stride=(2, 2))
        )
        (2): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (3): SelfAttention(
          (key_conv): Conv2d(128, 128, kernel_size=(3, 3), stride=(2, 2))
          (values_conv): Conv2d(128, 128, kernel_size=(3, 3), stride=(2, 2))
          (query_conv): Conv2d(128, 128, kernel_size=(3, 3), stride=(2, 2))
        )
      )
    )
    (1): PreExtraction(
      (transfer): ConvBNReLU1D(
        (act): ReLU(inplace=True)
        (net): Sequential(
          (0): Conv1d(259, 256, kernel_size=(1,), stride=(1,))
          (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
        )
      )
      (operation): Sequential(
        (0): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): SelfAttention(
          (key_conv): Conv2d(256, 256, kernel_size=(3, 3), stride=(2, 2))
          (values_conv): Conv2d(256, 256, kernel_size=(3, 3), stride=(2, 2))
          (query_conv): Conv2d(256, 256, kernel_size=(3, 3), stride=(2, 2))
        )
        (2): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (3): SelfAttention(
          (key_conv): Conv2d(256, 256, kernel_size=(3, 3), stride=(2, 2))
          (values_conv): Conv2d(256, 256, kernel_size=(3, 3), stride=(2, 2))
          (query_conv): Conv2d(256, 256, kernel_size=(3, 3), stride=(2, 2))
        )
      )
    )
    (2): PreExtraction(
      (transfer): ConvBNReLU1D(
        (act): ReLU(inplace=True)
        (net): Sequential(
          (0): Conv1d(515, 512, kernel_size=(1,), stride=(1,))
          (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
        )
      )
      (operation): Sequential(
        (0): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): SelfAttention(
          (key_conv): Conv2d(512, 512, kernel_size=(3, 3), stride=(2, 2))
          (values_conv): Conv2d(512, 512, kernel_size=(3, 3), stride=(2, 2))
          (query_conv): Conv2d(512, 512, kernel_size=(3, 3), stride=(2, 2))
        )
        (2): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (3): SelfAttention(
          (key_conv): Conv2d(512, 512, kernel_size=(3, 3), stride=(2, 2))
          (values_conv): Conv2d(512, 512, kernel_size=(3, 3), stride=(2, 2))
          (query_conv): Conv2d(512, 512, kernel_size=(3, 3), stride=(2, 2))
        )
      )
    )
    (3): PreExtraction(
      (transfer): ConvBNReLU1D(
        (act): ReLU(inplace=True)
        (net): Sequential(
          (0): Conv1d(1027, 1024, kernel_size=(1,), stride=(1,))
          (1): BatchNorm1d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
        )
      )
      (operation): Sequential(
        (0): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(1024, 1024, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(1024, 1024, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): SelfAttention(
          (key_conv): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(2, 2))
          (values_conv): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(2, 2))
          (query_conv): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(2, 2))
        )
        (2): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(1024, 1024, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(1024, 1024, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (3): SelfAttention(
          (key_conv): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(2, 2))
          (values_conv): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(2, 2))
          (query_conv): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(2, 2))
        )
      )
    )
  )
  (pos_blocks_list): ModuleList(
    (0): PosExtraction(
      (operation): Sequential(
        (0): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
      )
    )
    (1): PosExtraction(
      (operation): Sequential(
        (0): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
      )
    )
    (2): PosExtraction(
      (operation): Sequential(
        (0): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
      )
    )
    (3): PosExtraction(
      (operation): Sequential(
        (0): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(1024, 1024, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(1024, 1024, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(1024, 1024, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(1024, 1024, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
      )
    )
  )
  (decode_list): ModuleList(
    (0): PointNetFeaturePropagation(
      (fuse): ConvBNReLU1D(
        (act): ReLU(inplace=True)
        (net): Sequential(
          (0): Conv1d(1536, 512, kernel_size=(1,), stride=(1,))
          (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
        )
      )
      (extraction): PosExtraction(
        (operation): Sequential(
          (0): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (2): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (3): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
        )
      )
    )
    (1): PointNetFeaturePropagation(
      (fuse): ConvBNReLU1D(
        (act): ReLU(inplace=True)
        (net): Sequential(
          (0): Conv1d(768, 256, kernel_size=(1,), stride=(1,))
          (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
        )
      )
      (extraction): PosExtraction(
        (operation): Sequential(
          (0): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (2): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (3): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
        )
      )
    )
    (2): PointNetFeaturePropagation(
      (fuse): ConvBNReLU1D(
        (act): ReLU(inplace=True)
        (net): Sequential(
          (0): Conv1d(384, 128, kernel_size=(1,), stride=(1,))
          (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
        )
      )
      (extraction): PosExtraction(
        (operation): Sequential(
          (0): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (2): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (3): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
        )
      )
    )
    (3): PointNetFeaturePropagation(
      (fuse): ConvBNReLU1D(
        (act): ReLU(inplace=True)
        (net): Sequential(
          (0): Conv1d(192, 128, kernel_size=(1,), stride=(1,))
          (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
        )
      )
      (extraction): PosExtraction(
        (operation): Sequential(
          (0): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (2): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (3): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
        )
      )
    )
  )
  (act): ReLU(inplace=True)
  (cls_map): Sequential(
    (0): ConvBNReLU1D(
      (act): ReLU(inplace=True)
      (net): Sequential(
        (0): Conv1d(16, 64, kernel_size=(1,), stride=(1,))
        (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
      )
    )
    (1): ConvBNReLU1D(
      (act): ReLU(inplace=True)
      (net): Sequential(
        (0): Conv1d(64, 64, kernel_size=(1,), stride=(1,))
        (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
      )
    )
  )
  (gmp_map_list): ModuleList(
    (0): ConvBNReLU1D(
      (act): ReLU(inplace=True)
      (net): Sequential(
        (0): Conv1d(1024, 64, kernel_size=(1,), stride=(1,))
        (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
      )
    )
    (1): SelfAttention(
      (key_conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(2, 2))
      (values_conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(2, 2))
      (query_conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(2, 2))
    )
    (2): ConvBNReLU1D(
      (act): ReLU(inplace=True)
      (net): Sequential(
        (0): Conv1d(512, 64, kernel_size=(1,), stride=(1,))
        (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
      )
    )
    (3): SelfAttention(
      (key_conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(2, 2))
      (values_conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(2, 2))
      (query_conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(2, 2))
    )
    (4): ConvBNReLU1D(
      (act): ReLU(inplace=True)
      (net): Sequential(
        (0): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
      )
    )
    (5): SelfAttention(
      (key_conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(2, 2))
      (values_conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(2, 2))
      (query_conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(2, 2))
    )
    (6): ConvBNReLU1D(
      (act): ReLU(inplace=True)
      (net): Sequential(
        (0): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
      )
    )
    (7): SelfAttention(
      (key_conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(2, 2))
      (values_conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(2, 2))
      (query_conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(2, 2))
    )
    (8): ConvBNReLU1D(
      (act): ReLU(inplace=True)
      (net): Sequential(
        (0): Conv1d(64, 64, kernel_size=(1,), stride=(1,))
        (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
      )
    )
    (9): SelfAttention(
      (key_conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(2, 2))
      (values_conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(2, 2))
      (query_conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(2, 2))
    )
  )
  (gmp_map_end): ConvBNReLU1D(
    (act): ReLU(inplace=True)
    (net): Sequential(
      (0): Conv1d(320, 64, kernel_size=(1,), stride=(1,))
      (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): ReLU(inplace=True)
    )
  )
  (classifier): Sequential(
    (0): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
    (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): Dropout(p=0.5, inplace=False)
    (3): Conv1d(128, 50, kernel_size=(1,), stride=(1,))
  )
)
Namespace(batch_size=32, epochs=350, eval=False, exp_name='pointMLP_demo1', lr=0.003, manual_seed=None, model='pointMLP', model_type='insiou', momentum=0.9, no_cuda=False, num_points=2048, resume=False, scheduler='step', step=40, test_batch_size=32, use_sgd=False, workers=12)
Using GPU
Namespace(batch_size=32, epochs=350, eval=False, exp_name='pointMLP_demo1', lr=0.003, manual_seed=None, model='pointMLP', model_type='insiou', momentum=0.9, no_cuda=False, num_points=2048, resume=False, scheduler='step', step=40, test_batch_size=32, use_sgd=False, workers=12)
Using GPU
PointMLP(
  (embedding): ConvBNReLU1D(
    (act): ReLU(inplace=True)
    (net): Sequential(
      (0): Conv1d(6, 64, kernel_size=(1,), stride=(1,))
      (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): ReLU(inplace=True)
    )
  )
  (local_grouper_list): ModuleList(
    (0): LocalGrouper()
    (1): LocalGrouper()
    (2): LocalGrouper()
    (3): LocalGrouper()
  )
  (pre_blocks_list): ModuleList(
    (0): PreExtraction(
      (transfer): ConvBNReLU1D(
        (act): ReLU(inplace=True)
        (net): Sequential(
          (0): Conv1d(131, 128, kernel_size=(1,), stride=(1,))
          (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
        )
      )
      (operation): Sequential(
        (0): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(131, 131, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(131, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(131, 131, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(131, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): SelfAttention(
          (key_conv): Conv2d(128, 128, kernel_size=(3, 3), stride=(2, 2))
          (values_conv): Conv2d(128, 128, kernel_size=(3, 3), stride=(2, 2))
          (query_conv): Conv2d(128, 128, kernel_size=(3, 3), stride=(2, 2))
        )
        (2): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(131, 131, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(131, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(131, 131, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(131, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (3): SelfAttention(
          (key_conv): Conv2d(128, 128, kernel_size=(3, 3), stride=(2, 2))
          (values_conv): Conv2d(128, 128, kernel_size=(3, 3), stride=(2, 2))
          (query_conv): Conv2d(128, 128, kernel_size=(3, 3), stride=(2, 2))
        )
      )
    )
    (1): PreExtraction(
      (transfer): ConvBNReLU1D(
        (act): ReLU(inplace=True)
        (net): Sequential(
          (0): Conv1d(259, 256, kernel_size=(1,), stride=(1,))
          (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
        )
      )
      (operation): Sequential(
        (0): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(259, 259, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(259, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(259, 259, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(259, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): SelfAttention(
          (key_conv): Conv2d(256, 256, kernel_size=(3, 3), stride=(2, 2))
          (values_conv): Conv2d(256, 256, kernel_size=(3, 3), stride=(2, 2))
          (query_conv): Conv2d(256, 256, kernel_size=(3, 3), stride=(2, 2))
        )
        (2): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(259, 259, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(259, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(259, 259, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(259, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (3): SelfAttention(
          (key_conv): Conv2d(256, 256, kernel_size=(3, 3), stride=(2, 2))
          (values_conv): Conv2d(256, 256, kernel_size=(3, 3), stride=(2, 2))
          (query_conv): Conv2d(256, 256, kernel_size=(3, 3), stride=(2, 2))
        )
      )
    )
    (2): PreExtraction(
      (transfer): ConvBNReLU1D(
        (act): ReLU(inplace=True)
        (net): Sequential(
          (0): Conv1d(515, 512, kernel_size=(1,), stride=(1,))
          (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
        )
      )
      (operation): Sequential(
        (0): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(515, 515, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(515, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(515, 515, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(515, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): SelfAttention(
          (key_conv): Conv2d(512, 512, kernel_size=(3, 3), stride=(2, 2))
          (values_conv): Conv2d(512, 512, kernel_size=(3, 3), stride=(2, 2))
          (query_conv): Conv2d(512, 512, kernel_size=(3, 3), stride=(2, 2))
        )
        (2): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(515, 515, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(515, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(515, 515, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(515, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (3): SelfAttention(
          (key_conv): Conv2d(512, 512, kernel_size=(3, 3), stride=(2, 2))
          (values_conv): Conv2d(512, 512, kernel_size=(3, 3), stride=(2, 2))
          (query_conv): Conv2d(512, 512, kernel_size=(3, 3), stride=(2, 2))
        )
      )
    )
    (3): PreExtraction(
      (transfer): ConvBNReLU1D(
        (act): ReLU(inplace=True)
        (net): Sequential(
          (0): Conv1d(1027, 1024, kernel_size=(1,), stride=(1,))
          (1): BatchNorm1d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
        )
      )
      (operation): Sequential(
        (0): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(1027, 1027, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(1027, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(1027, 1027, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(1027, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): SelfAttention(
          (key_conv): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(2, 2))
          (values_conv): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(2, 2))
          (query_conv): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(2, 2))
        )
        (2): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(1027, 1027, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(1027, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(1027, 1027, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(1027, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (3): SelfAttention(
          (key_conv): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(2, 2))
          (values_conv): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(2, 2))
          (query_conv): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(2, 2))
        )
      )
    )
  )
  (pos_blocks_list): ModuleList(
    (0): PosExtraction(
      (operation): Sequential(
        (0): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
      )
    )
    (1): PosExtraction(
      (operation): Sequential(
        (0): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
      )
    )
    (2): PosExtraction(
      (operation): Sequential(
        (0): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
      )
    )
    (3): PosExtraction(
      (operation): Sequential(
        (0): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(1024, 1024, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(1024, 1024, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(1024, 1024, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(1024, 1024, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
      )
    )
  )
  (decode_list): ModuleList(
    (0): PointNetFeaturePropagation(
      (fuse): ConvBNReLU1D(
        (act): ReLU(inplace=True)
        (net): Sequential(
          (0): Conv1d(1536, 512, kernel_size=(1,), stride=(1,))
          (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
        )
      )
      (extraction): PosExtraction(
        (operation): Sequential(
          (0): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (2): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (3): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
        )
      )
    )
    (1): PointNetFeaturePropagation(
      (fuse): ConvBNReLU1D(
        (act): ReLU(inplace=True)
        (net): Sequential(
          (0): Conv1d(768, 256, kernel_size=(1,), stride=(1,))
          (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
        )
      )
      (extraction): PosExtraction(
        (operation): Sequential(
          (0): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (2): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (3): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
        )
      )
    )
    (2): PointNetFeaturePropagation(
      (fuse): ConvBNReLU1D(
        (act): ReLU(inplace=True)
        (net): Sequential(
          (0): Conv1d(384, 128, kernel_size=(1,), stride=(1,))
          (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
        )
      )
      (extraction): PosExtraction(
        (operation): Sequential(
          (0): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (2): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (3): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
        )
      )
    )
    (3): PointNetFeaturePropagation(
      (fuse): ConvBNReLU1D(
        (act): ReLU(inplace=True)
        (net): Sequential(
          (0): Conv1d(192, 128, kernel_size=(1,), stride=(1,))
          (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
        )
      )
      (extraction): PosExtraction(
        (operation): Sequential(
          (0): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (2): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (3): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
        )
      )
    )
  )
  (act): ReLU(inplace=True)
  (cls_map): Sequential(
    (0): ConvBNReLU1D(
      (act): ReLU(inplace=True)
      (net): Sequential(
        (0): Conv1d(16, 64, kernel_size=(1,), stride=(1,))
        (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
      )
    )
    (1): ConvBNReLU1D(
      (act): ReLU(inplace=True)
      (net): Sequential(
        (0): Conv1d(64, 64, kernel_size=(1,), stride=(1,))
        (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
      )
    )
  )
  (gmp_map_list): ModuleList(
    (0): ConvBNReLU1D(
      (act): ReLU(inplace=True)
      (net): Sequential(
        (0): Conv1d(1024, 64, kernel_size=(1,), stride=(1,))
        (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
      )
    )
    (1): SelfAttention(
      (key_conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(2, 2))
      (values_conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(2, 2))
      (query_conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(2, 2))
    )
    (2): ConvBNReLU1D(
      (act): ReLU(inplace=True)
      (net): Sequential(
        (0): Conv1d(512, 64, kernel_size=(1,), stride=(1,))
        (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
      )
    )
    (3): SelfAttention(
      (key_conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(2, 2))
      (values_conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(2, 2))
      (query_conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(2, 2))
    )
    (4): ConvBNReLU1D(
      (act): ReLU(inplace=True)
      (net): Sequential(
        (0): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
      )
    )
    (5): SelfAttention(
      (key_conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(2, 2))
      (values_conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(2, 2))
      (query_conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(2, 2))
    )
    (6): ConvBNReLU1D(
      (act): ReLU(inplace=True)
      (net): Sequential(
        (0): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
      )
    )
    (7): SelfAttention(
      (key_conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(2, 2))
      (values_conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(2, 2))
      (query_conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(2, 2))
    )
    (8): ConvBNReLU1D(
      (act): ReLU(inplace=True)
      (net): Sequential(
        (0): Conv1d(64, 64, kernel_size=(1,), stride=(1,))
        (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
      )
    )
    (9): SelfAttention(
      (key_conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(2, 2))
      (values_conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(2, 2))
      (query_conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(2, 2))
    )
  )
  (gmp_map_end): ConvBNReLU1D(
    (act): ReLU(inplace=True)
    (net): Sequential(
      (0): Conv1d(320, 64, kernel_size=(1,), stride=(1,))
      (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): ReLU(inplace=True)
    )
  )
  (classifier): Sequential(
    (0): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
    (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): Dropout(p=0.5, inplace=False)
    (3): Conv1d(128, 50, kernel_size=(1,), stride=(1,))
  )
)
Namespace(batch_size=32, epochs=350, eval=False, exp_name='pointMLP_demo1', lr=0.003, manual_seed=None, model='pointMLP', model_type='insiou', momentum=0.9, no_cuda=False, num_points=2048, resume=False, scheduler='step', step=40, test_batch_size=32, use_sgd=False, workers=12)
Using GPU
Namespace(batch_size=32, epochs=350, eval=False, exp_name='pointMLP_demo1', lr=0.003, manual_seed=None, model='pointMLP', model_type='insiou', momentum=0.9, no_cuda=False, num_points=2048, resume=False, scheduler='step', step=40, test_batch_size=32, use_sgd=False, workers=12)
Using GPU
Namespace(batch_size=32, epochs=350, eval=False, exp_name='pointMLP_demo1', lr=0.003, manual_seed=None, model='pointMLP', model_type='insiou', momentum=0.9, no_cuda=False, num_points=2048, resume=False, scheduler='step', step=40, test_batch_size=32, use_sgd=False, workers=12)
Using GPU
PointMLP(
  (embedding): ConvBNReLU1D(
    (act): ReLU(inplace=True)
    (net): Sequential(
      (0): Conv1d(6, 64, kernel_size=(1,), stride=(1,))
      (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): ReLU(inplace=True)
    )
  )
  (local_grouper_list): ModuleList(
    (0): LocalGrouper()
    (1): LocalGrouper()
    (2): LocalGrouper()
    (3): LocalGrouper()
  )
  (pre_blocks_list): ModuleList(
    (0): PreExtraction(
      (transfer): ConvBNReLU1D(
        (act): ReLU(inplace=True)
        (net): Sequential(
          (0): Conv1d(131, 128, kernel_size=(1,), stride=(1,))
          (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
        )
      )
      (operation): Sequential(
        (0): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
      )
    )
    (1): PreExtraction(
      (transfer): ConvBNReLU1D(
        (act): ReLU(inplace=True)
        (net): Sequential(
          (0): Conv1d(259, 256, kernel_size=(1,), stride=(1,))
          (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
        )
      )
      (operation): Sequential(
        (0): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
      )
    )
    (2): PreExtraction(
      (transfer): ConvBNReLU1D(
        (act): ReLU(inplace=True)
        (net): Sequential(
          (0): Conv1d(515, 512, kernel_size=(1,), stride=(1,))
          (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
        )
      )
      (operation): Sequential(
        (0): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
      )
    )
    (3): PreExtraction(
      (transfer): ConvBNReLU1D(
        (act): ReLU(inplace=True)
        (net): Sequential(
          (0): Conv1d(1027, 1024, kernel_size=(1,), stride=(1,))
          (1): BatchNorm1d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
        )
      )
      (operation): Sequential(
        (0): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(1024, 1024, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(1024, 1024, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(1024, 1024, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(1024, 1024, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
      )
    )
  )
  (pos_blocks_list): ModuleList(
    (0): PosExtraction(
      (operation): Sequential(
        (0): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
      )
    )
    (1): PosExtraction(
      (operation): Sequential(
        (0): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
      )
    )
    (2): PosExtraction(
      (operation): Sequential(
        (0): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
      )
    )
    (3): PosExtraction(
      (operation): Sequential(
        (0): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(1024, 1024, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(1024, 1024, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(1024, 1024, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(1024, 1024, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
      )
    )
  )
  (decode_list): ModuleList(
    (0): PointNetFeaturePropagation(
      (fuse): ConvBNReLU1D(
        (act): ReLU(inplace=True)
        (net): Sequential(
          (0): Conv1d(1536, 512, kernel_size=(1,), stride=(1,))
          (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
        )
      )
      (extraction): PosExtraction(
        (operation): Sequential(
          (0): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (2): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (3): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
        )
      )
    )
    (1): PointNetFeaturePropagation(
      (fuse): ConvBNReLU1D(
        (act): ReLU(inplace=True)
        (net): Sequential(
          (0): Conv1d(768, 256, kernel_size=(1,), stride=(1,))
          (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
        )
      )
      (extraction): PosExtraction(
        (operation): Sequential(
          (0): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (2): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (3): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
        )
      )
    )
    (2): PointNetFeaturePropagation(
      (fuse): ConvBNReLU1D(
        (act): ReLU(inplace=True)
        (net): Sequential(
          (0): Conv1d(384, 128, kernel_size=(1,), stride=(1,))
          (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
        )
      )
      (extraction): PosExtraction(
        (operation): Sequential(
          (0): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (2): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (3): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
        )
      )
    )
    (3): PointNetFeaturePropagation(
      (fuse): ConvBNReLU1D(
        (act): ReLU(inplace=True)
        (net): Sequential(
          (0): Conv1d(192, 128, kernel_size=(1,), stride=(1,))
          (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
        )
      )
      (extraction): PosExtraction(
        (operation): Sequential(
          (0): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (2): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (3): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
        )
      )
    )
  )
  (act): ReLU(inplace=True)
  (cls_map): Sequential(
    (0): ConvBNReLU1D(
      (act): ReLU(inplace=True)
      (net): Sequential(
        (0): Conv1d(16, 64, kernel_size=(1,), stride=(1,))
        (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
      )
    )
    (1): ConvBNReLU1D(
      (act): ReLU(inplace=True)
      (net): Sequential(
        (0): Conv1d(64, 64, kernel_size=(1,), stride=(1,))
        (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
      )
    )
  )
  (gmp_map_list): ModuleList(
    (0): ConvBNReLU1D(
      (act): ReLU(inplace=True)
      (net): Sequential(
        (0): Conv1d(1024, 64, kernel_size=(1,), stride=(1,))
        (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
      )
    )
    (1): SelfAttention(
      (key_conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(2, 2))
      (values_conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(2, 2))
      (query_conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(2, 2))
    )
    (2): ConvBNReLU1D(
      (act): ReLU(inplace=True)
      (net): Sequential(
        (0): Conv1d(512, 64, kernel_size=(1,), stride=(1,))
        (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
      )
    )
    (3): SelfAttention(
      (key_conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(2, 2))
      (values_conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(2, 2))
      (query_conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(2, 2))
    )
    (4): ConvBNReLU1D(
      (act): ReLU(inplace=True)
      (net): Sequential(
        (0): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
      )
    )
    (5): SelfAttention(
      (key_conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(2, 2))
      (values_conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(2, 2))
      (query_conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(2, 2))
    )
    (6): ConvBNReLU1D(
      (act): ReLU(inplace=True)
      (net): Sequential(
        (0): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
      )
    )
    (7): SelfAttention(
      (key_conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(2, 2))
      (values_conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(2, 2))
      (query_conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(2, 2))
    )
    (8): ConvBNReLU1D(
      (act): ReLU(inplace=True)
      (net): Sequential(
        (0): Conv1d(64, 64, kernel_size=(1,), stride=(1,))
        (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
      )
    )
    (9): SelfAttention(
      (key_conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(2, 2))
      (values_conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(2, 2))
      (query_conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(2, 2))
    )
  )
  (gmp_map_end): ConvBNReLU1D(
    (act): ReLU(inplace=True)
    (net): Sequential(
      (0): Conv1d(320, 64, kernel_size=(1,), stride=(1,))
      (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): ReLU(inplace=True)
    )
  )
  (classifier): Sequential(
    (0): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
    (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): Dropout(p=0.5, inplace=False)
    (3): Conv1d(128, 50, kernel_size=(1,), stride=(1,))
  )
)
Namespace(batch_size=32, epochs=350, eval=False, exp_name='pointMLP_demo1', lr=0.003, manual_seed=None, model='pointMLP', model_type='insiou', momentum=0.9, no_cuda=False, num_points=2048, resume=False, scheduler='step', step=40, test_batch_size=32, use_sgd=False, workers=12)
Using GPU
PointMLP(
  (embedding): ConvBNReLU1D(
    (act): ReLU(inplace=True)
    (net): Sequential(
      (0): Conv1d(6, 64, kernel_size=(1,), stride=(1,))
      (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): ReLU(inplace=True)
    )
  )
  (local_grouper_list): ModuleList(
    (0): LocalGrouper()
    (1): LocalGrouper()
    (2): LocalGrouper()
    (3): LocalGrouper()
  )
  (pre_blocks_list): ModuleList(
    (0): PreExtraction(
      (transfer): ConvBNReLU1D(
        (act): ReLU(inplace=True)
        (net): Sequential(
          (0): Conv1d(131, 128, kernel_size=(1,), stride=(1,))
          (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
        )
      )
      (operation): Sequential(
        (0): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
      )
    )
    (1): PreExtraction(
      (transfer): ConvBNReLU1D(
        (act): ReLU(inplace=True)
        (net): Sequential(
          (0): Conv1d(259, 256, kernel_size=(1,), stride=(1,))
          (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
        )
      )
      (operation): Sequential(
        (0): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
      )
    )
    (2): PreExtraction(
      (transfer): ConvBNReLU1D(
        (act): ReLU(inplace=True)
        (net): Sequential(
          (0): Conv1d(515, 512, kernel_size=(1,), stride=(1,))
          (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
        )
      )
      (operation): Sequential(
        (0): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
      )
    )
    (3): PreExtraction(
      (transfer): ConvBNReLU1D(
        (act): ReLU(inplace=True)
        (net): Sequential(
          (0): Conv1d(1027, 1024, kernel_size=(1,), stride=(1,))
          (1): BatchNorm1d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
        )
      )
      (operation): Sequential(
        (0): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(1024, 1024, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(1024, 1024, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(1024, 1024, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(1024, 1024, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
      )
    )
  )
  (pos_blocks_list): ModuleList(
    (0): PosExtraction(
      (operation): Sequential(
        (0): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
      )
    )
    (1): PosExtraction(
      (operation): Sequential(
        (0): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
      )
    )
    (2): PosExtraction(
      (operation): Sequential(
        (0): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
      )
    )
    (3): PosExtraction(
      (operation): Sequential(
        (0): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(1024, 1024, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(1024, 1024, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(1024, 1024, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(1024, 1024, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
      )
    )
  )
  (decode_list): ModuleList(
    (0): PointNetFeaturePropagation(
      (fuse): ConvBNReLU1D(
        (act): ReLU(inplace=True)
        (net): Sequential(
          (0): Conv1d(1536, 512, kernel_size=(1,), stride=(1,))
          (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
        )
      )
      (extraction): PosExtraction(
        (operation): Sequential(
          (0): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (2): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (3): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
        )
      )
    )
    (1): PointNetFeaturePropagation(
      (fuse): ConvBNReLU1D(
        (act): ReLU(inplace=True)
        (net): Sequential(
          (0): Conv1d(768, 256, kernel_size=(1,), stride=(1,))
          (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
        )
      )
      (extraction): PosExtraction(
        (operation): Sequential(
          (0): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (2): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (3): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
        )
      )
    )
    (2): PointNetFeaturePropagation(
      (fuse): ConvBNReLU1D(
        (act): ReLU(inplace=True)
        (net): Sequential(
          (0): Conv1d(384, 128, kernel_size=(1,), stride=(1,))
          (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
        )
      )
      (extraction): PosExtraction(
        (operation): Sequential(
          (0): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (2): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (3): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
        )
      )
    )
    (3): PointNetFeaturePropagation(
      (fuse): ConvBNReLU1D(
        (act): ReLU(inplace=True)
        (net): Sequential(
          (0): Conv1d(192, 128, kernel_size=(1,), stride=(1,))
          (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
        )
      )
      (extraction): PosExtraction(
        (operation): Sequential(
          (0): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (2): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (3): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
        )
      )
    )
  )
  (act): ReLU(inplace=True)
  (cls_map): Sequential(
    (0): ConvBNReLU1D(
      (act): ReLU(inplace=True)
      (net): Sequential(
        (0): Conv1d(16, 64, kernel_size=(1,), stride=(1,))
        (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
      )
    )
    (1): ConvBNReLU1D(
      (act): ReLU(inplace=True)
      (net): Sequential(
        (0): Conv1d(64, 64, kernel_size=(1,), stride=(1,))
        (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
      )
    )
  )
  (gmp_map_list): ModuleList(
    (0): ConvBNReLU1D(
      (act): ReLU(inplace=True)
      (net): Sequential(
        (0): Conv1d(1024, 64, kernel_size=(1,), stride=(1,))
        (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
      )
    )
    (1): SelfAttention(
      (key_conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(2, 2))
      (values_conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(2, 2))
      (query_conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(2, 2))
    )
    (2): ConvBNReLU1D(
      (act): ReLU(inplace=True)
      (net): Sequential(
        (0): Conv1d(512, 64, kernel_size=(1,), stride=(1,))
        (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
      )
    )
    (3): SelfAttention(
      (key_conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(2, 2))
      (values_conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(2, 2))
      (query_conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(2, 2))
    )
    (4): ConvBNReLU1D(
      (act): ReLU(inplace=True)
      (net): Sequential(
        (0): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
      )
    )
    (5): SelfAttention(
      (key_conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(2, 2))
      (values_conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(2, 2))
      (query_conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(2, 2))
    )
    (6): ConvBNReLU1D(
      (act): ReLU(inplace=True)
      (net): Sequential(
        (0): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
      )
    )
    (7): SelfAttention(
      (key_conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(2, 2))
      (values_conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(2, 2))
      (query_conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(2, 2))
    )
    (8): ConvBNReLU1D(
      (act): ReLU(inplace=True)
      (net): Sequential(
        (0): Conv1d(64, 64, kernel_size=(1,), stride=(1,))
        (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
      )
    )
    (9): SelfAttention(
      (key_conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(2, 2))
      (values_conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(2, 2))
      (query_conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(2, 2))
    )
  )
  (gmp_map_end): ConvBNReLU1D(
    (act): ReLU(inplace=True)
    (net): Sequential(
      (0): Conv1d(320, 64, kernel_size=(1,), stride=(1,))
      (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): ReLU(inplace=True)
    )
  )
  (classifier): Sequential(
    (0): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
    (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): Dropout(p=0.5, inplace=False)
    (3): Conv1d(128, 50, kernel_size=(1,), stride=(1,))
  )
)
Namespace(batch_size=32, epochs=350, eval=False, exp_name='pointMLP_demo1', lr=0.003, manual_seed=None, model='pointMLP', model_type='insiou', momentum=0.9, no_cuda=False, num_points=2048, resume=False, scheduler='step', step=40, test_batch_size=32, use_sgd=False, workers=12)
Using GPU
PointMLP(
  (embedding): ConvBNReLU1D(
    (act): ReLU(inplace=True)
    (net): Sequential(
      (0): Conv1d(6, 64, kernel_size=(1,), stride=(1,))
      (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): ReLU(inplace=True)
    )
  )
  (local_grouper_list): ModuleList(
    (0): LocalGrouper()
    (1): LocalGrouper()
    (2): LocalGrouper()
    (3): LocalGrouper()
  )
  (pre_blocks_list): ModuleList(
    (0): PreExtraction(
      (transfer): ConvBNReLU1D(
        (act): ReLU(inplace=True)
        (net): Sequential(
          (0): Conv1d(131, 128, kernel_size=(1,), stride=(1,))
          (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
        )
      )
      (operation): Sequential(
        (0): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
      )
    )
    (1): PreExtraction(
      (transfer): ConvBNReLU1D(
        (act): ReLU(inplace=True)
        (net): Sequential(
          (0): Conv1d(259, 256, kernel_size=(1,), stride=(1,))
          (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
        )
      )
      (operation): Sequential(
        (0): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
      )
    )
    (2): PreExtraction(
      (transfer): ConvBNReLU1D(
        (act): ReLU(inplace=True)
        (net): Sequential(
          (0): Conv1d(515, 512, kernel_size=(1,), stride=(1,))
          (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
        )
      )
      (operation): Sequential(
        (0): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
      )
    )
    (3): PreExtraction(
      (transfer): ConvBNReLU1D(
        (act): ReLU(inplace=True)
        (net): Sequential(
          (0): Conv1d(1027, 1024, kernel_size=(1,), stride=(1,))
          (1): BatchNorm1d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
        )
      )
      (operation): Sequential(
        (0): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(1024, 1024, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(1024, 1024, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(1024, 1024, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(1024, 1024, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
      )
    )
  )
  (pos_blocks_list): ModuleList(
    (0): PosExtraction(
      (operation): Sequential(
        (0): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
      )
    )
    (1): PosExtraction(
      (operation): Sequential(
        (0): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
      )
    )
    (2): PosExtraction(
      (operation): Sequential(
        (0): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
      )
    )
    (3): PosExtraction(
      (operation): Sequential(
        (0): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(1024, 1024, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(1024, 1024, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(1024, 1024, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(1024, 1024, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
      )
    )
  )
  (decode_list): ModuleList(
    (0): PointNetFeaturePropagation(
      (fuse): ConvBNReLU1D(
        (act): ReLU(inplace=True)
        (net): Sequential(
          (0): Conv1d(1536, 512, kernel_size=(1,), stride=(1,))
          (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
        )
      )
      (extraction): PosExtraction(
        (operation): Sequential(
          (0): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (2): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (3): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
        )
      )
    )
    (1): PointNetFeaturePropagation(
      (fuse): ConvBNReLU1D(
        (act): ReLU(inplace=True)
        (net): Sequential(
          (0): Conv1d(768, 256, kernel_size=(1,), stride=(1,))
          (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
        )
      )
      (extraction): PosExtraction(
        (operation): Sequential(
          (0): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (2): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (3): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
        )
      )
    )
    (2): PointNetFeaturePropagation(
      (fuse): ConvBNReLU1D(
        (act): ReLU(inplace=True)
        (net): Sequential(
          (0): Conv1d(384, 128, kernel_size=(1,), stride=(1,))
          (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
        )
      )
      (extraction): PosExtraction(
        (operation): Sequential(
          (0): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (2): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (3): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
        )
      )
    )
    (3): PointNetFeaturePropagation(
      (fuse): ConvBNReLU1D(
        (act): ReLU(inplace=True)
        (net): Sequential(
          (0): Conv1d(192, 128, kernel_size=(1,), stride=(1,))
          (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
        )
      )
      (extraction): PosExtraction(
        (operation): Sequential(
          (0): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (2): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (3): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
        )
      )
    )
  )
  (act): ReLU(inplace=True)
  (cls_map): Sequential(
    (0): ConvBNReLU1D(
      (act): ReLU(inplace=True)
      (net): Sequential(
        (0): Conv1d(16, 64, kernel_size=(1,), stride=(1,))
        (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
      )
    )
    (1): ConvBNReLU1D(
      (act): ReLU(inplace=True)
      (net): Sequential(
        (0): Conv1d(64, 64, kernel_size=(1,), stride=(1,))
        (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
      )
    )
  )
  (gmp_map_list): ModuleList(
    (0): ConvBNReLU1D(
      (act): ReLU(inplace=True)
      (net): Sequential(
        (0): Conv1d(1024, 64, kernel_size=(1,), stride=(1,))
        (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
      )
    )
    (1): SelfAttention(
      (key_conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(2, 2))
      (values_conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(2, 2))
      (query_conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(2, 2))
    )
    (2): ConvBNReLU1D(
      (act): ReLU(inplace=True)
      (net): Sequential(
        (0): Conv1d(512, 64, kernel_size=(1,), stride=(1,))
        (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
      )
    )
    (3): SelfAttention(
      (key_conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(2, 2))
      (values_conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(2, 2))
      (query_conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(2, 2))
    )
    (4): ConvBNReLU1D(
      (act): ReLU(inplace=True)
      (net): Sequential(
        (0): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
      )
    )
    (5): SelfAttention(
      (key_conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(2, 2))
      (values_conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(2, 2))
      (query_conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(2, 2))
    )
    (6): ConvBNReLU1D(
      (act): ReLU(inplace=True)
      (net): Sequential(
        (0): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
      )
    )
    (7): SelfAttention(
      (key_conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(2, 2))
      (values_conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(2, 2))
      (query_conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(2, 2))
    )
    (8): ConvBNReLU1D(
      (act): ReLU(inplace=True)
      (net): Sequential(
        (0): Conv1d(64, 64, kernel_size=(1,), stride=(1,))
        (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
      )
    )
    (9): SelfAttention(
      (key_conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(2, 2))
      (values_conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(2, 2))
      (query_conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(2, 2))
    )
  )
  (gmp_map_end): ConvBNReLU1D(
    (act): ReLU(inplace=True)
    (net): Sequential(
      (0): Conv1d(320, 64, kernel_size=(1,), stride=(1,))
      (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): ReLU(inplace=True)
    )
  )
  (classifier): Sequential(
    (0): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
    (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): Dropout(p=0.5, inplace=False)
    (3): Conv1d(128, 50, kernel_size=(1,), stride=(1,))
  )
)
Namespace(batch_size=32, epochs=350, eval=False, exp_name='pointMLP_demo1', lr=0.003, manual_seed=None, model='pointMLP', model_type='insiou', momentum=0.9, no_cuda=False, num_points=2048, resume=False, scheduler='step', step=40, test_batch_size=32, use_sgd=False, workers=12)
Using GPU
Namespace(batch_size=32, epochs=350, eval=False, exp_name='pointMLP_demo1', lr=0.003, manual_seed=None, model='pointMLP', model_type='insiou', momentum=0.9, no_cuda=False, num_points=2048, resume=False, scheduler='step', step=40, test_batch_size=32, use_sgd=False, workers=12)
Using GPU
Namespace(batch_size=32, epochs=350, eval=False, exp_name='pointMLP_demo1', lr=0.003, manual_seed=None, model='pointMLP', model_type='insiou', momentum=0.9, no_cuda=False, num_points=2048, resume=False, scheduler='step', step=40, test_batch_size=32, use_sgd=False, workers=12)
Using GPU
PointMLP(
  (embedding): ConvBNReLU1D(
    (act): ReLU(inplace=True)
    (net): Sequential(
      (0): Conv1d(6, 64, kernel_size=(1,), stride=(1,))
      (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): ReLU(inplace=True)
    )
  )
  (local_grouper_list): ModuleList(
    (0): LocalGrouper()
    (1): LocalGrouper()
    (2): LocalGrouper()
    (3): LocalGrouper()
  )
  (pre_blocks_list): ModuleList(
    (0): PreExtraction(
      (transfer): ConvBNReLU1D(
        (act): ReLU(inplace=True)
        (net): Sequential(
          (0): Conv1d(131, 128, kernel_size=(1,), stride=(1,))
          (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
        )
      )
      (operation): Sequential(
        (0): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
      )
    )
    (1): PreExtraction(
      (transfer): ConvBNReLU1D(
        (act): ReLU(inplace=True)
        (net): Sequential(
          (0): Conv1d(259, 256, kernel_size=(1,), stride=(1,))
          (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
        )
      )
      (operation): Sequential(
        (0): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
      )
    )
    (2): PreExtraction(
      (transfer): ConvBNReLU1D(
        (act): ReLU(inplace=True)
        (net): Sequential(
          (0): Conv1d(515, 512, kernel_size=(1,), stride=(1,))
          (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
        )
      )
      (operation): Sequential(
        (0): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
      )
    )
    (3): PreExtraction(
      (transfer): ConvBNReLU1D(
        (act): ReLU(inplace=True)
        (net): Sequential(
          (0): Conv1d(1027, 1024, kernel_size=(1,), stride=(1,))
          (1): BatchNorm1d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
        )
      )
      (operation): Sequential(
        (0): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(1024, 1024, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(1024, 1024, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(1024, 1024, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(1024, 1024, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
      )
    )
  )
  (pos_blocks_list): ModuleList(
    (0): PosExtraction(
      (operation): Sequential(
        (0): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
      )
    )
    (1): PosExtraction(
      (operation): Sequential(
        (0): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
      )
    )
    (2): PosExtraction(
      (operation): Sequential(
        (0): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
      )
    )
    (3): PosExtraction(
      (operation): Sequential(
        (0): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(1024, 1024, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(1024, 1024, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(1024, 1024, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(1024, 1024, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
      )
    )
  )
  (decode_list): ModuleList(
    (0): PointNetFeaturePropagation(
      (fuse): ConvBNReLU1D(
        (act): ReLU(inplace=True)
        (net): Sequential(
          (0): Conv1d(1536, 512, kernel_size=(1,), stride=(1,))
          (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
        )
      )
      (extraction): PosExtraction(
        (operation): Sequential(
          (0): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (2): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (3): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
        )
      )
    )
    (1): PointNetFeaturePropagation(
      (fuse): ConvBNReLU1D(
        (act): ReLU(inplace=True)
        (net): Sequential(
          (0): Conv1d(768, 256, kernel_size=(1,), stride=(1,))
          (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
        )
      )
      (extraction): PosExtraction(
        (operation): Sequential(
          (0): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (2): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (3): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
        )
      )
    )
    (2): PointNetFeaturePropagation(
      (fuse): ConvBNReLU1D(
        (act): ReLU(inplace=True)
        (net): Sequential(
          (0): Conv1d(384, 128, kernel_size=(1,), stride=(1,))
          (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
        )
      )
      (extraction): PosExtraction(
        (operation): Sequential(
          (0): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (2): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (3): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
        )
      )
    )
    (3): PointNetFeaturePropagation(
      (fuse): ConvBNReLU1D(
        (act): ReLU(inplace=True)
        (net): Sequential(
          (0): Conv1d(192, 128, kernel_size=(1,), stride=(1,))
          (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
        )
      )
      (extraction): PosExtraction(
        (operation): Sequential(
          (0): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (2): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (3): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
        )
      )
    )
  )
  (act): ReLU(inplace=True)
  (cls_map): Sequential(
    (0): ConvBNReLU1D(
      (act): ReLU(inplace=True)
      (net): Sequential(
        (0): Conv1d(16, 64, kernel_size=(1,), stride=(1,))
        (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
      )
    )
    (1): ConvBNReLU1D(
      (act): ReLU(inplace=True)
      (net): Sequential(
        (0): Conv1d(64, 64, kernel_size=(1,), stride=(1,))
        (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
      )
    )
  )
  (gmp_map_list): ModuleList(
    (0): ConvBNReLU1D(
      (act): ReLU(inplace=True)
      (net): Sequential(
        (0): Conv1d(1024, 64, kernel_size=(1,), stride=(1,))
        (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
      )
    )
    (1): SelfAttention(
      (key_conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(2, 2))
      (values_conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(2, 2))
      (query_conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(2, 2))
    )
    (2): ConvBNReLU1D(
      (act): ReLU(inplace=True)
      (net): Sequential(
        (0): Conv1d(512, 64, kernel_size=(1,), stride=(1,))
        (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
      )
    )
    (3): SelfAttention(
      (key_conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(2, 2))
      (values_conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(2, 2))
      (query_conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(2, 2))
    )
    (4): ConvBNReLU1D(
      (act): ReLU(inplace=True)
      (net): Sequential(
        (0): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
      )
    )
    (5): SelfAttention(
      (key_conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(2, 2))
      (values_conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(2, 2))
      (query_conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(2, 2))
    )
    (6): ConvBNReLU1D(
      (act): ReLU(inplace=True)
      (net): Sequential(
        (0): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
      )
    )
    (7): SelfAttention(
      (key_conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(2, 2))
      (values_conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(2, 2))
      (query_conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(2, 2))
    )
    (8): ConvBNReLU1D(
      (act): ReLU(inplace=True)
      (net): Sequential(
        (0): Conv1d(64, 64, kernel_size=(1,), stride=(1,))
        (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
      )
    )
    (9): SelfAttention(
      (key_conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(2, 2))
      (values_conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(2, 2))
      (query_conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(2, 2))
    )
  )
  (gmp_map_end): ConvBNReLU1D(
    (act): ReLU(inplace=True)
    (net): Sequential(
      (0): Conv1d(320, 64, kernel_size=(1,), stride=(1,))
      (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): ReLU(inplace=True)
    )
  )
  (classifier): Sequential(
    (0): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
    (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): Dropout(p=0.5, inplace=False)
    (3): Conv1d(128, 50, kernel_size=(1,), stride=(1,))
  )
)
Namespace(batch_size=32, epochs=350, eval=False, exp_name='pointMLP_demo1', lr=0.003, manual_seed=None, model='pointMLP', model_type='insiou', momentum=0.9, no_cuda=False, num_points=2048, resume=False, scheduler='step', step=40, test_batch_size=32, use_sgd=False, workers=12)
Using GPU
PointMLP(
  (embedding): ConvBNReLU1D(
    (act): ReLU(inplace=True)
    (net): Sequential(
      (0): Conv1d(6, 64, kernel_size=(1,), stride=(1,))
      (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): ReLU(inplace=True)
    )
  )
  (local_grouper_list): ModuleList(
    (0): LocalGrouper()
    (1): LocalGrouper()
    (2): LocalGrouper()
    (3): LocalGrouper()
  )
  (pre_blocks_list): ModuleList(
    (0): PreExtraction(
      (transfer): ConvBNReLU1D(
        (act): ReLU(inplace=True)
        (net): Sequential(
          (0): Conv1d(131, 128, kernel_size=(1,), stride=(1,))
          (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
        )
      )
      (operation): Sequential(
        (0): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
      )
    )
    (1): PreExtraction(
      (transfer): ConvBNReLU1D(
        (act): ReLU(inplace=True)
        (net): Sequential(
          (0): Conv1d(259, 256, kernel_size=(1,), stride=(1,))
          (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
        )
      )
      (operation): Sequential(
        (0): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
      )
    )
    (2): PreExtraction(
      (transfer): ConvBNReLU1D(
        (act): ReLU(inplace=True)
        (net): Sequential(
          (0): Conv1d(515, 512, kernel_size=(1,), stride=(1,))
          (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
        )
      )
      (operation): Sequential(
        (0): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
      )
    )
    (3): PreExtraction(
      (transfer): ConvBNReLU1D(
        (act): ReLU(inplace=True)
        (net): Sequential(
          (0): Conv1d(1027, 1024, kernel_size=(1,), stride=(1,))
          (1): BatchNorm1d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
        )
      )
      (operation): Sequential(
        (0): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(1024, 1024, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(1024, 1024, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(1024, 1024, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(1024, 1024, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
      )
    )
  )
  (pos_blocks_list): ModuleList(
    (0): PosExtraction(
      (operation): Sequential(
        (0): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
      )
    )
    (1): PosExtraction(
      (operation): Sequential(
        (0): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
      )
    )
    (2): PosExtraction(
      (operation): Sequential(
        (0): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
      )
    )
    (3): PosExtraction(
      (operation): Sequential(
        (0): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(1024, 1024, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(1024, 1024, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(1024, 1024, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(1024, 1024, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
      )
    )
  )
  (decode_list): ModuleList(
    (0): PointNetFeaturePropagation(
      (fuse): ConvBNReLU1D(
        (act): ReLU(inplace=True)
        (net): Sequential(
          (0): Conv1d(1536, 512, kernel_size=(1,), stride=(1,))
          (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
        )
      )
      (extraction): PosExtraction(
        (operation): Sequential(
          (0): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (2): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (3): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
        )
      )
    )
    (1): PointNetFeaturePropagation(
      (fuse): ConvBNReLU1D(
        (act): ReLU(inplace=True)
        (net): Sequential(
          (0): Conv1d(768, 256, kernel_size=(1,), stride=(1,))
          (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
        )
      )
      (extraction): PosExtraction(
        (operation): Sequential(
          (0): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (2): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (3): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
        )
      )
    )
    (2): PointNetFeaturePropagation(
      (fuse): ConvBNReLU1D(
        (act): ReLU(inplace=True)
        (net): Sequential(
          (0): Conv1d(384, 128, kernel_size=(1,), stride=(1,))
          (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
        )
      )
      (extraction): PosExtraction(
        (operation): Sequential(
          (0): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (2): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (3): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
        )
      )
    )
    (3): PointNetFeaturePropagation(
      (fuse): ConvBNReLU1D(
        (act): ReLU(inplace=True)
        (net): Sequential(
          (0): Conv1d(192, 128, kernel_size=(1,), stride=(1,))
          (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
        )
      )
      (extraction): PosExtraction(
        (operation): Sequential(
          (0): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (2): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (3): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
        )
      )
    )
  )
  (act): ReLU(inplace=True)
  (cls_map): Sequential(
    (0): ConvBNReLU1D(
      (act): ReLU(inplace=True)
      (net): Sequential(
        (0): Conv1d(16, 64, kernel_size=(1,), stride=(1,))
        (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
      )
    )
    (1): ConvBNReLU1D(
      (act): ReLU(inplace=True)
      (net): Sequential(
        (0): Conv1d(64, 64, kernel_size=(1,), stride=(1,))
        (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
      )
    )
  )
  (gmp_map_list): ModuleList(
    (0): ConvBNReLU1D(
      (act): ReLU(inplace=True)
      (net): Sequential(
        (0): Conv1d(1024, 64, kernel_size=(1,), stride=(1,))
        (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
      )
    )
    (1): SelfAttention(
      (key_conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(2, 2))
      (values_conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(2, 2))
      (query_conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(2, 2))
    )
    (2): ConvBNReLU1D(
      (act): ReLU(inplace=True)
      (net): Sequential(
        (0): Conv1d(512, 64, kernel_size=(1,), stride=(1,))
        (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
      )
    )
    (3): SelfAttention(
      (key_conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(2, 2))
      (values_conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(2, 2))
      (query_conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(2, 2))
    )
    (4): ConvBNReLU1D(
      (act): ReLU(inplace=True)
      (net): Sequential(
        (0): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
        (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
      )
    )
    (5): SelfAttention(
      (key_conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(2, 2))
      (values_conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(2, 2))
      (query_conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(2, 2))
    )
    (6): ConvBNReLU1D(
      (act): ReLU(inplace=True)
      (net): Sequential(
        (0): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
        (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
      )
    )
    (7): SelfAttention(
      (key_conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(2, 2))
      (values_conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(2, 2))
      (query_conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(2, 2))
    )
    (8): ConvBNReLU1D(
      (act): ReLU(inplace=True)
      (net): Sequential(
        (0): Conv1d(64, 64, kernel_size=(1,), stride=(1,))
        (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
      )
    )
    (9): SelfAttention(
      (key_conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(2, 2))
      (values_conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(2, 2))
      (query_conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(2, 2))
    )
  )
  (gmp_map_end): ConvBNReLU1D(
    (act): ReLU(inplace=True)
    (net): Sequential(
      (0): Conv1d(320, 64, kernel_size=(1,), stride=(1,))
      (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): ReLU(inplace=True)
    )
  )
  (classifier): Sequential(
    (0): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
    (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): Dropout(p=0.5, inplace=False)
    (3): Conv1d(128, 50, kernel_size=(1,), stride=(1,))
  )
)
Namespace(batch_size=32, epochs=350, eval=False, exp_name='pointMLP_demo1', lr=0.003, manual_seed=None, model='pointMLP', model_type='insiou', momentum=0.9, no_cuda=False, num_points=2048, resume=False, scheduler='step', step=40, test_batch_size=32, use_sgd=False, workers=12)
Using GPU
PointMLP(
  (embedding): ConvBNReLU1D(
    (act): ReLU(inplace=True)
    (net): Sequential(
      (0): Conv1d(6, 64, kernel_size=(1,), stride=(1,))
      (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): ReLU(inplace=True)
    )
  )
  (local_grouper_list): ModuleList(
    (0): LocalGrouper()
    (1): LocalGrouper()
    (2): LocalGrouper()
    (3): LocalGrouper()
  )
  (pre_blocks_list): ModuleList(
    (0): PreExtraction(
      (transfer): ConvBNReLU1D(
        (act): ReLU(inplace=True)
        (net): Sequential(
          (0): Conv1d(131, 128, kernel_size=(1,), stride=(1,))
          (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
        )
      )
      (operation): Sequential(
        (0): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
      )
    )
    (1): PreExtraction(
      (transfer): ConvBNReLU1D(
        (act): ReLU(inplace=True)
        (net): Sequential(
          (0): Conv1d(259, 256, kernel_size=(1,), stride=(1,))
          (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
        )
      )
      (operation): Sequential(
        (0): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
      )
    )
    (2): PreExtraction(
      (transfer): ConvBNReLU1D(
        (act): ReLU(inplace=True)
        (net): Sequential(
          (0): Conv1d(515, 512, kernel_size=(1,), stride=(1,))
          (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
        )
      )
      (operation): Sequential(
        (0): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
      )
    )
    (3): PreExtraction(
      (transfer): ConvBNReLU1D(
        (act): ReLU(inplace=True)
        (net): Sequential(
          (0): Conv1d(1027, 1024, kernel_size=(1,), stride=(1,))
          (1): BatchNorm1d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
        )
      )
      (operation): Sequential(
        (0): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(1024, 1024, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(1024, 1024, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(1024, 1024, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(1024, 1024, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
      )
    )
  )
  (pos_blocks_list): ModuleList(
    (0): PosExtraction(
      (operation): Sequential(
        (0): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
      )
    )
    (1): PosExtraction(
      (operation): Sequential(
        (0): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
      )
    )
    (2): PosExtraction(
      (operation): Sequential(
        (0): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
      )
    )
    (3): PosExtraction(
      (operation): Sequential(
        (0): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(1024, 1024, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(1024, 1024, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(1024, 1024, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(1024, 1024, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
      )
    )
  )
  (decode_list): ModuleList(
    (0): PointNetFeaturePropagation(
      (fuse): ConvBNReLU1D(
        (act): ReLU(inplace=True)
        (net): Sequential(
          (0): Conv1d(1536, 512, kernel_size=(1,), stride=(1,))
          (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
        )
      )
      (extraction): PosExtraction(
        (operation): Sequential(
          (0): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (2): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (3): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
        )
      )
    )
    (1): PointNetFeaturePropagation(
      (fuse): ConvBNReLU1D(
        (act): ReLU(inplace=True)
        (net): Sequential(
          (0): Conv1d(768, 256, kernel_size=(1,), stride=(1,))
          (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
        )
      )
      (extraction): PosExtraction(
        (operation): Sequential(
          (0): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (2): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (3): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
        )
      )
    )
    (2): PointNetFeaturePropagation(
      (fuse): ConvBNReLU1D(
        (act): ReLU(inplace=True)
        (net): Sequential(
          (0): Conv1d(384, 128, kernel_size=(1,), stride=(1,))
          (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
        )
      )
      (extraction): PosExtraction(
        (operation): Sequential(
          (0): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (2): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (3): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
        )
      )
    )
    (3): PointNetFeaturePropagation(
      (fuse): ConvBNReLU1D(
        (act): ReLU(inplace=True)
        (net): Sequential(
          (0): Conv1d(192, 128, kernel_size=(1,), stride=(1,))
          (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
        )
      )
      (extraction): PosExtraction(
        (operation): Sequential(
          (0): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (2): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (3): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
        )
      )
    )
  )
  (act): ReLU(inplace=True)
  (cls_map): Sequential(
    (0): ConvBNReLU1D(
      (act): ReLU(inplace=True)
      (net): Sequential(
        (0): Conv1d(16, 64, kernel_size=(1,), stride=(1,))
        (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
      )
    )
    (1): ConvBNReLU1D(
      (act): ReLU(inplace=True)
      (net): Sequential(
        (0): Conv1d(64, 64, kernel_size=(1,), stride=(1,))
        (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
      )
    )
  )
  (gmp_map_list): ModuleList(
    (0): Sequential(
      (0): ConvBNReLU1D(
        (act): ReLU(inplace=True)
        (net): Sequential(
          (0): Conv1d(1024, 64, kernel_size=(1,), stride=(1,))
          (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
        )
      )
      (1): SelfAttention(
        (key_conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(2, 2))
        (values_conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(2, 2))
        (query_conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(2, 2))
      )
    )
    (1): Sequential(
      (0): ConvBNReLU1D(
        (act): ReLU(inplace=True)
        (net): Sequential(
          (0): Conv1d(512, 64, kernel_size=(1,), stride=(1,))
          (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
        )
      )
      (1): SelfAttention(
        (key_conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(2, 2))
        (values_conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(2, 2))
        (query_conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(2, 2))
      )
    )
    (2): Sequential(
      (0): ConvBNReLU1D(
        (act): ReLU(inplace=True)
        (net): Sequential(
          (0): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
        )
      )
      (1): SelfAttention(
        (key_conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(2, 2))
        (values_conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(2, 2))
        (query_conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(2, 2))
      )
    )
    (3): Sequential(
      (0): ConvBNReLU1D(
        (act): ReLU(inplace=True)
        (net): Sequential(
          (0): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
          (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
        )
      )
      (1): SelfAttention(
        (key_conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(2, 2))
        (values_conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(2, 2))
        (query_conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(2, 2))
      )
    )
    (4): Sequential(
      (0): ConvBNReLU1D(
        (act): ReLU(inplace=True)
        (net): Sequential(
          (0): Conv1d(64, 64, kernel_size=(1,), stride=(1,))
          (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
        )
      )
      (1): SelfAttention(
        (key_conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(2, 2))
        (values_conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(2, 2))
        (query_conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(2, 2))
      )
    )
  )
  (gmp_map_end): ConvBNReLU1D(
    (act): ReLU(inplace=True)
    (net): Sequential(
      (0): Conv1d(320, 64, kernel_size=(1,), stride=(1,))
      (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): ReLU(inplace=True)
    )
  )
  (classifier): Sequential(
    (0): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
    (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): Dropout(p=0.5, inplace=False)
    (3): Conv1d(128, 50, kernel_size=(1,), stride=(1,))
  )
)
Namespace(batch_size=32, epochs=350, eval=False, exp_name='pointMLP_demo1', lr=0.003, manual_seed=None, model='pointMLP', model_type='insiou', momentum=0.9, no_cuda=False, num_points=2048, resume=False, scheduler='step', step=40, test_batch_size=32, use_sgd=False, workers=12)
Using GPU
Namespace(batch_size=32, epochs=350, eval=False, exp_name='pointMLP_demo1', lr=0.003, manual_seed=None, model='pointMLP', model_type='insiou', momentum=0.9, no_cuda=False, num_points=2048, resume=False, scheduler='step', step=40, test_batch_size=32, use_sgd=False, workers=12)
Using GPU
PointMLP(
  (embedding): ConvBNReLU1D(
    (act): ReLU(inplace=True)
    (net): Sequential(
      (0): Conv1d(6, 64, kernel_size=(1,), stride=(1,))
      (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): ReLU(inplace=True)
    )
  )
  (local_grouper_list): ModuleList(
    (0): LocalGrouper()
    (1): LocalGrouper()
    (2): LocalGrouper()
    (3): LocalGrouper()
  )
  (pre_blocks_list): ModuleList(
    (0): PreExtraction(
      (transfer): ConvBNReLU1D(
        (act): ReLU(inplace=True)
        (net): Sequential(
          (0): Conv1d(131, 128, kernel_size=(1,), stride=(1,))
          (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
        )
      )
      (operation): Sequential(
        (0): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
      )
    )
    (1): PreExtraction(
      (transfer): ConvBNReLU1D(
        (act): ReLU(inplace=True)
        (net): Sequential(
          (0): Conv1d(259, 256, kernel_size=(1,), stride=(1,))
          (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
        )
      )
      (operation): Sequential(
        (0): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
      )
    )
    (2): PreExtraction(
      (transfer): ConvBNReLU1D(
        (act): ReLU(inplace=True)
        (net): Sequential(
          (0): Conv1d(515, 512, kernel_size=(1,), stride=(1,))
          (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
        )
      )
      (operation): Sequential(
        (0): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
      )
    )
    (3): PreExtraction(
      (transfer): ConvBNReLU1D(
        (act): ReLU(inplace=True)
        (net): Sequential(
          (0): Conv1d(1027, 1024, kernel_size=(1,), stride=(1,))
          (1): BatchNorm1d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
        )
      )
      (operation): Sequential(
        (0): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(1024, 1024, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(1024, 1024, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(1024, 1024, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(1024, 1024, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
      )
    )
  )
  (pos_blocks_list): ModuleList(
    (0): PosExtraction(
      (operation): Sequential(
        (0): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
      )
    )
    (1): PosExtraction(
      (operation): Sequential(
        (0): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
      )
    )
    (2): PosExtraction(
      (operation): Sequential(
        (0): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
      )
    )
    (3): PosExtraction(
      (operation): Sequential(
        (0): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(1024, 1024, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(1024, 1024, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(1024, 1024, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(1024, 1024, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
      )
    )
  )
  (decode_list): ModuleList(
    (0): PointNetFeaturePropagation(
      (fuse): ConvBNReLU1D(
        (act): ReLU(inplace=True)
        (net): Sequential(
          (0): Conv1d(1536, 512, kernel_size=(1,), stride=(1,))
          (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
        )
      )
      (extraction): PosExtraction(
        (operation): Sequential(
          (0): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (2): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (3): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
        )
      )
    )
    (1): PointNetFeaturePropagation(
      (fuse): ConvBNReLU1D(
        (act): ReLU(inplace=True)
        (net): Sequential(
          (0): Conv1d(768, 256, kernel_size=(1,), stride=(1,))
          (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
        )
      )
      (extraction): PosExtraction(
        (operation): Sequential(
          (0): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (2): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (3): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
        )
      )
    )
    (2): PointNetFeaturePropagation(
      (fuse): ConvBNReLU1D(
        (act): ReLU(inplace=True)
        (net): Sequential(
          (0): Conv1d(384, 128, kernel_size=(1,), stride=(1,))
          (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
        )
      )
      (extraction): PosExtraction(
        (operation): Sequential(
          (0): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (2): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (3): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
        )
      )
    )
    (3): PointNetFeaturePropagation(
      (fuse): ConvBNReLU1D(
        (act): ReLU(inplace=True)
        (net): Sequential(
          (0): Conv1d(192, 128, kernel_size=(1,), stride=(1,))
          (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
        )
      )
      (extraction): PosExtraction(
        (operation): Sequential(
          (0): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (2): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (3): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
        )
      )
    )
  )
  (act): ReLU(inplace=True)
  (cls_map): Sequential(
    (0): ConvBNReLU1D(
      (act): ReLU(inplace=True)
      (net): Sequential(
        (0): Conv1d(16, 64, kernel_size=(1,), stride=(1,))
        (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
      )
    )
    (1): ConvBNReLU1D(
      (act): ReLU(inplace=True)
      (net): Sequential(
        (0): Conv1d(64, 64, kernel_size=(1,), stride=(1,))
        (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
      )
    )
  )
  (gmp_map_list): ModuleList(
    (0): Sequential(
      (0): ConvBNReLU1D(
        (act): ReLU(inplace=True)
        (net): Sequential(
          (0): Conv1d(1024, 64, kernel_size=(1,), stride=(1,))
          (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
        )
      )
      (1): SelfAttention(
        (key_conv): Conv1d(64, 64, kernel_size=(1,), stride=(1,))
        (values_conv): Conv1d(64, 64, kernel_size=(1,), stride=(1,))
        (query_conv): Conv1d(64, 64, kernel_size=(1,), stride=(1,))
      )
    )
    (1): Sequential(
      (0): ConvBNReLU1D(
        (act): ReLU(inplace=True)
        (net): Sequential(
          (0): Conv1d(512, 64, kernel_size=(1,), stride=(1,))
          (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
        )
      )
      (1): SelfAttention(
        (key_conv): Conv1d(64, 64, kernel_size=(1,), stride=(1,))
        (values_conv): Conv1d(64, 64, kernel_size=(1,), stride=(1,))
        (query_conv): Conv1d(64, 64, kernel_size=(1,), stride=(1,))
      )
    )
    (2): Sequential(
      (0): ConvBNReLU1D(
        (act): ReLU(inplace=True)
        (net): Sequential(
          (0): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
        )
      )
      (1): SelfAttention(
        (key_conv): Conv1d(64, 64, kernel_size=(1,), stride=(1,))
        (values_conv): Conv1d(64, 64, kernel_size=(1,), stride=(1,))
        (query_conv): Conv1d(64, 64, kernel_size=(1,), stride=(1,))
      )
    )
    (3): Sequential(
      (0): ConvBNReLU1D(
        (act): ReLU(inplace=True)
        (net): Sequential(
          (0): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
          (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
        )
      )
      (1): SelfAttention(
        (key_conv): Conv1d(64, 64, kernel_size=(1,), stride=(1,))
        (values_conv): Conv1d(64, 64, kernel_size=(1,), stride=(1,))
        (query_conv): Conv1d(64, 64, kernel_size=(1,), stride=(1,))
      )
    )
    (4): Sequential(
      (0): ConvBNReLU1D(
        (act): ReLU(inplace=True)
        (net): Sequential(
          (0): Conv1d(64, 64, kernel_size=(1,), stride=(1,))
          (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
        )
      )
      (1): SelfAttention(
        (key_conv): Conv1d(64, 64, kernel_size=(1,), stride=(1,))
        (values_conv): Conv1d(64, 64, kernel_size=(1,), stride=(1,))
        (query_conv): Conv1d(64, 64, kernel_size=(1,), stride=(1,))
      )
    )
  )
  (gmp_map_end): ConvBNReLU1D(
    (act): ReLU(inplace=True)
    (net): Sequential(
      (0): Conv1d(320, 64, kernel_size=(1,), stride=(1,))
      (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): ReLU(inplace=True)
    )
  )
  (classifier): Sequential(
    (0): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
    (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): Dropout(p=0.5, inplace=False)
    (3): Conv1d(128, 50, kernel_size=(1,), stride=(1,))
  )
)
Namespace(batch_size=32, epochs=350, eval=False, exp_name='pointMLP_demo1', lr=0.003, manual_seed=None, model='pointMLP', model_type='insiou', momentum=0.9, no_cuda=False, num_points=2048, resume=False, scheduler='step', step=40, test_batch_size=32, use_sgd=False, workers=12)
Using GPU
PointMLP(
  (embedding): ConvBNReLU1D(
    (act): ReLU(inplace=True)
    (net): Sequential(
      (0): Conv1d(6, 64, kernel_size=(1,), stride=(1,))
      (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): ReLU(inplace=True)
    )
  )
  (local_grouper_list): ModuleList(
    (0): LocalGrouper()
    (1): LocalGrouper()
    (2): LocalGrouper()
    (3): LocalGrouper()
  )
  (pre_blocks_list): ModuleList(
    (0): PreExtraction(
      (transfer): ConvBNReLU1D(
        (act): ReLU(inplace=True)
        (net): Sequential(
          (0): Conv1d(131, 128, kernel_size=(1,), stride=(1,))
          (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
        )
      )
      (operation): Sequential(
        (0): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
      )
    )
    (1): PreExtraction(
      (transfer): ConvBNReLU1D(
        (act): ReLU(inplace=True)
        (net): Sequential(
          (0): Conv1d(259, 256, kernel_size=(1,), stride=(1,))
          (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
        )
      )
      (operation): Sequential(
        (0): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
      )
    )
    (2): PreExtraction(
      (transfer): ConvBNReLU1D(
        (act): ReLU(inplace=True)
        (net): Sequential(
          (0): Conv1d(515, 512, kernel_size=(1,), stride=(1,))
          (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
        )
      )
      (operation): Sequential(
        (0): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
      )
    )
    (3): PreExtraction(
      (transfer): ConvBNReLU1D(
        (act): ReLU(inplace=True)
        (net): Sequential(
          (0): Conv1d(1027, 1024, kernel_size=(1,), stride=(1,))
          (1): BatchNorm1d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
        )
      )
      (operation): Sequential(
        (0): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(1024, 1024, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(1024, 1024, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(1024, 1024, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(1024, 1024, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
      )
    )
  )
  (pos_blocks_list): ModuleList(
    (0): PosExtraction(
      (operation): Sequential(
        (0): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
      )
    )
    (1): PosExtraction(
      (operation): Sequential(
        (0): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
      )
    )
    (2): PosExtraction(
      (operation): Sequential(
        (0): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
      )
    )
    (3): PosExtraction(
      (operation): Sequential(
        (0): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(1024, 1024, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(1024, 1024, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(1024, 1024, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(1024, 1024, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
      )
    )
  )
  (decode_list): ModuleList(
    (0): PointNetFeaturePropagation(
      (fuse): ConvBNReLU1D(
        (act): ReLU(inplace=True)
        (net): Sequential(
          (0): Conv1d(1536, 512, kernel_size=(1,), stride=(1,))
          (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
        )
      )
      (extraction): PosExtraction(
        (operation): Sequential(
          (0): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (2): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (3): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
        )
      )
    )
    (1): PointNetFeaturePropagation(
      (fuse): ConvBNReLU1D(
        (act): ReLU(inplace=True)
        (net): Sequential(
          (0): Conv1d(768, 256, kernel_size=(1,), stride=(1,))
          (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
        )
      )
      (extraction): PosExtraction(
        (operation): Sequential(
          (0): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (2): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (3): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
        )
      )
    )
    (2): PointNetFeaturePropagation(
      (fuse): ConvBNReLU1D(
        (act): ReLU(inplace=True)
        (net): Sequential(
          (0): Conv1d(384, 128, kernel_size=(1,), stride=(1,))
          (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
        )
      )
      (extraction): PosExtraction(
        (operation): Sequential(
          (0): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (2): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (3): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
        )
      )
    )
    (3): PointNetFeaturePropagation(
      (fuse): ConvBNReLU1D(
        (act): ReLU(inplace=True)
        (net): Sequential(
          (0): Conv1d(192, 128, kernel_size=(1,), stride=(1,))
          (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
        )
      )
      (extraction): PosExtraction(
        (operation): Sequential(
          (0): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (2): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (3): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
        )
      )
    )
  )
  (act): ReLU(inplace=True)
  (cls_map): Sequential(
    (0): ConvBNReLU1D(
      (act): ReLU(inplace=True)
      (net): Sequential(
        (0): Conv1d(16, 64, kernel_size=(1,), stride=(1,))
        (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
      )
    )
    (1): ConvBNReLU1D(
      (act): ReLU(inplace=True)
      (net): Sequential(
        (0): Conv1d(64, 64, kernel_size=(1,), stride=(1,))
        (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
      )
    )
  )
  (gmp_map_list): ModuleList(
    (0): Sequential(
      (0): ConvBNReLU1D(
        (act): ReLU(inplace=True)
        (net): Sequential(
          (0): Conv1d(1024, 64, kernel_size=(1,), stride=(1,))
          (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
        )
      )
      (1): SelfAttention(
        (key_conv): Conv1d(64, 64, kernel_size=(1,), stride=(1,))
        (values_conv): Conv1d(64, 64, kernel_size=(1,), stride=(1,))
        (query_conv): Conv1d(64, 64, kernel_size=(1,), stride=(1,))
      )
    )
    (1): Sequential(
      (0): ConvBNReLU1D(
        (act): ReLU(inplace=True)
        (net): Sequential(
          (0): Conv1d(512, 64, kernel_size=(1,), stride=(1,))
          (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
        )
      )
      (1): SelfAttention(
        (key_conv): Conv1d(64, 64, kernel_size=(1,), stride=(1,))
        (values_conv): Conv1d(64, 64, kernel_size=(1,), stride=(1,))
        (query_conv): Conv1d(64, 64, kernel_size=(1,), stride=(1,))
      )
    )
    (2): Sequential(
      (0): ConvBNReLU1D(
        (act): ReLU(inplace=True)
        (net): Sequential(
          (0): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
        )
      )
      (1): SelfAttention(
        (key_conv): Conv1d(64, 64, kernel_size=(1,), stride=(1,))
        (values_conv): Conv1d(64, 64, kernel_size=(1,), stride=(1,))
        (query_conv): Conv1d(64, 64, kernel_size=(1,), stride=(1,))
      )
    )
    (3): Sequential(
      (0): ConvBNReLU1D(
        (act): ReLU(inplace=True)
        (net): Sequential(
          (0): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
          (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
        )
      )
      (1): SelfAttention(
        (key_conv): Conv1d(64, 64, kernel_size=(1,), stride=(1,))
        (values_conv): Conv1d(64, 64, kernel_size=(1,), stride=(1,))
        (query_conv): Conv1d(64, 64, kernel_size=(1,), stride=(1,))
      )
    )
    (4): Sequential(
      (0): ConvBNReLU1D(
        (act): ReLU(inplace=True)
        (net): Sequential(
          (0): Conv1d(64, 64, kernel_size=(1,), stride=(1,))
          (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
        )
      )
      (1): SelfAttention(
        (key_conv): Conv1d(64, 64, kernel_size=(1,), stride=(1,))
        (values_conv): Conv1d(64, 64, kernel_size=(1,), stride=(1,))
        (query_conv): Conv1d(64, 64, kernel_size=(1,), stride=(1,))
      )
    )
  )
  (gmp_map_end): ConvBNReLU1D(
    (act): ReLU(inplace=True)
    (net): Sequential(
      (0): Conv1d(320, 64, kernel_size=(1,), stride=(1,))
      (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): ReLU(inplace=True)
    )
  )
  (classifier): Sequential(
    (0): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
    (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): Dropout(p=0.5, inplace=False)
    (3): Conv1d(128, 50, kernel_size=(1,), stride=(1,))
  )
)
Namespace(batch_size=32, epochs=350, eval=False, exp_name='pointMLP_demo1', lr=0.003, manual_seed=None, model='pointMLP', model_type='insiou', momentum=0.9, no_cuda=False, num_points=2048, resume=False, scheduler='step', step=40, test_batch_size=32, use_sgd=False, workers=12)
Using GPU
PointMLP(
  (embedding): ConvBNReLU1D(
    (act): ReLU(inplace=True)
    (net): Sequential(
      (0): Conv1d(6, 64, kernel_size=(1,), stride=(1,))
      (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): ReLU(inplace=True)
    )
  )
  (local_grouper_list): ModuleList(
    (0): LocalGrouper()
    (1): LocalGrouper()
    (2): LocalGrouper()
    (3): LocalGrouper()
  )
  (pre_blocks_list): ModuleList(
    (0): PreExtraction(
      (transfer): ConvBNReLU1D(
        (act): ReLU(inplace=True)
        (net): Sequential(
          (0): Conv1d(131, 128, kernel_size=(1,), stride=(1,))
          (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
        )
      )
      (operation): Sequential(
        (0): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
      )
    )
    (1): PreExtraction(
      (transfer): ConvBNReLU1D(
        (act): ReLU(inplace=True)
        (net): Sequential(
          (0): Conv1d(259, 256, kernel_size=(1,), stride=(1,))
          (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
        )
      )
      (operation): Sequential(
        (0): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
      )
    )
    (2): PreExtraction(
      (transfer): ConvBNReLU1D(
        (act): ReLU(inplace=True)
        (net): Sequential(
          (0): Conv1d(515, 512, kernel_size=(1,), stride=(1,))
          (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
        )
      )
      (operation): Sequential(
        (0): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
      )
    )
    (3): PreExtraction(
      (transfer): ConvBNReLU1D(
        (act): ReLU(inplace=True)
        (net): Sequential(
          (0): Conv1d(1027, 1024, kernel_size=(1,), stride=(1,))
          (1): BatchNorm1d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
        )
      )
      (operation): Sequential(
        (0): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(1024, 1024, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(1024, 1024, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(1024, 1024, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(1024, 1024, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
      )
    )
  )
  (pos_blocks_list): ModuleList(
    (0): PosExtraction(
      (operation): Sequential(
        (0): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
      )
    )
    (1): PosExtraction(
      (operation): Sequential(
        (0): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
      )
    )
    (2): PosExtraction(
      (operation): Sequential(
        (0): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
      )
    )
    (3): PosExtraction(
      (operation): Sequential(
        (0): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(1024, 1024, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(1024, 1024, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(1024, 1024, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(1024, 1024, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
      )
    )
  )
  (decode_list): ModuleList(
    (0): PointNetFeaturePropagation(
      (fuse): ConvBNReLU1D(
        (act): ReLU(inplace=True)
        (net): Sequential(
          (0): Conv1d(1536, 512, kernel_size=(1,), stride=(1,))
          (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
        )
      )
      (extraction): PosExtraction(
        (operation): Sequential(
          (0): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (2): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (3): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
        )
      )
    )
    (1): PointNetFeaturePropagation(
      (fuse): ConvBNReLU1D(
        (act): ReLU(inplace=True)
        (net): Sequential(
          (0): Conv1d(768, 256, kernel_size=(1,), stride=(1,))
          (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
        )
      )
      (extraction): PosExtraction(
        (operation): Sequential(
          (0): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (2): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (3): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
        )
      )
    )
    (2): PointNetFeaturePropagation(
      (fuse): ConvBNReLU1D(
        (act): ReLU(inplace=True)
        (net): Sequential(
          (0): Conv1d(384, 128, kernel_size=(1,), stride=(1,))
          (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
        )
      )
      (extraction): PosExtraction(
        (operation): Sequential(
          (0): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (2): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (3): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
        )
      )
    )
    (3): PointNetFeaturePropagation(
      (fuse): ConvBNReLU1D(
        (act): ReLU(inplace=True)
        (net): Sequential(
          (0): Conv1d(192, 128, kernel_size=(1,), stride=(1,))
          (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
        )
      )
      (extraction): PosExtraction(
        (operation): Sequential(
          (0): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (2): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (3): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
        )
      )
    )
  )
  (act): ReLU(inplace=True)
  (cls_map): Sequential(
    (0): ConvBNReLU1D(
      (act): ReLU(inplace=True)
      (net): Sequential(
        (0): Conv1d(16, 64, kernel_size=(1,), stride=(1,))
        (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
      )
    )
    (1): ConvBNReLU1D(
      (act): ReLU(inplace=True)
      (net): Sequential(
        (0): Conv1d(64, 64, kernel_size=(1,), stride=(1,))
        (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
      )
    )
  )
  (gmp_map_list): ModuleList(
    (0): Sequential(
      (0): ConvBNReLU1D(
        (act): ReLU(inplace=True)
        (net): Sequential(
          (0): Conv1d(1024, 64, kernel_size=(1,), stride=(1,))
          (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
        )
      )
      (1): SelfAttention(
        (key_conv): Conv1d(64, 64, kernel_size=(1,), stride=(1,))
        (values_conv): Conv1d(64, 64, kernel_size=(1,), stride=(1,))
        (query_conv): Conv1d(64, 64, kernel_size=(1,), stride=(1,))
      )
    )
    (1): Sequential(
      (0): ConvBNReLU1D(
        (act): ReLU(inplace=True)
        (net): Sequential(
          (0): Conv1d(512, 64, kernel_size=(1,), stride=(1,))
          (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
        )
      )
      (1): SelfAttention(
        (key_conv): Conv1d(64, 64, kernel_size=(1,), stride=(1,))
        (values_conv): Conv1d(64, 64, kernel_size=(1,), stride=(1,))
        (query_conv): Conv1d(64, 64, kernel_size=(1,), stride=(1,))
      )
    )
    (2): Sequential(
      (0): ConvBNReLU1D(
        (act): ReLU(inplace=True)
        (net): Sequential(
          (0): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
        )
      )
      (1): SelfAttention(
        (key_conv): Conv1d(64, 64, kernel_size=(1,), stride=(1,))
        (values_conv): Conv1d(64, 64, kernel_size=(1,), stride=(1,))
        (query_conv): Conv1d(64, 64, kernel_size=(1,), stride=(1,))
      )
    )
    (3): Sequential(
      (0): ConvBNReLU1D(
        (act): ReLU(inplace=True)
        (net): Sequential(
          (0): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
          (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
        )
      )
      (1): SelfAttention(
        (key_conv): Conv1d(64, 64, kernel_size=(1,), stride=(1,))
        (values_conv): Conv1d(64, 64, kernel_size=(1,), stride=(1,))
        (query_conv): Conv1d(64, 64, kernel_size=(1,), stride=(1,))
      )
    )
    (4): Sequential(
      (0): ConvBNReLU1D(
        (act): ReLU(inplace=True)
        (net): Sequential(
          (0): Conv1d(64, 64, kernel_size=(1,), stride=(1,))
          (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
        )
      )
      (1): SelfAttention(
        (key_conv): Conv1d(64, 64, kernel_size=(1,), stride=(1,))
        (values_conv): Conv1d(64, 64, kernel_size=(1,), stride=(1,))
        (query_conv): Conv1d(64, 64, kernel_size=(1,), stride=(1,))
      )
    )
  )
  (gmp_map_end): ConvBNReLU1D(
    (act): ReLU(inplace=True)
    (net): Sequential(
      (0): Conv1d(320, 64, kernel_size=(1,), stride=(1,))
      (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): ReLU(inplace=True)
    )
  )
  (classifier): Sequential(
    (0): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
    (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): Dropout(p=0.5, inplace=False)
    (3): Conv1d(128, 50, kernel_size=(1,), stride=(1,))
  )
)
Namespace(batch_size=32, epochs=350, eval=False, exp_name='pointMLP_demo1', lr=0.003, manual_seed=None, model='pointMLP', model_type='insiou', momentum=0.9, no_cuda=False, num_points=2048, resume=False, scheduler='step', step=40, test_batch_size=32, use_sgd=False, workers=12)
Using GPU
PointMLP(
  (embedding): ConvBNReLU1D(
    (act): ReLU(inplace=True)
    (net): Sequential(
      (0): Conv1d(6, 64, kernel_size=(1,), stride=(1,))
      (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): ReLU(inplace=True)
    )
  )
  (local_grouper_list): ModuleList(
    (0): LocalGrouper()
    (1): LocalGrouper()
    (2): LocalGrouper()
    (3): LocalGrouper()
  )
  (pre_blocks_list): ModuleList(
    (0): PreExtraction(
      (transfer): ConvBNReLU1D(
        (act): ReLU(inplace=True)
        (net): Sequential(
          (0): Conv1d(131, 128, kernel_size=(1,), stride=(1,))
          (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
        )
      )
      (operation): Sequential(
        (0): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
      )
    )
    (1): PreExtraction(
      (transfer): ConvBNReLU1D(
        (act): ReLU(inplace=True)
        (net): Sequential(
          (0): Conv1d(259, 256, kernel_size=(1,), stride=(1,))
          (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
        )
      )
      (operation): Sequential(
        (0): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
      )
    )
    (2): PreExtraction(
      (transfer): ConvBNReLU1D(
        (act): ReLU(inplace=True)
        (net): Sequential(
          (0): Conv1d(515, 512, kernel_size=(1,), stride=(1,))
          (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
        )
      )
      (operation): Sequential(
        (0): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
      )
    )
    (3): PreExtraction(
      (transfer): ConvBNReLU1D(
        (act): ReLU(inplace=True)
        (net): Sequential(
          (0): Conv1d(1027, 1024, kernel_size=(1,), stride=(1,))
          (1): BatchNorm1d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
        )
      )
      (operation): Sequential(
        (0): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(1024, 1024, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(1024, 1024, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(1024, 1024, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(1024, 1024, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
      )
    )
  )
  (pos_blocks_list): ModuleList(
    (0): PosExtraction(
      (operation): Sequential(
        (0): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
      )
    )
    (1): PosExtraction(
      (operation): Sequential(
        (0): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
      )
    )
    (2): PosExtraction(
      (operation): Sequential(
        (0): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
      )
    )
    (3): PosExtraction(
      (operation): Sequential(
        (0): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(1024, 1024, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(1024, 1024, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): ConvBNReLURes1D(
          (act): ReLU(inplace=True)
          (net1): Sequential(
            (0): Conv1d(1024, 1024, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (net2): Sequential(
            (0): Conv1d(1024, 1024, kernel_size=(1,), stride=(1,))
            (1): BatchNorm1d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
      )
    )
  )
  (decode_list): ModuleList(
    (0): PointNetFeaturePropagation(
      (fuse): ConvBNReLU1D(
        (act): ReLU(inplace=True)
        (net): Sequential(
          (0): Conv1d(1536, 512, kernel_size=(1,), stride=(1,))
          (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
        )
      )
      (extraction): PosExtraction(
        (operation): Sequential(
          (0): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (2): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (3): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(512, 512, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
        )
      )
    )
    (1): PointNetFeaturePropagation(
      (fuse): ConvBNReLU1D(
        (act): ReLU(inplace=True)
        (net): Sequential(
          (0): Conv1d(768, 256, kernel_size=(1,), stride=(1,))
          (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
        )
      )
      (extraction): PosExtraction(
        (operation): Sequential(
          (0): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (2): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (3): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
        )
      )
    )
    (2): PointNetFeaturePropagation(
      (fuse): ConvBNReLU1D(
        (act): ReLU(inplace=True)
        (net): Sequential(
          (0): Conv1d(384, 128, kernel_size=(1,), stride=(1,))
          (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
        )
      )
      (extraction): PosExtraction(
        (operation): Sequential(
          (0): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (2): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (3): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
        )
      )
    )
    (3): PointNetFeaturePropagation(
      (fuse): ConvBNReLU1D(
        (act): ReLU(inplace=True)
        (net): Sequential(
          (0): Conv1d(192, 128, kernel_size=(1,), stride=(1,))
          (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
        )
      )
      (extraction): PosExtraction(
        (operation): Sequential(
          (0): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (2): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (3): ConvBNReLURes1D(
            (act): ReLU(inplace=True)
            (net1): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (net2): Sequential(
              (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
              (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
        )
      )
    )
  )
  (act): ReLU(inplace=True)
  (cls_map): Sequential(
    (0): ConvBNReLU1D(
      (act): ReLU(inplace=True)
      (net): Sequential(
        (0): Conv1d(16, 64, kernel_size=(1,), stride=(1,))
        (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
      )
    )
    (1): ConvBNReLU1D(
      (act): ReLU(inplace=True)
      (net): Sequential(
        (0): Conv1d(64, 64, kernel_size=(1,), stride=(1,))
        (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
      )
    )
  )
  (gmp_map_list): ModuleList(
    (0): Sequential(
      (0): ConvBNReLU1D(
        (act): ReLU(inplace=True)
        (net): Sequential(
          (0): Conv1d(1024, 64, kernel_size=(1,), stride=(1,))
          (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
        )
      )
      (1): SelfAttention(
        (key_conv): Conv1d(64, 64, kernel_size=(1,), stride=(1,))
        (values_conv): Conv1d(64, 64, kernel_size=(1,), stride=(1,))
        (query_conv): Conv1d(64, 64, kernel_size=(1,), stride=(1,))
      )
    )
    (1): Sequential(
      (0): ConvBNReLU1D(
        (act): ReLU(inplace=True)
        (net): Sequential(
          (0): Conv1d(512, 64, kernel_size=(1,), stride=(1,))
          (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
        )
      )
      (1): SelfAttention(
        (key_conv): Conv1d(64, 64, kernel_size=(1,), stride=(1,))
        (values_conv): Conv1d(64, 64, kernel_size=(1,), stride=(1,))
        (query_conv): Conv1d(64, 64, kernel_size=(1,), stride=(1,))
      )
    )
    (2): Sequential(
      (0): ConvBNReLU1D(
        (act): ReLU(inplace=True)
        (net): Sequential(
          (0): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
          (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
        )
      )
      (1): SelfAttention(
        (key_conv): Conv1d(64, 64, kernel_size=(1,), stride=(1,))
        (values_conv): Conv1d(64, 64, kernel_size=(1,), stride=(1,))
        (query_conv): Conv1d(64, 64, kernel_size=(1,), stride=(1,))
      )
    )
    (3): Sequential(
      (0): ConvBNReLU1D(
        (act): ReLU(inplace=True)
        (net): Sequential(
          (0): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
          (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
        )
      )
      (1): SelfAttention(
        (key_conv): Conv1d(64, 64, kernel_size=(1,), stride=(1,))
        (values_conv): Conv1d(64, 64, kernel_size=(1,), stride=(1,))
        (query_conv): Conv1d(64, 64, kernel_size=(1,), stride=(1,))
      )
    )
    (4): Sequential(
      (0): ConvBNReLU1D(
        (act): ReLU(inplace=True)
        (net): Sequential(
          (0): Conv1d(64, 64, kernel_size=(1,), stride=(1,))
          (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
        )
      )
      (1): SelfAttention(
        (key_conv): Conv1d(64, 64, kernel_size=(1,), stride=(1,))
        (values_conv): Conv1d(64, 64, kernel_size=(1,), stride=(1,))
        (query_conv): Conv1d(64, 64, kernel_size=(1,), stride=(1,))
      )
    )
  )
  (gmp_map_end): ConvBNReLU1D(
    (act): ReLU(inplace=True)
    (net): Sequential(
      (0): Conv1d(320, 64, kernel_size=(1,), stride=(1,))
      (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): ReLU(inplace=True)
    )
  )
  (classifier): Sequential(
    (0): Conv1d(256, 128, kernel_size=(1,), stride=(1,))
    (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): Dropout(p=0.5, inplace=False)
    (3): Conv1d(128, 50, kernel_size=(1,), stride=(1,))
  )
)
Learning rate: 0.003000
Train 1, loss: 0.423999, train acc: 0.869365, train ins_iou: 0.717609
Test 1, loss: 0.333159, test acc: 0.876955  test ins_iou: 0.741526
Max Acc:0.87696
Max instance iou:0.74153
aero iou: 0.7166828
bag iou: 0.5183867
cap iou: 0.7264635
car iou: 0.5271509
chair iou: 0.83479846
ear iou: 0.5219398
guitar iou: 0.83113664
knife iou: 0.6907263
lamp iou: 0.6717562
lapt iou: 0.93757015
moto iou: 0.25419468
mug iou: 0.8155669
Pistol iou: 0.7121807
rock iou: 0.3785373
stake iou: 0.6336413
table iou: 0.7504584
Max class iou:0.65757
Learning rate: 0.003000
Train 2, loss: 0.261024, train acc: 0.907820, train ins_iou: 0.779438
Test 2, loss: 0.256343, test acc: 0.903349  test ins_iou: 0.778259
Max Acc:0.90335
Max instance iou:0.77826
aero iou: 0.7550882
bag iou: 0.5240983
cap iou: 0.7616403
car iou: 0.6758441
chair iou: 0.8615677
ear iou: 0.5860118
guitar iou: 0.8466407
knife iou: 0.69172376
lamp iou: 0.7173161
lapt iou: 0.9412662
moto iou: 0.2587467
mug iou: 0.8708405
Pistol iou: 0.7100178
rock iou: 0.48830256
stake iou: 0.70628047
table iou: 0.7823936
Max class iou:0.69861
Learning rate: 0.003000
Train 3, loss: 0.244078, train acc: 0.913922, train ins_iou: 0.792795
Test 3, loss: 0.257257, test acc: 0.904093  test ins_iou: 0.777865
Max Acc:0.90409
Learning rate: 0.003000
Train 4, loss: 0.231192, train acc: 0.918083, train ins_iou: 0.799877
Test 4, loss: 0.250151, test acc: 0.905072  test ins_iou: 0.782325
Max Acc:0.90507
Max instance iou:0.78233
aero iou: 0.765912
bag iou: 0.4827514
cap iou: 0.79675573
car iou: 0.60656744
chair iou: 0.8671985
ear iou: 0.52755123
guitar iou: 0.8567692
knife iou: 0.79436
lamp iou: 0.6996852
lapt iou: 0.94958663
moto iou: 0.34734157
mug iou: 0.89764196
Pistol iou: 0.7047103
rock iou: 0.5702983
stake iou: 0.7298925
table iou: 0.78652084
Max class iou:0.71147
Learning rate: 0.003000
Train 5, loss: 0.220543, train acc: 0.921797, train ins_iou: 0.806841
Test 5, loss: 0.220734, test acc: 0.918980  test ins_iou: 0.803189
Max Acc:0.91898
Max instance iou:0.80319
aero iou: 0.7738885
bag iou: 0.6689088
cap iou: 0.79394686
car iou: 0.6915816
chair iou: 0.8747931
ear iou: 0.5263004
guitar iou: 0.86781734
knife iou: 0.78818786
lamp iou: 0.7693155
lapt iou: 0.95294374
moto iou: 0.35995963
mug iou: 0.9035025
Pistol iou: 0.7327992
rock iou: 0.557327
stake iou: 0.74894243
table iou: 0.8005705
Max class iou:0.73817
Learning rate: 0.003000
Train 6, loss: 0.211295, train acc: 0.924716, train ins_iou: 0.813074
Test 6, loss: 0.222922, test acc: 0.917430  test ins_iou: 0.806959
Max instance iou:0.80696
aero iou: 0.78042305
bag iou: 0.6737881
cap iou: 0.79972035
car iou: 0.69922775
chair iou: 0.87397903
ear iou: 0.6302985
guitar iou: 0.86071616
knife iou: 0.84054005
lamp iou: 0.7588497
lapt iou: 0.9490892
moto iou: 0.40488127
mug iou: 0.89795923
Pistol iou: 0.74320966
rock iou: 0.5034086
stake iou: 0.7751809
table iou: 0.80520844
Max class iou:0.74978
Learning rate: 0.003000
Train 7, loss: 0.203200, train acc: 0.928064, train ins_iou: 0.819357
Test 7, loss: 0.219077, test acc: 0.920671  test ins_iou: 0.804750
Max Acc:0.92067
Learning rate: 0.003000
Train 8, loss: 0.199864, train acc: 0.929386, train ins_iou: 0.822231
Test 8, loss: 0.220928, test acc: 0.919207  test ins_iou: 0.806387
Learning rate: 0.003000
Train 9, loss: 0.196493, train acc: 0.930326, train ins_iou: 0.823680
Test 9, loss: 0.215691, test acc: 0.919823  test ins_iou: 0.812230
Max instance iou:0.81223
aero iou: 0.79278535
bag iou: 0.72308075
cap iou: 0.74769014
car iou: 0.7153772
chair iou: 0.88146394
ear iou: 0.6596394
guitar iou: 0.8866113
knife iou: 0.85221434
lamp iou: 0.77021456
lapt iou: 0.95038456
moto iou: 0.4387525
mug iou: 0.91774255
Pistol iou: 0.76944447
rock iou: 0.5208762
stake iou: 0.76688635
table iou: 0.79410946
Max class iou:0.76170
Learning rate: 0.003000
Train 10, loss: 0.192131, train acc: 0.931896, train ins_iou: 0.826843
Test 10, loss: 0.209324, test acc: 0.922044  test ins_iou: 0.807323
Max Acc:0.92204
Learning rate: 0.003000
Train 11, loss: 0.187448, train acc: 0.933721, train ins_iou: 0.830361
Test 11, loss: 0.196800, test acc: 0.929591  test ins_iou: 0.821899
Max Acc:0.92959
Max instance iou:0.82190
aero iou: 0.78738993
bag iou: 0.6318545
cap iou: 0.6998424
car iou: 0.7404394
chair iou: 0.8820938
ear iou: 0.6521209
guitar iou: 0.8845376
knife iou: 0.84084666
lamp iou: 0.78174967
lapt iou: 0.9542662
moto iou: 0.48381576
mug iou: 0.9377164
Pistol iou: 0.7604632
rock iou: 0.56596786
stake iou: 0.7814177
table iou: 0.8189892
Max class iou:0.76272
Learning rate: 0.003000
Train 12, loss: 0.185151, train acc: 0.934314, train ins_iou: 0.831904
Test 12, loss: 0.198766, test acc: 0.929175  test ins_iou: 0.820163
Learning rate: 0.003000
Train 13, loss: 0.179835, train acc: 0.936244, train ins_iou: 0.834689
Test 13, loss: 0.190076, test acc: 0.930950  test ins_iou: 0.825603
Max Acc:0.93095
Max instance iou:0.82560
aero iou: 0.8046413
bag iou: 0.75228703
cap iou: 0.7807865
car iou: 0.7186089
chair iou: 0.8903499
ear iou: 0.6462287
guitar iou: 0.89278984
knife iou: 0.86105233
lamp iou: 0.7821055
lapt iou: 0.95255196
moto iou: 0.5699577
mug iou: 0.9361169
Pistol iou: 0.7528906
rock iou: 0.5995984
stake iou: 0.7987927
table iou: 0.8096432
Max class iou:0.78428
Learning rate: 0.003000
Train 14, loss: 0.177358, train acc: 0.936857, train ins_iou: 0.836407
Test 14, loss: 0.188634, test acc: 0.932523  test ins_iou: 0.827969
Max Acc:0.93252
Max instance iou:0.82797
aero iou: 0.8074126
bag iou: 0.7635711
cap iou: 0.7878392
car iou: 0.74333405
chair iou: 0.88141674
ear iou: 0.7305082
guitar iou: 0.89970523
knife iou: 0.85343903
lamp iou: 0.7878852
lapt iou: 0.9550383
moto iou: 0.54925483
mug iou: 0.92793554
Pistol iou: 0.7231044
rock iou: 0.6364689
stake iou: 0.7649542
table iou: 0.8187917
Max class iou:0.78942
Learning rate: 0.003000
Train 15, loss: 0.175951, train acc: 0.937734, train ins_iou: 0.838256
Test 15, loss: 0.185360, test acc: 0.932221  test ins_iou: 0.829077
Max instance iou:0.82908
Learning rate: 0.003000
Train 16, loss: 0.170849, train acc: 0.939642, train ins_iou: 0.840626
Test 16, loss: 0.192492, test acc: 0.929986  test ins_iou: 0.824255
Learning rate: 0.003000
Train 17, loss: 0.169203, train acc: 0.939818, train ins_iou: 0.841374
Test 17, loss: 0.180321, test acc: 0.934664  test ins_iou: 0.830867
Max Acc:0.93466
Max instance iou:0.83087
Learning rate: 0.003000
Train 18, loss: 0.168654, train acc: 0.939977, train ins_iou: 0.841515
Test 18, loss: 0.184486, test acc: 0.932972  test ins_iou: 0.829171
Learning rate: 0.003000
Train 19, loss: 0.166469, train acc: 0.940834, train ins_iou: 0.843374
Test 19, loss: 0.179873, test acc: 0.934082  test ins_iou: 0.834671
Max instance iou:0.83467
aero iou: 0.8129854
bag iou: 0.7773057
cap iou: 0.8364742
car iou: 0.74472547
chair iou: 0.894301
ear iou: 0.6432219
guitar iou: 0.9061094
knife iou: 0.85492516
lamp iou: 0.79918116
lapt iou: 0.95442927
moto iou: 0.5697002
mug iou: 0.9440638
Pistol iou: 0.81067747
rock iou: 0.5818782
stake iou: 0.7642616
table iou: 0.81810355
Max class iou:0.79452
Learning rate: 0.003000
Train 20, loss: 0.164610, train acc: 0.941365, train ins_iou: 0.844227
Test 20, loss: 0.178680, test acc: 0.935687  test ins_iou: 0.833811
Max Acc:0.93569
aero iou: 0.8104268
bag iou: 0.7523297
cap iou: 0.8037434
car iou: 0.75353026
chair iou: 0.89263463
ear iou: 0.7416875
guitar iou: 0.8664028
knife iou: 0.8760826
lamp iou: 0.79480594
lapt iou: 0.9502121
moto iou: 0.59609556
mug iou: 0.9215952
Pistol iou: 0.8187366
rock iou: 0.636014
stake iou: 0.79730505
table iou: 0.81953514
Max class iou:0.80195
Learning rate: 0.003000
Train 21, loss: 0.164188, train acc: 0.941571, train ins_iou: 0.845134
Test 21, loss: 0.183459, test acc: 0.933104  test ins_iou: 0.834265
Learning rate: 0.003000
Train 22, loss: 0.160183, train acc: 0.942842, train ins_iou: 0.846829
Test 22, loss: 0.178882, test acc: 0.936541  test ins_iou: 0.837390
Max Acc:0.93654
Max instance iou:0.83739
aero iou: 0.81258404
bag iou: 0.76381975
cap iou: 0.8301508
car iou: 0.75356376
chair iou: 0.8929207
ear iou: 0.78763807
guitar iou: 0.8968957
knife iou: 0.85301113
lamp iou: 0.7902578
lapt iou: 0.9550837
moto iou: 0.601962
mug iou: 0.9324005
Pistol iou: 0.7702703
rock iou: 0.6166895
stake iou: 0.7950204
table iou: 0.82881504
Max class iou:0.80507
Learning rate: 0.003000
Train 23, loss: 0.159265, train acc: 0.943211, train ins_iou: 0.847795
Test 23, loss: 0.176539, test acc: 0.935723  test ins_iou: 0.835080
Learning rate: 0.003000
Train 24, loss: 0.157091, train acc: 0.943943, train ins_iou: 0.848893
Test 24, loss: 0.174153, test acc: 0.938379  test ins_iou: 0.838343
Max Acc:0.93838
Max instance iou:0.83834
aero iou: 0.81088156
bag iou: 0.7699966
cap iou: 0.84147567
car iou: 0.7640949
chair iou: 0.8950571
ear iou: 0.74535805
guitar iou: 0.9017785
knife iou: 0.87838346
lamp iou: 0.78515387
lapt iou: 0.95413095
moto iou: 0.6698644
mug iou: 0.93654555
Pistol iou: 0.7898584
rock iou: 0.59982616
stake iou: 0.8212461
table iou: 0.8219396
Max class iou:0.81160
Learning rate: 0.003000
Train 25, loss: 0.154970, train acc: 0.944509, train ins_iou: 0.850227
Test 25, loss: 0.177667, test acc: 0.935349  test ins_iou: 0.839142
Max instance iou:0.83914
Learning rate: 0.003000
Train 26, loss: 0.153716, train acc: 0.945039, train ins_iou: 0.851038
Test 26, loss: 0.170734, test acc: 0.938086  test ins_iou: 0.838749
Learning rate: 0.003000
Train 27, loss: 0.154289, train acc: 0.944978, train ins_iou: 0.851031
Test 27, loss: 0.172458, test acc: 0.937487  test ins_iou: 0.837757
Learning rate: 0.003000
Train 28, loss: 0.150367, train acc: 0.946144, train ins_iou: 0.852448
Test 28, loss: 0.167512, test acc: 0.939671  test ins_iou: 0.843468
Max Acc:0.93967
Max instance iou:0.84347
Learning rate: 0.003000
Train 29, loss: 0.147582, train acc: 0.947075, train ins_iou: 0.854266
Test 29, loss: 0.170766, test acc: 0.937634  test ins_iou: 0.843668
Max instance iou:0.84367
aero iou: 0.8162355
bag iou: 0.7849222
cap iou: 0.86022115
car iou: 0.76933014
chair iou: 0.898241
ear iou: 0.7883872
guitar iou: 0.9015626
knife iou: 0.8789083
lamp iou: 0.8076017
lapt iou: 0.9539556
moto iou: 0.6844548
mug iou: 0.9438022
Pistol iou: 0.8255076
rock iou: 0.61358154
stake iou: 0.816719
table iou: 0.8223724
Max class iou:0.82286
Learning rate: 0.003000
Train 30, loss: 0.147150, train acc: 0.947053, train ins_iou: 0.854530
Test 30, loss: 0.170889, test acc: 0.938206  test ins_iou: 0.841319
Learning rate: 0.003000
Train 31, loss: 0.144940, train acc: 0.947593, train ins_iou: 0.854718
Test 31, loss: 0.163905, test acc: 0.940957  test ins_iou: 0.845451
Max Acc:0.94096
Max instance iou:0.84545
Learning rate: 0.003000
Train 32, loss: 0.143002, train acc: 0.948408, train ins_iou: 0.856145
Test 32, loss: 0.179735, test acc: 0.935790  test ins_iou: 0.838183
Learning rate: 0.003000
Train 33, loss: 0.143999, train acc: 0.948311, train ins_iou: 0.856496
Test 33, loss: 0.164908, test acc: 0.941395  test ins_iou: 0.844173
Max Acc:0.94139
Learning rate: 0.003000
Train 34, loss: 0.140900, train acc: 0.948924, train ins_iou: 0.857477
Test 34, loss: 0.161252, test acc: 0.941349  test ins_iou: 0.844870
Learning rate: 0.003000
Train 35, loss: 0.138922, train acc: 0.949771, train ins_iou: 0.858843
Test 35, loss: 0.165660, test acc: 0.939407  test ins_iou: 0.845255
Learning rate: 0.003000
Train 36, loss: 0.137231, train acc: 0.950174, train ins_iou: 0.859476
Test 36, loss: 0.164294, test acc: 0.940768  test ins_iou: 0.845935
Max instance iou:0.84594
Learning rate: 0.003000
Train 37, loss: 0.136221, train acc: 0.950627, train ins_iou: 0.860109
Test 37, loss: 0.172057, test acc: 0.937600  test ins_iou: 0.839196
Learning rate: 0.003000
Train 38, loss: 0.135430, train acc: 0.950878, train ins_iou: 0.860387
Test 38, loss: 0.186543, test acc: 0.934297  test ins_iou: 0.839326
Learning rate: 0.003000
Train 39, loss: 0.134665, train acc: 0.951094, train ins_iou: 0.860748
Test 39, loss: 0.167783, test acc: 0.939150  test ins_iou: 0.845275
Learning rate: 0.001500
Train 40, loss: 0.132039, train acc: 0.952013, train ins_iou: 0.863008
Test 40, loss: 0.168448, test acc: 0.939422  test ins_iou: 0.845830
aero iou: 0.81724715
bag iou: 0.7887519
cap iou: 0.8736985
car iou: 0.78471285
chair iou: 0.89963704
ear iou: 0.7158596
guitar iou: 0.89975137
knife iou: 0.8827106
lamp iou: 0.8080801
lapt iou: 0.9566242
moto iou: 0.7041379
mug iou: 0.95152444
Pistol iou: 0.8215006
rock iou: 0.64967364
stake iou: 0.81223875
table iou: 0.8241174
Max class iou:0.82439
Learning rate: 0.001500
Train 41, loss: 0.123301, train acc: 0.954838, train ins_iou: 0.867463
Test 41, loss: 0.158891, test acc: 0.942730  test ins_iou: 0.850231
Max Acc:0.94273
Max instance iou:0.85023
Learning rate: 0.001500
Train 42, loss: 0.120341, train acc: 0.955826, train ins_iou: 0.869425
Test 42, loss: 0.160827, test acc: 0.942817  test ins_iou: 0.850988
Max Acc:0.94282
Max instance iou:0.85099
aero iou: 0.8197746
bag iou: 0.806703
cap iou: 0.85353
car iou: 0.7850931
chair iou: 0.900596
ear iou: 0.7634919
guitar iou: 0.91108763
knife iou: 0.8797604
lamp iou: 0.81857175
lapt iou: 0.9581231
moto iou: 0.72077596
mug iou: 0.9427857
Pistol iou: 0.81852955
rock iou: 0.60438097
stake iou: 0.80954117
table iou: 0.8336476
Max class iou:0.82665
Learning rate: 0.001500
Train 43, loss: 0.119347, train acc: 0.956145, train ins_iou: 0.870013
Test 43, loss: 0.168527, test acc: 0.941135  test ins_iou: 0.848688
aero iou: 0.8322145
bag iou: 0.8233365
cap iou: 0.8362126
car iou: 0.7807964
chair iou: 0.8993402
ear iou: 0.7763573
guitar iou: 0.91010624
knife iou: 0.8786012
lamp iou: 0.7986834
lapt iou: 0.9588654
moto iou: 0.7168447
mug iou: 0.9458718
Pistol iou: 0.81420255
rock iou: 0.6112385
stake iou: 0.8214499
table iou: 0.82914877
Max class iou:0.82708
Learning rate: 0.001500
Train 44, loss: 0.117756, train acc: 0.956656, train ins_iou: 0.870981
Test 44, loss: 0.169533, test acc: 0.941100  test ins_iou: 0.847706
Learning rate: 0.001500
Train 45, loss: 0.116738, train acc: 0.956888, train ins_iou: 0.871247
Test 45, loss: 0.165583, test acc: 0.943030  test ins_iou: 0.849948
Max Acc:0.94303
Learning rate: 0.001500
Train 46, loss: 0.116005, train acc: 0.957264, train ins_iou: 0.871606
Test 46, loss: 0.166419, test acc: 0.942507  test ins_iou: 0.850771
Learning rate: 0.001500
Train 47, loss: 0.115029, train acc: 0.957584, train ins_iou: 0.872578
Test 47, loss: 0.165996, test acc: 0.942625  test ins_iou: 0.850686
aero iou: 0.83096194
bag iou: 0.8225819
cap iou: 0.8816418
car iou: 0.7850094
chair iou: 0.9004597
ear iou: 0.7494121
guitar iou: 0.9140801
knife iou: 0.87951785
lamp iou: 0.81047523
lapt iou: 0.9579226
moto iou: 0.7229873
mug iou: 0.94581753
Pistol iou: 0.8234755
rock iou: 0.6085939
stake iou: 0.81731963
table iou: 0.8292012
Max class iou:0.82997
Learning rate: 0.001500
Train 48, loss: 0.114077, train acc: 0.957808, train ins_iou: 0.872818
Test 48, loss: 0.166179, test acc: 0.942675  test ins_iou: 0.851299
Max instance iou:0.85130
Learning rate: 0.001500
Train 49, loss: 0.113495, train acc: 0.957933, train ins_iou: 0.873096
Test 49, loss: 0.164292, test acc: 0.942561  test ins_iou: 0.848855
Learning rate: 0.001500
Train 50, loss: 0.112758, train acc: 0.958326, train ins_iou: 0.874059
Test 50, loss: 0.164222, test acc: 0.943336  test ins_iou: 0.851131
Max Acc:0.94334
Learning rate: 0.001500
Train 51, loss: 0.111505, train acc: 0.958671, train ins_iou: 0.874478
Test 51, loss: 0.164866, test acc: 0.943290  test ins_iou: 0.851925
Max instance iou:0.85193
Learning rate: 0.001500
Train 52, loss: 0.110366, train acc: 0.959049, train ins_iou: 0.875253
Test 52, loss: 0.171438, test acc: 0.941995  test ins_iou: 0.851375
Learning rate: 0.001500
Train 53, loss: 0.109056, train acc: 0.959436, train ins_iou: 0.876226
Test 53, loss: 0.172540, test acc: 0.942142  test ins_iou: 0.850304
Learning rate: 0.001500
Train 54, loss: 0.109028, train acc: 0.959498, train ins_iou: 0.876141
Test 54, loss: 0.170157, test acc: 0.942342  test ins_iou: 0.850089
Learning rate: 0.001500
Train 55, loss: 0.108496, train acc: 0.959576, train ins_iou: 0.876191
Test 55, loss: 0.170159, test acc: 0.942301  test ins_iou: 0.849839
aero iou: 0.82992506
bag iou: 0.8210306
cap iou: 0.8794469
car iou: 0.7861773
chair iou: 0.8980841
ear iou: 0.7371989
guitar iou: 0.9118464
knife iou: 0.87051934
lamp iou: 0.8128097
lapt iou: 0.95643026
moto iou: 0.7410112
mug iou: 0.94693154
Pistol iou: 0.8180456
rock iou: 0.64022654
stake iou: 0.80507267
table iou: 0.82853293
Max class iou:0.83021
Learning rate: 0.001500
Train 56, loss: 0.106857, train acc: 0.960239, train ins_iou: 0.877444
Test 56, loss: 0.171005, test acc: 0.941788  test ins_iou: 0.849524
Learning rate: 0.001500
Train 57, loss: 0.105963, train acc: 0.960517, train ins_iou: 0.878357
Test 57, loss: 0.170339, test acc: 0.942878  test ins_iou: 0.851587
aero iou: 0.82919174
bag iou: 0.79371595
cap iou: 0.86794096
car iou: 0.77857107
chair iou: 0.899867
ear iou: 0.78580713
guitar iou: 0.91558444
knife iou: 0.87934434
lamp iou: 0.81739473
lapt iou: 0.96116906
moto iou: 0.7296958
mug iou: 0.94630766
Pistol iou: 0.82610035
rock iou: 0.6044841
stake iou: 0.822778
table iou: 0.8310912
Max class iou:0.83057
Learning rate: 0.001500
Train 58, loss: 0.105243, train acc: 0.960804, train ins_iou: 0.878395
Test 58, loss: 0.174947, test acc: 0.942187  test ins_iou: 0.851892
aero iou: 0.832323
bag iou: 0.83728397
cap iou: 0.87484646
car iou: 0.79327583
chair iou: 0.9000162
ear iou: 0.7633096
guitar iou: 0.910676
knife iou: 0.87008774
lamp iou: 0.81841433
lapt iou: 0.95873463
moto iou: 0.7469567
mug iou: 0.9478515
Pistol iou: 0.8194971
rock iou: 0.5766306
stake iou: 0.8190579
table iou: 0.82901824
Max class iou:0.83112
Learning rate: 0.001500
Train 59, loss: 0.104351, train acc: 0.961011, train ins_iou: 0.879107
Test 59, loss: 0.174846, test acc: 0.942077  test ins_iou: 0.850242
Learning rate: 0.001500
Train 60, loss: 0.104407, train acc: 0.960979, train ins_iou: 0.879485
Test 60, loss: 0.167873, test acc: 0.943322  test ins_iou: 0.849885
Learning rate: 0.001500
Train 61, loss: 0.103382, train acc: 0.961258, train ins_iou: 0.879444
Test 61, loss: 0.169928, test acc: 0.943889  test ins_iou: 0.852423
Max Acc:0.94389
Max instance iou:0.85242
aero iou: 0.8276664
bag iou: 0.8223344
cap iou: 0.88171345
car iou: 0.78693676
chair iou: 0.9009411
ear iou: 0.7619424
guitar iou: 0.9137397
knife iou: 0.8759848
lamp iou: 0.8121605
lapt iou: 0.9567368
moto iou: 0.7479858
mug iou: 0.9488652
Pistol iou: 0.8329048
rock iou: 0.5830048
stake iou: 0.8283751
table iou: 0.8332248
Max class iou:0.83216
Learning rate: 0.001500
Train 62, loss: 0.102979, train acc: 0.961427, train ins_iou: 0.879981
Test 62, loss: 0.171774, test acc: 0.943514  test ins_iou: 0.852305
Learning rate: 0.001500
Train 63, loss: 0.102163, train acc: 0.961684, train ins_iou: 0.880392
Test 63, loss: 0.169525, test acc: 0.942698  test ins_iou: 0.850735
Learning rate: 0.001500
Train 64, loss: 0.101080, train acc: 0.962010, train ins_iou: 0.881020
Test 64, loss: 0.173040, test acc: 0.943563  test ins_iou: 0.851249
Learning rate: 0.001500
Train 65, loss: 0.100748, train acc: 0.962248, train ins_iou: 0.881560
Test 65, loss: 0.174821, test acc: 0.942256  test ins_iou: 0.851159
Learning rate: 0.001500
Train 66, loss: 0.100256, train acc: 0.962335, train ins_iou: 0.882256
Test 66, loss: 0.169007, test acc: 0.943053  test ins_iou: 0.850439
Learning rate: 0.001500
Train 67, loss: 0.099106, train acc: 0.962759, train ins_iou: 0.883209
Test 67, loss: 0.172424, test acc: 0.944059  test ins_iou: 0.853007
Max Acc:0.94406
Max instance iou:0.85301
Learning rate: 0.001500
Train 68, loss: 0.099179, train acc: 0.962760, train ins_iou: 0.882886
Test 68, loss: 0.172659, test acc: 0.943708  test ins_iou: 0.851168
Learning rate: 0.001500
Train 69, loss: 0.097571, train acc: 0.963274, train ins_iou: 0.884122
Test 69, loss: 0.173746, test acc: 0.943994  test ins_iou: 0.853325
Max instance iou:0.85332
Learning rate: 0.001500
Train 70, loss: 0.096691, train acc: 0.963454, train ins_iou: 0.884449
Test 70, loss: 0.174763, test acc: 0.943893  test ins_iou: 0.852605
Learning rate: 0.001500
Train 71, loss: 0.096726, train acc: 0.963483, train ins_iou: 0.884312
Test 71, loss: 0.176320, test acc: 0.943252  test ins_iou: 0.850931
Learning rate: 0.001500
Train 72, loss: 0.096111, train acc: 0.963562, train ins_iou: 0.884555
Test 72, loss: 0.179601, test acc: 0.943340  test ins_iou: 0.852378
Learning rate: 0.001500
Train 73, loss: 0.095205, train acc: 0.964078, train ins_iou: 0.885630
Test 73, loss: 0.182476, test acc: 0.943171  test ins_iou: 0.850555
Learning rate: 0.001500
Train 74, loss: 0.095278, train acc: 0.963849, train ins_iou: 0.884991
Test 74, loss: 0.173841, test acc: 0.944261  test ins_iou: 0.852746
Max Acc:0.94426
Learning rate: 0.001500
Train 75, loss: 0.094905, train acc: 0.964125, train ins_iou: 0.885842
Test 75, loss: 0.176920, test acc: 0.943927  test ins_iou: 0.852303
Learning rate: 0.001500
Train 76, loss: 0.095686, train acc: 0.963762, train ins_iou: 0.885287
Test 76, loss: 0.181415, test acc: 0.942553  test ins_iou: 0.851191
Learning rate: 0.001500
Train 77, loss: 0.094255, train acc: 0.964227, train ins_iou: 0.885891
Test 77, loss: 0.177859, test acc: 0.943806  test ins_iou: 0.851810
Learning rate: 0.001500
Train 78, loss: 0.092849, train acc: 0.964679, train ins_iou: 0.887277
Test 78, loss: 0.183135, test acc: 0.941330  test ins_iou: 0.846622
Learning rate: 0.001500
Train 79, loss: 0.092237, train acc: 0.964890, train ins_iou: 0.887462
Test 79, loss: 0.180168, test acc: 0.943523  test ins_iou: 0.851227
Learning rate: 0.000750
Train 80, loss: 0.091511, train acc: 0.965162, train ins_iou: 0.887836
Test 80, loss: 0.174504, test acc: 0.943749  test ins_iou: 0.852271
aero iou: 0.8309002
bag iou: 0.83550817
cap iou: 0.84546125
car iou: 0.79456425
chair iou: 0.9008196
ear iou: 0.774571
guitar iou: 0.9080513
knife iou: 0.87660867
lamp iou: 0.81017077
lapt iou: 0.95782924
moto iou: 0.7453639
mug iou: 0.94778484
Pistol iou: 0.8243318
rock iou: 0.5983954
stake iou: 0.8374431
table iou: 0.8318075
Max class iou:0.83248
Learning rate: 0.000750
Train 81, loss: 0.087157, train acc: 0.966640, train ins_iou: 0.891614
Test 81, loss: 0.181557, test acc: 0.944412  test ins_iou: 0.853891
Max Acc:0.94441
Max instance iou:0.85389
Learning rate: 0.000750
Train 82, loss: 0.085854, train acc: 0.967055, train ins_iou: 0.892545
Test 82, loss: 0.182426, test acc: 0.944514  test ins_iou: 0.854181
Max Acc:0.94451
Max instance iou:0.85418
Learning rate: 0.000750
Train 83, loss: 0.085208, train acc: 0.967325, train ins_iou: 0.893413
Test 83, loss: 0.181537, test acc: 0.944266  test ins_iou: 0.853666
Learning rate: 0.000750
Train 84, loss: 0.084636, train acc: 0.967399, train ins_iou: 0.893331
Test 84, loss: 0.179160, test acc: 0.944365  test ins_iou: 0.853882
Learning rate: 0.000750
Train 85, loss: 0.084279, train acc: 0.967477, train ins_iou: 0.894082
Test 85, loss: 0.181730, test acc: 0.944328  test ins_iou: 0.853522
Learning rate: 0.000750
Train 86, loss: 0.083738, train acc: 0.967696, train ins_iou: 0.894185
Test 86, loss: 0.179139, test acc: 0.945004  test ins_iou: 0.854162
Max Acc:0.94500
Learning rate: 0.000750
Train 87, loss: 0.083603, train acc: 0.967752, train ins_iou: 0.894102
Test 87, loss: 0.187014, test acc: 0.944073  test ins_iou: 0.854292
Max instance iou:0.85429
Learning rate: 0.000750
Train 88, loss: 0.083228, train acc: 0.967843, train ins_iou: 0.894243
Test 88, loss: 0.186128, test acc: 0.944439  test ins_iou: 0.853581
Learning rate: 0.000750
Train 89, loss: 0.082883, train acc: 0.967954, train ins_iou: 0.894883
Test 89, loss: 0.184403, test acc: 0.944812  test ins_iou: 0.855231
Max instance iou:0.85523
aero iou: 0.83560413
bag iou: 0.8202534
cap iou: 0.83729154
car iou: 0.79435295
chair iou: 0.8999436
ear iou: 0.7853671
guitar iou: 0.91702306
knife iou: 0.874564
lamp iou: 0.81598353
lapt iou: 0.96238524
moto iou: 0.7555741
mug iou: 0.95064807
Pistol iou: 0.8283792
rock iou: 0.60648406
stake iou: 0.8098981
table iou: 0.8369355
Max class iou:0.83317
Learning rate: 0.000750
Train 90, loss: 0.082192, train acc: 0.968258, train ins_iou: 0.895608
Test 90, loss: 0.185063, test acc: 0.944654  test ins_iou: 0.855258
Max instance iou:0.85526
Learning rate: 0.000750
Train 91, loss: 0.081988, train acc: 0.968272, train ins_iou: 0.895601
Test 91, loss: 0.185282, test acc: 0.944591  test ins_iou: 0.853673
Learning rate: 0.000750
Train 92, loss: 0.081766, train acc: 0.968300, train ins_iou: 0.895597
Test 92, loss: 0.186298, test acc: 0.943995  test ins_iou: 0.852064
Learning rate: 0.000750
Train 93, loss: 0.081623, train acc: 0.968360, train ins_iou: 0.895959
Test 93, loss: 0.183946, test acc: 0.944311  test ins_iou: 0.853049
Learning rate: 0.000750
Train 94, loss: 0.081242, train acc: 0.968452, train ins_iou: 0.896375
Test 94, loss: 0.183396, test acc: 0.944818  test ins_iou: 0.853668
Learning rate: 0.000750
Train 95, loss: 0.080595, train acc: 0.968750, train ins_iou: 0.896532
Test 95, loss: 0.183018, test acc: 0.945374  test ins_iou: 0.855592
Max Acc:0.94537
Max instance iou:0.85559
Learning rate: 0.000750
Train 96, loss: 0.079898, train acc: 0.968988, train ins_iou: 0.897201
Test 96, loss: 0.185024, test acc: 0.944503  test ins_iou: 0.853813
Learning rate: 0.000750
Train 97, loss: 0.080563, train acc: 0.968769, train ins_iou: 0.896696
Test 97, loss: 0.186621, test acc: 0.944079  test ins_iou: 0.852801
Learning rate: 0.000750
Train 98, loss: 0.079813, train acc: 0.969020, train ins_iou: 0.897395
Test 98, loss: 0.188573, test acc: 0.944673  test ins_iou: 0.853737
Learning rate: 0.000750
Train 99, loss: 0.079188, train acc: 0.969207, train ins_iou: 0.897701
Test 99, loss: 0.188402, test acc: 0.944410  test ins_iou: 0.854997
Learning rate: 0.000750
Train 100, loss: 0.079328, train acc: 0.969055, train ins_iou: 0.897683
Test 100, loss: 0.189031, test acc: 0.944770  test ins_iou: 0.854716
aero iou: 0.83293873
bag iou: 0.8204788
cap iou: 0.8533382
car iou: 0.7945744
chair iou: 0.90182614
ear iou: 0.78224736
guitar iou: 0.91598654
knife iou: 0.8736704
lamp iou: 0.8253949
lapt iou: 0.9597151
moto iou: 0.7547038
mug iou: 0.94725096
Pistol iou: 0.8296183
rock iou: 0.61167747
stake iou: 0.8096798
table iou: 0.83193976
Max class iou:0.83407
Learning rate: 0.000750
Train 101, loss: 0.078778, train acc: 0.969364, train ins_iou: 0.898506
Test 101, loss: 0.188214, test acc: 0.945246  test ins_iou: 0.856192
Max instance iou:0.85619
Learning rate: 0.000750
Train 102, loss: 0.078351, train acc: 0.969489, train ins_iou: 0.899289
Test 102, loss: 0.188937, test acc: 0.944779  test ins_iou: 0.854595
Learning rate: 0.000750
Train 103, loss: 0.077968, train acc: 0.969561, train ins_iou: 0.899287
Test 103, loss: 0.186200, test acc: 0.945058  test ins_iou: 0.854829
Learning rate: 0.000750
Train 104, loss: 0.077877, train acc: 0.969537, train ins_iou: 0.898816
Test 104, loss: 0.192754, test acc: 0.944054  test ins_iou: 0.854762
aero iou: 0.83500934
bag iou: 0.8202589
cap iou: 0.8410582
car iou: 0.7971131
chair iou: 0.9002456
ear iou: 0.788753
guitar iou: 0.91823035
knife iou: 0.8761342
lamp iou: 0.8217141
lapt iou: 0.96010965
moto iou: 0.7518793
mug iou: 0.9538228
Pistol iou: 0.8377761
rock iou: 0.59035563
stake iou: 0.82095915
table iou: 0.8320482
Max class iou:0.83409
Learning rate: 0.000750
Train 105, loss: 0.077532, train acc: 0.969741, train ins_iou: 0.899429
Test 105, loss: 0.189477, test acc: 0.944752  test ins_iou: 0.854954
aero iou: 0.83592194
bag iou: 0.8367983
cap iou: 0.83512366
car iou: 0.7967012
chair iou: 0.89962965
ear iou: 0.7788185
guitar iou: 0.9182621
knife iou: 0.8758807
lamp iou: 0.81877613
lapt iou: 0.9597609
moto iou: 0.74056566
mug iou: 0.95418787
Pistol iou: 0.83530676
rock iou: 0.6032872
stake iou: 0.82399124
table iou: 0.83442754
Max class iou:0.83421
Learning rate: 0.000750
Train 106, loss: 0.077190, train acc: 0.969864, train ins_iou: 0.899570
Test 106, loss: 0.189289, test acc: 0.944313  test ins_iou: 0.854795
aero iou: 0.83553183
bag iou: 0.83437264
cap iou: 0.8371231
car iou: 0.79491496
chair iou: 0.9009524
ear iou: 0.8153704
guitar iou: 0.917264
knife iou: 0.8751675
lamp iou: 0.8141064
lapt iou: 0.9603097
moto iou: 0.7453637
mug iou: 0.952717
Pistol iou: 0.8293758
rock iou: 0.59411997
stake iou: 0.81924695
table iou: 0.83485496
Max class iou:0.83505
Learning rate: 0.000750
Train 107, loss: 0.077251, train acc: 0.969743, train ins_iou: 0.899408
Test 107, loss: 0.188727, test acc: 0.945148  test ins_iou: 0.855395
Learning rate: 0.000750
Train 108, loss: 0.076938, train acc: 0.969894, train ins_iou: 0.900182
Test 108, loss: 0.192760, test acc: 0.944530  test ins_iou: 0.853627
Learning rate: 0.000750
Train 109, loss: 0.076717, train acc: 0.970044, train ins_iou: 0.899947
Test 109, loss: 0.190297, test acc: 0.944721  test ins_iou: 0.855145
Learning rate: 0.000750
Train 110, loss: 0.077407, train acc: 0.969725, train ins_iou: 0.899668
Test 110, loss: 0.187949, test acc: 0.944885  test ins_iou: 0.854951
Learning rate: 0.000750
Train 111, loss: 0.076044, train acc: 0.970243, train ins_iou: 0.900799
Test 111, loss: 0.189489, test acc: 0.945226  test ins_iou: 0.855650
Learning rate: 0.000750
Train 112, loss: 0.075771, train acc: 0.970332, train ins_iou: 0.900820
Test 112, loss: 0.186376, test acc: 0.945211  test ins_iou: 0.855509
Learning rate: 0.000750
Train 113, loss: 0.075466, train acc: 0.970512, train ins_iou: 0.900956
Test 113, loss: 0.189633, test acc: 0.944766  test ins_iou: 0.854760
Learning rate: 0.000750
Train 114, loss: 0.075411, train acc: 0.970496, train ins_iou: 0.900982
Test 114, loss: 0.189503, test acc: 0.945222  test ins_iou: 0.855362
Learning rate: 0.000750
Train 115, loss: 0.075007, train acc: 0.970667, train ins_iou: 0.901624
Test 115, loss: 0.194453, test acc: 0.944835  test ins_iou: 0.854511
Learning rate: 0.000750
Train 116, loss: 0.074702, train acc: 0.970693, train ins_iou: 0.902091
Test 116, loss: 0.189153, test acc: 0.945182  test ins_iou: 0.855546
Learning rate: 0.000750
Train 117, loss: 0.075135, train acc: 0.970461, train ins_iou: 0.901279
Test 117, loss: 0.190652, test acc: 0.944789  test ins_iou: 0.855039
Learning rate: 0.000750
Train 118, loss: 0.074469, train acc: 0.970791, train ins_iou: 0.901808
Test 118, loss: 0.196372, test acc: 0.943599  test ins_iou: 0.853439
Learning rate: 0.000750
Train 119, loss: 0.074230, train acc: 0.970789, train ins_iou: 0.902165
Test 119, loss: 0.191441, test acc: 0.944760  test ins_iou: 0.854337
Learning rate: 0.000375
Train 120, loss: 0.073681, train acc: 0.971059, train ins_iou: 0.902717
Test 120, loss: 0.193290, test acc: 0.944770  test ins_iou: 0.855084
Learning rate: 0.000375
Train 121, loss: 0.071892, train acc: 0.971703, train ins_iou: 0.904353
Test 121, loss: 0.193093, test acc: 0.944926  test ins_iou: 0.854965
Learning rate: 0.000375
Train 122, loss: 0.071194, train acc: 0.972031, train ins_iou: 0.905183
Test 122, loss: 0.196120, test acc: 0.944656  test ins_iou: 0.854300
Learning rate: 0.000375
Train 123, loss: 0.070845, train acc: 0.972012, train ins_iou: 0.905004
Test 123, loss: 0.194183, test acc: 0.945622  test ins_iou: 0.856666
Max Acc:0.94562
Max instance iou:0.85667
Learning rate: 0.000375
Train 124, loss: 0.070531, train acc: 0.972182, train ins_iou: 0.905299
Test 124, loss: 0.195828, test acc: 0.944988  test ins_iou: 0.855451
Learning rate: 0.000375
Train 125, loss: 0.070523, train acc: 0.972155, train ins_iou: 0.905495
Test 125, loss: 0.199114, test acc: 0.944318  test ins_iou: 0.855161
Learning rate: 0.000375
Train 126, loss: 0.070034, train acc: 0.972303, train ins_iou: 0.905763
Test 126, loss: 0.198244, test acc: 0.944668  test ins_iou: 0.854482
Learning rate: 0.000375
Train 127, loss: 0.069840, train acc: 0.972380, train ins_iou: 0.906486
Test 127, loss: 0.198208, test acc: 0.944652  test ins_iou: 0.854370
Learning rate: 0.000375
Train 128, loss: 0.069881, train acc: 0.972340, train ins_iou: 0.906381
Test 128, loss: 0.196597, test acc: 0.945037  test ins_iou: 0.854683
Learning rate: 0.000375
Train 129, loss: 0.069688, train acc: 0.972477, train ins_iou: 0.906723
Test 129, loss: 0.197155, test acc: 0.945495  test ins_iou: 0.856505
Learning rate: 0.000375
Train 130, loss: 0.069354, train acc: 0.972534, train ins_iou: 0.906425
Test 130, loss: 0.197446, test acc: 0.945157  test ins_iou: 0.856404
Learning rate: 0.000375
Train 131, loss: 0.069302, train acc: 0.972584, train ins_iou: 0.907096
Test 131, loss: 0.199396, test acc: 0.944926  test ins_iou: 0.855754
Learning rate: 0.000375
Train 132, loss: 0.068961, train acc: 0.972684, train ins_iou: 0.907214
Test 132, loss: 0.197417, test acc: 0.945800  test ins_iou: 0.856601
Max Acc:0.94580
Learning rate: 0.000375
Train 133, loss: 0.068835, train acc: 0.972727, train ins_iou: 0.907070
Test 133, loss: 0.197444, test acc: 0.945289  test ins_iou: 0.856243
Learning rate: 0.000375
Train 134, loss: 0.068813, train acc: 0.972749, train ins_iou: 0.907012
Test 134, loss: 0.199821, test acc: 0.944757  test ins_iou: 0.855263
Learning rate: 0.000375
Train 135, loss: 0.068656, train acc: 0.972844, train ins_iou: 0.907319
Test 135, loss: 0.199462, test acc: 0.944206  test ins_iou: 0.854955
Learning rate: 0.000375
Train 136, loss: 0.068688, train acc: 0.972812, train ins_iou: 0.907258
Test 136, loss: 0.202793, test acc: 0.944768  test ins_iou: 0.854439
Learning rate: 0.000375
Train 137, loss: 0.068404, train acc: 0.972866, train ins_iou: 0.907464
Test 137, loss: 0.197648, test acc: 0.944507  test ins_iou: 0.854550
Learning rate: 0.000375
Train 138, loss: 0.068476, train acc: 0.972800, train ins_iou: 0.907136
Test 138, loss: 0.200241, test acc: 0.945480  test ins_iou: 0.855267
Learning rate: 0.000375
Train 139, loss: 0.068104, train acc: 0.972998, train ins_iou: 0.907961
Test 139, loss: 0.199473, test acc: 0.944881  test ins_iou: 0.856026
Learning rate: 0.000375
Train 140, loss: 0.068124, train acc: 0.972992, train ins_iou: 0.907960
Test 140, loss: 0.205068, test acc: 0.944710  test ins_iou: 0.855845
Learning rate: 0.000375
Train 141, loss: 0.067832, train acc: 0.973137, train ins_iou: 0.908451
Test 141, loss: 0.200076, test acc: 0.945552  test ins_iou: 0.856140
Learning rate: 0.000375
Train 142, loss: 0.067943, train acc: 0.973047, train ins_iou: 0.908164
Test 142, loss: 0.199569, test acc: 0.944738  test ins_iou: 0.855759
Learning rate: 0.000375
Train 143, loss: 0.067801, train acc: 0.973132, train ins_iou: 0.908295
Test 143, loss: 0.200887, test acc: 0.944926  test ins_iou: 0.855896
Learning rate: 0.000375
Train 144, loss: 0.067081, train acc: 0.973408, train ins_iou: 0.908824
Test 144, loss: 0.199885, test acc: 0.944286  test ins_iou: 0.854380
Learning rate: 0.000375
Train 145, loss: 0.067250, train acc: 0.973303, train ins_iou: 0.908521
Test 145, loss: 0.202223, test acc: 0.944717  test ins_iou: 0.855331
Learning rate: 0.000375
Train 146, loss: 0.066965, train acc: 0.973380, train ins_iou: 0.908892
Test 146, loss: 0.198645, test acc: 0.945212  test ins_iou: 0.856395
Learning rate: 0.000375
Train 147, loss: 0.066817, train acc: 0.973521, train ins_iou: 0.909066
Test 147, loss: 0.201643, test acc: 0.945394  test ins_iou: 0.856215
Learning rate: 0.000375
Train 148, loss: 0.067050, train acc: 0.973356, train ins_iou: 0.909117
Test 148, loss: 0.199245, test acc: 0.945384  test ins_iou: 0.857010
Max instance iou:0.85701
Learning rate: 0.000375
Train 149, loss: 0.066834, train acc: 0.973419, train ins_iou: 0.909195
Test 149, loss: 0.203211, test acc: 0.945078  test ins_iou: 0.854936
Learning rate: 0.000375
Train 150, loss: 0.066974, train acc: 0.973309, train ins_iou: 0.908962
Test 150, loss: 0.199498, test acc: 0.945195  test ins_iou: 0.855496
Learning rate: 0.000375
Train 151, loss: 0.066619, train acc: 0.973525, train ins_iou: 0.909016
Test 151, loss: 0.200817, test acc: 0.945295  test ins_iou: 0.856306
aero iou: 0.839331
bag iou: 0.8313002
cap iou: 0.82887536
car iou: 0.80324703
chair iou: 0.9002722
ear iou: 0.78587645
guitar iou: 0.91750175
knife iou: 0.8845512
lamp iou: 0.82219803
lapt iou: 0.9593692
moto iou: 0.75069994
mug iou: 0.9471545
Pistol iou: 0.8366596
rock iou: 0.617348
stake iou: 0.81679994
table iou: 0.8338517
Max class iou:0.83594
Learning rate: 0.000375
Train 152, loss: 0.066500, train acc: 0.973510, train ins_iou: 0.908826
Test 152, loss: 0.198592, test acc: 0.946004  test ins_iou: 0.856215
Max Acc:0.94600
Learning rate: 0.000375
Train 153, loss: 0.066344, train acc: 0.973622, train ins_iou: 0.909890
Test 153, loss: 0.205144, test acc: 0.945007  test ins_iou: 0.856162
Learning rate: 0.000375
Train 154, loss: 0.066339, train acc: 0.973632, train ins_iou: 0.909762
Test 154, loss: 0.204679, test acc: 0.944694  test ins_iou: 0.855474
Learning rate: 0.000375
Train 155, loss: 0.066079, train acc: 0.973719, train ins_iou: 0.909822
Test 155, loss: 0.203534, test acc: 0.944950  test ins_iou: 0.855123
Learning rate: 0.000375
Train 156, loss: 0.066028, train acc: 0.973739, train ins_iou: 0.909840
Test 156, loss: 0.200755, test acc: 0.945284  test ins_iou: 0.856229
aero iou: 0.8356414
bag iou: 0.81961
cap iou: 0.85369104
car iou: 0.8001357
chair iou: 0.8999727
ear iou: 0.7833739
guitar iou: 0.9211681
knife iou: 0.87591684
lamp iou: 0.81710047
lapt iou: 0.96059227
moto iou: 0.76907235
mug iou: 0.9476992
Pistol iou: 0.84105486
rock iou: 0.5966305
stake iou: 0.82683253
table iou: 0.83611274
Max class iou:0.83654
Learning rate: 0.000375
Train 157, loss: 0.065745, train acc: 0.973833, train ins_iou: 0.910421
Test 157, loss: 0.201456, test acc: 0.945095  test ins_iou: 0.855851
Learning rate: 0.000375
Train 158, loss: 0.065855, train acc: 0.973694, train ins_iou: 0.909800
Test 158, loss: 0.203980, test acc: 0.944522  test ins_iou: 0.855402
Learning rate: 0.000375
Train 159, loss: 0.065805, train acc: 0.973767, train ins_iou: 0.909933
Test 159, loss: 0.205013, test acc: 0.944642  test ins_iou: 0.856039
Learning rate: 0.000188
Train 160, loss: 0.065461, train acc: 0.973934, train ins_iou: 0.910261
Test 160, loss: 0.205075, test acc: 0.944798  test ins_iou: 0.855764
Learning rate: 0.000188
Train 161, loss: 0.064536, train acc: 0.974265, train ins_iou: 0.911621
Test 161, loss: 0.203474, test acc: 0.944993  test ins_iou: 0.855775
Learning rate: 0.000188
Train 162, loss: 0.064208, train acc: 0.974343, train ins_iou: 0.911625
Test 162, loss: 0.205583, test acc: 0.944635  test ins_iou: 0.855163
Learning rate: 0.000188
Train 163, loss: 0.063916, train acc: 0.974479, train ins_iou: 0.911693
Test 163, loss: 0.203869, test acc: 0.945691  test ins_iou: 0.856589
Learning rate: 0.000188
Train 164, loss: 0.063809, train acc: 0.974570, train ins_iou: 0.912484
Test 164, loss: 0.206307, test acc: 0.945056  test ins_iou: 0.855217
Learning rate: 0.000188
Train 165, loss: 0.063849, train acc: 0.974539, train ins_iou: 0.912248
Test 165, loss: 0.205198, test acc: 0.945159  test ins_iou: 0.856365
